{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17","program":"/Users/adamtoth-fejel/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_core","/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=f20f13393ed8a016","-C","extra-filename=-f20f13393ed8a016","--out-dir","/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps","-L","dependency=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps","--extern","bytes=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libbytes-cebad90317688298.rmeta","--extern","futures=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libfutures-2dae1345b4a8777c.rmeta","--extern","iovec=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libiovec-af7b46b0b20db5f1.rmeta","--extern","log=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/liblog-690a8649ebdf7e19.rmeta","--extern","mio=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libmio-2a7426277454f039.rmeta","--extern","scoped_tls=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libscoped_tls-ed5916fc219d1eab.rmeta","--extern","tokio=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libtokio-ab042e89ec815187.rmeta","--extern","tokio_executor=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libtokio_executor-b20969a95eef4795.rmeta","--extern","tokio_io=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libtokio_io-9fb1bed11a83bed3.rmeta","--extern","tokio_reactor=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libtokio_reactor-460de595012594bf.rmeta","--extern","tokio_timer=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libtokio_timer-a08f26ae50ec941c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/adamtoth-fejel/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libtokio_core-f20f13393ed8a016.rmeta"},"prelude":{"crate_id":{"name":"tokio_core","disambiguator":[4155425827819944665,796024150838622674]},"crate_root":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src","external_crates":[{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12669636623235690034,8759211680751900309]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5693088722327716739,2147858288623464010]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15524063101320593432,10022011492683157993]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14556973752653035032,10499433159243229334]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1934112228416746928,18062520869078565162]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18272308394612376465,2983342869845535113]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7982440001281678496,5082264322901945876]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17333179571007866912,15310387900280001912]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17767206385810259554,6284392829264960128]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6917085151040958166,7936695879549379973]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14883612992525439991,13188753928230923968]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8362867231865330830,11957228790523419708]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13374155178358367403,7714447127929209529]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7401024017757537210,13419518921059338139]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":15,"id":{"name":"bytes","disambiguator":[14797348764476402299,14983483664133661904]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[18289272082200131756,5369542155660883844]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":17,"id":{"name":"iovec","disambiguator":[2086836229962985690,6031101566350721973]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[3074611054884685278,9956408718025469898]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":19,"id":{"name":"either","disambiguator":[15157223076714909878,18134419045680280503]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":20,"id":{"name":"futures","disambiguator":[17761477340959119800,5629911031064413601]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":21,"id":{"name":"mio","disambiguator":[17171657581738676108,253933660739644420]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":22,"id":{"name":"net2","disambiguator":[4806509198014927544,15579536304693450220]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[7833687627836604579,4470305283839067124]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":24,"id":{"name":"slab","disambiguator":[5127147845448239595,10546857444037774172]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":25,"id":{"name":"log","disambiguator":[6037545166998675300,13205773147013513436]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":26,"id":{"name":"tokio","disambiguator":[9445667286276365118,3462669891211646628]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":27,"id":{"name":"num_cpus","disambiguator":[8764392702184754609,14506773341488694482]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":28,"id":{"name":"tokio_codec","disambiguator":[6594121395359314613,12402895590395594894]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":29,"id":{"name":"tokio_io","disambiguator":[5513608505884875156,13018805184581554157]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":30,"id":{"name":"tokio_current_thread","disambiguator":[9329981550191401600,9347831077294274743]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":31,"id":{"name":"tokio_executor","disambiguator":[12227118397114661584,2448267641276679311]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":32,"id":{"name":"crossbeam_utils","disambiguator":[3288079004621224410,9688228955349900416]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":33,"id":{"name":"lazy_static","disambiguator":[4479046878528310013,10368080389544332627]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":34,"id":{"name":"tokio_fs","disambiguator":[5009257238323010719,17443734101109315189]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":35,"id":{"name":"tokio_threadpool","disambiguator":[7629519253746819713,1160062699125154307]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":36,"id":{"name":"crossbeam_deque","disambiguator":[3792296470339412158,6933436680306968864]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":37,"id":{"name":"crossbeam_epoch","disambiguator":[3597457920883007504,12501143358809022955]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":38,"id":{"name":"maybe_uninit","disambiguator":[1758277342061031645,16941751086124766622]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":39,"id":{"name":"memoffset","disambiguator":[3383705854728511536,13102669287414299662]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":40,"id":{"name":"scopeguard","disambiguator":[14019850996816892256,10218385102540380230]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":41,"id":{"name":"crossbeam_queue","disambiguator":[3125686909349066373,1138275066275836114]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":42,"id":{"name":"tokio_reactor","disambiguator":[1444164719042457821,4138199722540449125]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":43,"id":{"name":"parking_lot","disambiguator":[5805110119901837029,11720126644662260716]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":44,"id":{"name":"lock_api","disambiguator":[14776089839667211744,8785065116963138984]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":45,"id":{"name":"parking_lot_core","disambiguator":[6677159734264609395,1336995852145352731]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":46,"id":{"name":"smallvec","disambiguator":[9716089461563384069,1974845233071684231]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":47,"id":{"name":"tokio_sync","disambiguator":[8540641541187256686,17983733789691552629]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":48,"id":{"name":"fnv","disambiguator":[6697927214615602866,17760696656221901046]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":49,"id":{"name":"tokio_tcp","disambiguator":[3944778159927992972,1318488086671411815]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":50,"id":{"name":"tokio_timer","disambiguator":[11563296057851031979,1476840655186502596]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":51,"id":{"name":"tokio_udp","disambiguator":[11867575359317787577,10107097631277547966]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":52,"id":{"name":"tokio_uds","disambiguator":[788157840371242571,18217052961791601027]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":53,"id":{"name":"mio_uds","disambiguator":[15608343125778499163,18124015164111711652]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","num":54,"id":{"name":"scoped_tls","disambiguator":[17897037376108677423,15506898470809900707]}}],"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":0,"byte_end":3895,"line_start":1,"line_end":121,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5556,"byte_end":5560,"line_start":55,"line_end":55,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5562,"byte_end":5566,"line_start":55,"line_end":55,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5591,"byte_end":5598,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"alias_span":null,"name":"EasyBuf","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5600,"byte_end":5610,"line_start":56,"line_end":56,"column_start":32,"column_end":42},"alias_span":null,"name":"EasyBufMut","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5612,"byte_end":5618,"line_start":56,"line_end":56,"column_start":44,"column_end":50},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5620,"byte_end":5625,"line_start":56,"line_end":56,"column_start":52,"column_end":57},"alias_span":null,"name":"Codec","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5650,"byte_end":5655,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"alias_span":null,"name":"flush","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5657,"byte_end":5662,"line_start":57,"line_end":57,"column_start":30,"column_end":35},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5692,"byte_end":5702,"line_start":58,"line_end":58,"column_start":28,"column_end":38},"alias_span":null,"name":"read_exact","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5704,"byte_end":5713,"line_start":58,"line_end":58,"column_start":40,"column_end":49},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":223},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5744,"byte_end":5755,"line_start":59,"line_end":59,"column_start":29,"column_end":40},"alias_span":null,"name":"read_to_end","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5757,"byte_end":5766,"line_start":59,"line_end":59,"column_start":42,"column_end":51},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5790,"byte_end":5794,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5796,"byte_end":5800,"line_start":60,"line_end":60,"column_start":28,"column_end":32},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5830,"byte_end":5840,"line_start":61,"line_end":61,"column_start":28,"column_end":38},"alias_span":null,"name":"read_until","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5842,"byte_end":5851,"line_start":61,"line_end":61,"column_start":40,"column_end":49},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":291},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5876,"byte_end":5884,"line_start":62,"line_end":62,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5886,"byte_end":5895,"line_start":62,"line_end":62,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5920,"byte_end":5926,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5954,"byte_end":5963,"line_start":64,"line_end":64,"column_start":27,"column_end":36},"alias_span":null,"name":"write_all","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5965,"byte_end":5973,"line_start":64,"line_end":64,"column_start":38,"column_end":46},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57572,"byte_end":57581,"line_start":9,"line_end":9,"column_start":21,"column_end":30},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57583,"byte_end":57595,"line_start":9,"line_end":9,"column_start":32,"column_end":44},"alias_span":null,"name":"TcpStreamNew","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57618,"byte_end":57629,"line_start":10,"line_end":10,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57631,"byte_end":57639,"line_start":10,"line_end":10,"column_start":34,"column_end":42},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":589},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57662,"byte_end":57671,"line_start":11,"line_end":11,"column_start":21,"column_end":30},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57673,"byte_end":57681,"line_start":11,"line_end":11,"column_start":32,"column_end":40},"alias_span":null,"name":"UdpCodec","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":610},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57683,"byte_end":57692,"line_start":11,"line_end":11,"column_start":42,"column_end":51},"alias_span":null,"name":"UdpFramed","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57694,"byte_end":57703,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"alias_span":null,"name":"SendDgram","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":688},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57705,"byte_end":57714,"line_start":11,"line_end":11,"column_start":64,"column_end":73},"alias_span":null,"name":"RecvDgram","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112024,"byte_end":112035,"line_start":31,"line_end":31,"column_start":29,"column_end":40},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":714}},{"kind":"Use","ref_id":{"krate":0,"index":1084},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112125,"byte_end":112132,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":714}},{"kind":"Use","ref_id":{"krate":0,"index":955},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112158,"byte_end":112166,"line_start":34,"line_end":34,"column_start":25,"column_end":33},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":714}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":0,"byte_end":3895,"line_start":1,"line_end":121,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":411},{"krate":0,"index":714}],"decl_id":null,"docs":" `Future`-powered I/O at the core of Tokio","sig":null,"attributes":[{"value":"! `Future`-powered I/O at the core of Tokio","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate uses the `futures` crate to provide an event loop (\"reactor","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":50,"byte_end":124,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! core\") which can be used to drive I/O like TCP and UDP, spawned future","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":125,"byte_end":199,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! tasks, and other events like channels/timeouts. All asynchronous I/O is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":200,"byte_end":275,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! powered by the `mio` crate.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":276,"byte_end":307,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":308,"byte_end":311,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The concrete types provided in this crate are relatively bare bones but are","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":312,"byte_end":391,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"! intended to be the essential foundation for further projects needing an","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":392,"byte_end":467,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! event loop. In this crate you'll find:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":468,"byte_end":510,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":511,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! * TCP, both streams and listeners","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":515,"byte_end":552,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"! * UDP sockets","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":553,"byte_end":570,"line_start":13,"line_end":13,"column_start":1,"column_end":18}},{"value":"! * Timeouts","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":571,"byte_end":585,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"! * An event loop to run futures","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":586,"byte_end":620,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":621,"byte_end":624,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! More functionality is likely to be added over time, but otherwise the crate","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":625,"byte_end":704,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! is intended to be flexible, with the `PollEvented` type accepting any","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":705,"byte_end":778,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"! type that implements `mio::Evented`. For example, the `tokio-uds` crate","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":779,"byte_end":854,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"! uses `PollEvented` to provide support for Unix domain sockets.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":855,"byte_end":921,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":922,"byte_end":925,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Some other important tasks covered by this crate are:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":926,"byte_end":983,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":984,"byte_end":987,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! * The ability to spawn futures into an event loop. The `Handle` and `Remote`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":988,"byte_end":1068,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"!   types have a `spawn` method which allows executing a future on an event","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1069,"byte_end":1146,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"!   loop. The `Handle::spawn` method crucially does not require the future","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1147,"byte_end":1223,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"!   itself to be `Send`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1224,"byte_end":1250,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1251,"byte_end":1254,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! * The `Io` trait serves as an abstraction for future crates to build on top","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1255,"byte_end":1334,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"!   of. This packages up `Read` and `Write` functionality as well as the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1335,"byte_end":1409,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"!   ability to poll for readiness on both ends.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1410,"byte_end":1459,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1460,"byte_end":1463,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! * All I/O is futures-aware. If any action in this crate returns \"not ready\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1464,"byte_end":1543,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   or \"would block\", then the current future task is scheduled to receive a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1544,"byte_end":1622,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   notification when it would otherwise make progress.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1623,"byte_end":1680,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1681,"byte_end":1684,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! You can find more extensive documentation in terms of tutorials at","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1685,"byte_end":1755,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"! [https://tokio.rs](https://tokio.rs).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1756,"byte_end":1797,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1798,"byte_end":1801,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1802,"byte_end":1816,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1817,"byte_end":1820,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1821,"byte_end":1850,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1851,"byte_end":1854,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1855,"byte_end":1868,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"! extern crate futures;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1869,"byte_end":1894,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! extern crate tokio_core;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1895,"byte_end":1923,"line_start":46,"line_end":46,"column_start":1,"column_end":29}},{"value":"! extern crate tokio_io;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1924,"byte_end":1950,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1951,"byte_end":1954,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! use futures::{Future, Stream};","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1955,"byte_end":1989,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"! use tokio_io::AsyncRead;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":1990,"byte_end":2018,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"! use tokio_io::io::copy;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2019,"byte_end":2046,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"! use tokio_core::net::TcpListener;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2047,"byte_end":2084,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"! use tokio_core::reactor::Core;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2085,"byte_end":2119,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2120,"byte_end":2123,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2124,"byte_end":2139,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"!     // Create the event loop that will drive this server","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2140,"byte_end":2200,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"!     let mut core = Core::new().unwrap();","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2201,"byte_end":2245,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"!     let handle = core.handle();","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2246,"byte_end":2281,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"!     // Bind the server's socket","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2286,"byte_end":2321,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"!     let addr = \"127.0.0.1:12345\".parse().unwrap();","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2322,"byte_end":2376,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"!     let listener = TcpListener::bind(&addr, &handle).unwrap();","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2377,"byte_end":2443,"line_start":62,"line_end":62,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2444,"byte_end":2447,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"!     // Pull out a stream of sockets for incoming connections","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2448,"byte_end":2512,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"!     let server = listener.incoming().for_each(|(sock, _)| {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2513,"byte_end":2576,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"!         // Split up the reading and writing parts of the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2577,"byte_end":2637,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"!         // socket","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2638,"byte_end":2659,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"!         let (reader, writer) = sock.split();","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2660,"byte_end":2708,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2709,"byte_end":2712,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"!         // A future that echos the data and returns how","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2713,"byte_end":2772,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"!         // many bytes were copied...","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2773,"byte_end":2813,"line_start":71,"line_end":71,"column_start":1,"column_end":41}},{"value":"!         let bytes_copied = copy(reader, writer);","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2814,"byte_end":2866,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2867,"byte_end":2870,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!         // ... after which we'll print what happened","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2871,"byte_end":2927,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"!         let handle_conn = bytes_copied.map(|amt| {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2928,"byte_end":2982,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"!             println!(\"wrote {:?} bytes\", amt)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":2983,"byte_end":3032,"line_start":76,"line_end":76,"column_start":1,"column_end":50}},{"value":"!         }).map_err(|err| {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3033,"byte_end":3063,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"!             println!(\"IO error {:?}\", err)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3064,"byte_end":3110,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"!         });","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3111,"byte_end":3126,"line_start":79,"line_end":79,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3127,"byte_end":3130,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!         // Spawn the future as a concurrent task","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3131,"byte_end":3183,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"!         handle.spawn(handle_conn);","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3184,"byte_end":3222,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3223,"byte_end":3226,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!         Ok(())","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3227,"byte_end":3245,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"!     });","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3246,"byte_end":3257,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3258,"byte_end":3261,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // Spin up the server on the event loop","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3262,"byte_end":3309,"line_start":87,"line_end":87,"column_start":1,"column_end":48}},{"value":"!     core.run(server).unwrap();","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3310,"byte_end":3344,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"! }","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3345,"byte_end":3350,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3351,"byte_end":3358,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3421,"byte_end":3443,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3444,"byte_end":3462,"line_start":94,"line_end":94,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":55},{"krate":0,"index":156},{"krate":0,"index":174},{"krate":0,"index":205},{"krate":0,"index":230},{"krate":0,"index":256},{"krate":0,"index":283},{"krate":0,"index":312},{"krate":0,"index":334},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":403}],"decl_id":null,"docs":" I/O conveniences when working with primitives in `tokio-core`","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3793,"byte_end":3805,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"! I/O conveniences when working with primitives in `tokio-core`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":3897,"byte_end":3962,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":3963,"byte_end":3966,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains various combinators to work with I/O objects and type definitions","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":3967,"byte_end":4045,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! as well.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4046,"byte_end":4058,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4059,"byte_end":4062,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! A description of the high-level I/O combinators can be [found online] in","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4063,"byte_end":4139,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"! addition to a description of the [low level details].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4140,"byte_end":4197,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4198,"byte_end":4201,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [found online]: https://tokio.rs/docs/getting-started/core/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4202,"byte_end":4265,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"! [low level details]: https://tokio.rs/docs/going-deeper-tokio/core-low-level/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4266,"byte_end":4347,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"deprecated(note = \"moved to the `tokio-io` crate\")","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4349,"byte_end":4403,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"allow(deprecated)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4404,"byte_end":4425,"line_start":13,"line_end":13,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4642,"byte_end":4650,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"IoFuture","qualname":"::io::IoFuture","value":"BoxFuture<T, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenience typedef around a `Future` whose error component is `io::Error`\n","sig":null,"attributes":[{"value":"/ A convenience typedef around a `Future` whose error component is `io::Error`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4552,"byte_end":4632,"line_start":22,"line_end":22,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4772,"byte_end":4780,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"IoStream","qualname":"::io::IoStream","value":"BoxStream<T, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenience typedef around a `Stream` whose error component is `io::Error`\n","sig":null,"attributes":[{"value":"/ A convenience typedef around a `Stream` whose error component is `io::Error`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":4682,"byte_end":4762,"line_start":25,"line_end":25,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14464,"byte_end":14468,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" A future which will copy all data from a reader into a writer.","sig":null,"attributes":[{"value":"/ A future which will copy all data from a reader into a writer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14177,"byte_end":14243,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14244,"byte_end":14247,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the [`copy`] function, this future will resolve to the number of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14248,"byte_end":14327,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ bytes copied or an error if one happens.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14328,"byte_end":14372,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14373,"byte_end":14376,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`copy`]: fn.copy.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14377,"byte_end":14403,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14404,"byte_end":14452,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":15120,"byte_end":15124,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"fn <R, W> (reader: R, writer: W) -> Copy<R, W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents copying all the bytes from one object to\n another.","sig":null,"attributes":[{"value":"/ Creates a future which represents copying all the bytes from one object to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14597,"byte_end":14675,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ another.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14676,"byte_end":14688,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14689,"byte_end":14692,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from `reader` into the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14693,"byte_end":14768,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14769,"byte_end":14849,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14850,"byte_end":14922,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14923,"byte_end":14936,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14937,"byte_end":14940,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned and the `reader` and `writer` are","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":14941,"byte_end":15021,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ consumed. On error the error is returned and the I/O objects are consumed as","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":15022,"byte_end":15102,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ well.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":15103,"byte_end":15112,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17206,"byte_end":17213,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"EasyBuf","qualname":"::io::frame::EasyBuf","value":"EasyBuf {  }","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078}],"decl_id":null,"docs":" A reference counted buffer of bytes.","sig":null,"attributes":[{"value":"/ A reference counted buffer of bytes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":16854,"byte_end":16894,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":16895,"byte_end":16898,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An `EasyBuf` is a representation of a byte buffer where sub-slices of it can","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":16899,"byte_end":16979,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ be handed out efficiently, each with a `'static` lifetime which keeps the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":16980,"byte_end":17057,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ data alive. The buffer also supports mutation but may require bytes to be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17058,"byte_end":17135,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ copied to complete the operation.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17136,"byte_end":17173,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17393,"byte_end":17403,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"EasyBufMut","qualname":"::io::frame::EasyBufMut","value":"EasyBufMut {  }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" An RAII object returned from `get_mut` which provides mutable access to the\n underlying `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ An RAII object returned from `get_mut` which provides mutable access to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17276,"byte_end":17355,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ underlying `Vec<u8>`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17356,"byte_end":17381,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17558,"byte_end":17561,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<EasyBuf>::new","value":"fn () -> EasyBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new EasyBuf with no data and the default capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new EasyBuf with no data and the default capacity.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17482,"byte_end":17546,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17695,"byte_end":17708,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<EasyBuf>::with_capacity","value":"fn (cap: usize) -> EasyBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new EasyBuf with `cap` capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new EasyBuf with `cap` capacity.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17637,"byte_end":17683,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":18979,"byte_end":18982,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"len","qualname":"<EasyBuf>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `EasyBuf`.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `EasyBuf`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":18907,"byte_end":18967,"line_start":80,"line_end":80,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19114,"byte_end":19122,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<EasyBuf>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner contents of this `EasyBuf` as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the inner contents of this `EasyBuf` as a slice.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19042,"byte_end":19102,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19541,"byte_end":19550,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"split_off","qualname":"<EasyBuf>::split_off","value":"fn (&mut self, at: usize) -> EasyBuf","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19174,"byte_end":19224,"line_start":90,"line_end":90,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19229,"byte_end":19232,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned `EasyBuf`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19237,"byte_end":19314,"line_start":92,"line_end":92,"column_start":5,"column_end":82}},{"value":"/ contains elements `[at, len)`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19319,"byte_end":19353,"line_start":93,"line_end":93,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19358,"byte_end":19361,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is an O(1) operation that just increases the reference count and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19366,"byte_end":19439,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ sets a few indexes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19444,"byte_end":19467,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19472,"byte_end":19475,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19480,"byte_end":19492,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19497,"byte_end":19500,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19505,"byte_end":19529,"line_start":100,"line_end":100,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20145,"byte_end":20153,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"drain_to","qualname":"<EasyBuf>::drain_to","value":"fn (&mut self, at: usize) -> EasyBuf","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19778,"byte_end":19828,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19833,"byte_end":19836,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned `EasyBuf`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19841,"byte_end":19920,"line_start":111,"line_end":111,"column_start":5,"column_end":84}},{"value":"/ contains elements `[0, at)`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19925,"byte_end":19957,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19962,"byte_end":19965,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This is an O(1) operation that just increases the reference count and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":19970,"byte_end":20043,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ sets a few indexes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20048,"byte_end":20071,"line_start":115,"line_end":115,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20076,"byte_end":20079,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20084,"byte_end":20096,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20101,"byte_end":20104,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20109,"byte_end":20133,"line_start":119,"line_end":119,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":21138,"byte_end":21145,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<EasyBuf>::get_mut","value":"fn (&mut self) -> EasyBufMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying growable buffer of bytes.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying growable buffer of bytes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20381,"byte_end":20456,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20461,"byte_end":20464,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If this `EasyBuf` is the only instance pointing at the underlying buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20469,"byte_end":20545,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ of bytes, a direct mutable reference will be returned. Otherwise the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20550,"byte_end":20622,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ contents of this `EasyBuf` will be reallocated in a fresh `Vec<u8>`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20627,"byte_end":20698,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ allocation with the same capacity as an `EasyBuf` created with `EasyBuf::new()`,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20703,"byte_end":20787,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/ and that allocation will be returned.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20792,"byte_end":20833,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20838,"byte_end":20841,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This operation **is not O(1)** as it may clone the entire contents of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20846,"byte_end":20919,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ this buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20924,"byte_end":20940,"line_start":137,"line_end":137,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20945,"byte_end":20948,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned `EasyBufMut` type implement `Deref` and `DerefMut` to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":20953,"byte_end":21023,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ `Vec<u8>` can the byte buffer can be manipulated using the standard","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":21028,"byte_end":21099,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ `Vec<u8>` methods.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":21104,"byte_end":21126,"line_start":141,"line_end":141,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24569,"byte_end":24574,"line_start":258,"line_end":258,"column_start":11,"column_end":16},"name":"Codec","qualname":"::io::frame::Codec","value":"Codec","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":" Encoding and decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Encoding and decoding of frames via buffers.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23951,"byte_end":23999,"line_start":247,"line_end":247,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24000,"byte_end":24003,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `Framed`. It provides","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24004,"byte_end":24081,"line_start":249,"line_end":249,"column_start":1,"column_end":78}},{"value":"/ two types: `In`, for decoded input frames, and `Out`, for outgoing frames","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24082,"byte_end":24159,"line_start":250,"line_end":250,"column_start":1,"column_end":78}},{"value":"/ that need to be encoded. It also provides methods to actually perform the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24160,"byte_end":24237,"line_start":251,"line_end":251,"column_start":1,"column_end":78}},{"value":"/ encoding and decoding, which work with corresponding buffer types.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24238,"byte_end":24308,"line_start":252,"line_end":252,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24309,"byte_end":24312,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ The trait itself is implemented on a type that can track state for decoding","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24313,"byte_end":24392,"line_start":254,"line_end":254,"column_start":1,"column_end":80}},{"value":"/ or encoding, which is particularly useful for streaming parsers. In many","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24393,"byte_end":24469,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ cases, though, this type will simply be a unit struct (e.g. `struct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24470,"byte_end":24541,"line_start":256,"line_end":256,"column_start":1,"column_end":72}},{"value":"/ HttpCodec`).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24542,"byte_end":24558,"line_start":257,"line_end":257,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24622,"byte_end":24624,"line_start":260,"line_end":260,"column_start":10,"column_end":12},"name":"In","qualname":"::io::frame::Codec::In","value":"type In;","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24581,"byte_end":24612,"line_start":259,"line_end":259,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24678,"byte_end":24681,"line_start":263,"line_end":263,"column_start":10,"column_end":13},"name":"Out","qualname":"::io::frame::Codec::Out","value":"type Out;","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" The type of frames to be encoded.\n","sig":null,"attributes":[{"value":"/ The type of frames to be encoded.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24631,"byte_end":24668,"line_start":262,"line_end":262,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25827,"byte_end":25833,"line_start":285,"line_end":285,"column_start":8,"column_end":14},"name":"decode","qualname":"::io::frame::Codec::decode","value":"fn (&mut self, buf: &mut EasyBuf) -> io::Result<Option<Self::In>>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24688,"byte_end":24753,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24758,"byte_end":24761,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method is called by `Framed` whenever bytes are ready to be parsed.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24766,"byte_end":24842,"line_start":267,"line_end":267,"column_start":5,"column_end":81}},{"value":"/ The provided buffer of bytes is what's been read so far, and this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24847,"byte_end":24916,"line_start":268,"line_end":268,"column_start":5,"column_end":74}},{"value":"/ instance of `Decode` can determine whether an entire frame is in the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24921,"byte_end":24993,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/ buffer and is ready to be returned.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":24998,"byte_end":25037,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25042,"byte_end":25045,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25050,"byte_end":25123,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25128,"byte_end":25191,"line_start":273,"line_end":273,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25196,"byte_end":25271,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25276,"byte_end":25351,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25356,"byte_end":25379,"line_start":276,"line_end":276,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25384,"byte_end":25387,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25392,"byte_end":25464,"line_start":278,"line_end":278,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the `Framed` instance that","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25469,"byte_end":25541,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25546,"byte_end":25616,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25621,"byte_end":25624,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25629,"byte_end":25699,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25704,"byte_end":25777,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25782,"byte_end":25819,"line_start":284,"line_end":284,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26267,"byte_end":26277,"line_start":293,"line_end":293,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::io::frame::Codec::decode_eof","value":"fn (&mut self, buf: &mut EasyBuf) -> io::Result<Self::In>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25902,"byte_end":25974,"line_start":287,"line_end":287,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":25979,"byte_end":26028,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26033,"byte_end":26036,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26041,"byte_end":26109,"line_start":290,"line_end":290,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned. Typically this doesn't need to be implemented","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26114,"byte_end":26187,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ unless the framing protocol differs near the end of the stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26192,"byte_end":26259,"line_start":292,"line_end":292,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26823,"byte_end":26829,"line_start":306,"line_end":306,"column_start":8,"column_end":14},"name":"encode","qualname":"::io::frame::Codec::encode","value":"fn (&mut self, msg: Self::Out, buf: &mut Vec<u8>) -> io::Result<()>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26563,"byte_end":26608,"line_start":301,"line_end":301,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26613,"byte_end":26616,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This method will encode `msg` into the byte buffer provided by `buf`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26621,"byte_end":26694,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ The `buf` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26699,"byte_end":26772,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26777,"byte_end":26815,"line_start":305,"line_end":305,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":27168,"byte_end":27174,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"Framed","qualname":"::io::frame::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying `Io` object, using\n the `Codec` trait to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified `Stream` and `Sink` interface to an underlying `Io` object, using","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26898,"byte_end":26977,"line_start":309,"line_end":309,"column_start":1,"column_end":80}},{"value":"/ the `Codec` trait to encode and decode frames.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":26978,"byte_end":27028,"line_start":310,"line_end":310,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":27029,"byte_end":27032,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ You can acquire a `Framed` instance by using the `Io::framed` adapter.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":27033,"byte_end":27107,"line_start":312,"line_end":312,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":27108,"byte_end":27156,"line_start":313,"line_end":313,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31122,"byte_end":31129,"line_start":433,"line_end":433,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, C>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":30847,"byte_end":30920,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":30925,"byte_end":30928,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":30933,"byte_end":31008,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31013,"byte_end":31089,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31094,"byte_end":31110,"line_start":432,"line_end":432,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31470,"byte_end":31477,"line_start":443,"line_end":443,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, C>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31179,"byte_end":31250,"line_start":437,"line_end":437,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31255,"byte_end":31268,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31273,"byte_end":31276,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31281,"byte_end":31356,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31361,"byte_end":31437,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31442,"byte_end":31458,"line_start":442,"line_end":442,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31804,"byte_end":31814,"line_start":452,"line_end":452,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, C>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31539,"byte_end":31602,"line_start":447,"line_end":447,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31607,"byte_end":31610,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31615,"byte_end":31690,"line_start":449,"line_end":449,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31695,"byte_end":31771,"line_start":450,"line_end":450,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":31776,"byte_end":31792,"line_start":451,"line_end":451,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36806,"byte_end":36811,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":166}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"/ A future used to fully flush an I/O object.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36538,"byte_end":36585,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36586,"byte_end":36589,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Resolves to the underlying I/O object once the flush operation is complete.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36590,"byte_end":36669,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36670,"byte_end":36673,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Created by the [`flush`] function.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36674,"byte_end":36712,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36713,"byte_end":36716,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`flush`]: fn.flush.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36717,"byte_end":36745,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36746,"byte_end":36794,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":37156,"byte_end":37161,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::flush::flush","value":"fn <A> (a: A) -> Flush<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush an I/O object and then yield the\n object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush an I/O object and then yield the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36838,"byte_end":36917,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ object itself.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36918,"byte_end":36936,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36937,"byte_end":36940,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This function will consume the object provided if an error happens, and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":36941,"byte_end":37016,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ otherwise it will repeatedly call `flush` until it sees `Ok(())`, scheduling","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":37017,"byte_end":37097,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ a retry if `WouldBlock` is seen along the way.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":37098,"byte_end":37148,"line_start":22,"line_end":22,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37813,"byte_end":37822,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" A future which can be used to easily read exactly enough bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read exactly enough bytes to fill","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37573,"byte_end":37647,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ a buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37648,"byte_end":37661,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37662,"byte_end":37665,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read_exact`] function.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37666,"byte_end":37709,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37710,"byte_end":37713,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`read_exact`]: fn.read_exact.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37714,"byte_end":37752,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37753,"byte_end":37801,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38472,"byte_end":38482,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::read_exact::read_exact","value":"fn <A, T> (a: A, buf: T) -> ReadExact<A, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":37962,"byte_end":38034,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ returning an error if EOF is hit sooner.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38035,"byte_end":38079,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38080,"byte_end":38083,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned future will resolve to both the I/O stream as well as the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38084,"byte_end":38158,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ buffer once the read operation is completed.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38159,"byte_end":38207,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38208,"byte_end":38211,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38212,"byte_end":38289,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ the error yielded. In the case of success the object will be destroyed and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38290,"byte_end":38368,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ the buffer will be returned, with all data read from the stream appended to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38369,"byte_end":38448,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38449,"byte_end":38464,"line_start":35,"line_end":35,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39967,"byte_end":39976,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":215}],"decl_id":null,"docs":" A future which can be used to easily read the entire contents of a stream\n into a vector.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read the entire contents of a stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39716,"byte_end":39793,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ into a vector.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39794,"byte_end":39812,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39813,"byte_end":39816,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read_to_end`] function.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39817,"byte_end":39861,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39862,"byte_end":39865,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`read_to_end`]: fn.read_to_end.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39866,"byte_end":39906,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":39907,"byte_end":39955,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":223},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40473,"byte_end":40484,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::read_to_end::read_to_end","value":"fn <A> (a: A, buf: Vec<u8>) -> ReadToEnd<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with the I/O\n object `A` into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with the I/O","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40093,"byte_end":40167,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ object `A` into the buffer provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40168,"byte_end":40208,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40209,"byte_end":40212,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40213,"byte_end":40290,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ the error yielded. In the case of success the object will be destroyed and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40291,"byte_end":40369,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ the buffer will be returned, with all data read from the stream appended to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40370,"byte_end":40449,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40450,"byte_end":40465,"line_start":31,"line_end":31,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":243},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":41867,"byte_end":41871,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"read","qualname":"::io::read::read","value":"fn <R, T> (rd: R, buf: T) -> Read<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":41591,"byte_end":41665,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ manner, returning a future type.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":41666,"byte_end":41702,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":41703,"byte_end":41706,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned future will resolve to both the I/O stream and the buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":41707,"byte_end":41781,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ as well as the number of bytes read once the read operation is completed.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":41782,"byte_end":41859,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42219,"byte_end":42223,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":249}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read available number of bytes to fill","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42023,"byte_end":42102,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ a buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42103,"byte_end":42116,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42117,"byte_end":42120,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read`] function.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42121,"byte_end":42158,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42159,"byte_end":42207,"line_start":29,"line_end":29,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43265,"byte_end":43274,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":267}],"decl_id":null,"docs":" A future which can be used to easily read the contents of a stream into a \n vector until the delimiter is reached.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read the contents of a stream into a ","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":42992,"byte_end":43070,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ vector until the delimiter is reached.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43071,"byte_end":43113,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43114,"byte_end":43117,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read_until`] function.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43118,"byte_end":43161,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43162,"byte_end":43165,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`read_until`]: fn.read_until.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43166,"byte_end":43204,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43205,"byte_end":43253,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43998,"byte_end":44008,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::read_until::read_until","value":"fn <A> (a: A, byte: u8, buf: Vec<u8>) -> ReadUntil<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with the I/O\n object `A` into the buffer provided until the delimiter `byte` is reached.\n This method is the async equivalent to [`BufRead::read_until`].","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with the I/O","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43409,"byte_end":43483,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ object `A` into the buffer provided until the delimiter `byte` is reached.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43484,"byte_end":43562,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43563,"byte_end":43630,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43631,"byte_end":43634,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43635,"byte_end":43708,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ the error yielded. In the case of success the object will be destroyed and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43709,"byte_end":43787,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ the buffer will be returned, with all bytes up to, and including, the delimiter","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43788,"byte_end":43871,"line_start":32,"line_end":32,"column_start":1,"column_end":84}},{"value":"/ (if found).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43872,"byte_end":43887,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43888,"byte_end":43891,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`BufRead::read_until`]: https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_until","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":43892,"byte_end":43990,"line_start":35,"line_end":35,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45284,"byte_end":45292,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":293}],"decl_id":null,"docs":" The readable half of an object returned from `Io::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `Io::split`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45211,"byte_end":45272,"line_start":8,"line_end":8,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45397,"byte_end":45406,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":296}],"decl_id":null,"docs":" The writable half of an object returned from `Io::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `Io::split`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45324,"byte_end":45385,"line_start":13,"line_end":13,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45746,"byte_end":45755,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<ReadHalf<T>>::poll_read","value":"fn (&mut self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Calls the underlying `poll_read` function on this handling, testing to\n see if it's ready to be read from.\n","sig":null,"attributes":[{"value":"/ Calls the underlying `poll_read` function on this handling, testing to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45617,"byte_end":45691,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ see if it's ready to be read from.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45696,"byte_end":45734,"line_start":25,"line_end":25,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":46101,"byte_end":46111,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<WriteHalf<T>>::poll_write","value":"fn (&mut self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Calls the underlying `poll_write` function on this handling, testing to\n see if it's ready to be written to.\n","sig":null,"attributes":[{"value":"/ Calls the underlying `poll_write` function on this handling, testing to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45970,"byte_end":46045,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ see if it's ready to be written to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":46050,"byte_end":46089,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48019,"byte_end":48025,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47081,"byte_end":47128,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47129,"byte_end":47132,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47133,"byte_end":47209,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47210,"byte_end":47288,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47289,"byte_end":47365,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47366,"byte_end":47441,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47442,"byte_end":47515,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47516,"byte_end":47547,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47548,"byte_end":47551,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47552,"byte_end":47623,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47624,"byte_end":47703,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47704,"byte_end":47731,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47732,"byte_end":47735,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47736,"byte_end":47810,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47811,"byte_end":47885,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47886,"byte_end":47965,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":47966,"byte_end":48007,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48339,"byte_end":48342,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"fn (t: T) -> Window<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48115,"byte_end":48186,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48191,"byte_end":48201,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48206,"byte_end":48209,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48214,"byte_end":48288,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48293,"byte_end":48327,"line_start":30,"line_end":30,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48561,"byte_end":48568,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48464,"byte_end":48531,"line_start":38,"line_end":38,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48536,"byte_end":48549,"line_start":39,"line_end":39,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48713,"byte_end":48720,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48615,"byte_end":48683,"line_start":44,"line_end":44,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48688,"byte_end":48701,"line_start":45,"line_end":45,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48851,"byte_end":48861,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48779,"byte_end":48839,"line_start":50,"line_end":50,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49002,"byte_end":49007,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48905,"byte_end":48977,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48982,"byte_end":48990,"line_start":56,"line_end":56,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49154,"byte_end":49157,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49062,"byte_end":49129,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49134,"byte_end":49142,"line_start":62,"line_end":62,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49555,"byte_end":49564,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"set_start","qualname":"<Window<T>>::set_start","value":"fn (&mut self, start: usize) -> &mut Window<T>","parent":null,"children":[],"decl_id":null,"docs":" Changes the starting index of this window to the index specified.","sig":null,"attributes":[{"value":"/ Changes the starting index of this window to the index specified.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49210,"byte_end":49279,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49284,"byte_end":49287,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Returns the windows back to chain multiple calls to this method.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49292,"byte_end":49360,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49365,"byte_end":49368,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49373,"byte_end":49385,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49390,"byte_end":49393,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `start` is out of bounds for the underlying","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49398,"byte_end":49471,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ slice or if it comes after the `end` configured in this window.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49476,"byte_end":49543,"line_start":74,"line_end":74,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":50104,"byte_end":50111,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"set_end","qualname":"<Window<T>>::set_end","value":"fn (&mut self, end: usize) -> &mut Window<T>","parent":null,"children":[],"decl_id":null,"docs":" Changes the end index of this window to the index specified.","sig":null,"attributes":[{"value":"/ Changes the end index of this window to the index specified.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49763,"byte_end":49827,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49832,"byte_end":49835,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Returns the windows back to chain multiple calls to this method.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49840,"byte_end":49908,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49913,"byte_end":49916,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49921,"byte_end":49933,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49938,"byte_end":49941,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `end` is out of bounds for the underlying","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":49946,"byte_end":50017,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ slice or if it comes before the `start` configured in this window.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":50022,"byte_end":50092,"line_start":89,"line_end":89,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51109,"byte_end":51117,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A future used to write the entire contents of some data to a stream.","sig":null,"attributes":[{"value":"/ A future used to write the entire contents of some data to a stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":50872,"byte_end":50944,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":50945,"byte_end":50948,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`write_all`] top-level method.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":50949,"byte_end":51007,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51008,"byte_end":51011,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`write_all`]: fn.write_all.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51012,"byte_end":51048,"line_start":10,"line_end":10,"column_start":1,"column_end":37}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51049,"byte_end":51097,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":355},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51941,"byte_end":51950,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::write_all::write_all","value":"fn <A, T> (a: A, buf: T) -> WriteAll<A, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will write the entire contents of the buffer `buf` to\n the stream `a` provided.","sig":null,"attributes":[{"value":"/ Creates a future that will write the entire contents of the buffer `buf` to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51257,"byte_end":51336,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ the stream `a` provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51337,"byte_end":51365,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51366,"byte_end":51369,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The returned future will not return until all the data has been written, and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51370,"byte_end":51450,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ the future will resolve to the stream as well as the buffer (for reuse if","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51451,"byte_end":51528,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ needed).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51529,"byte_end":51541,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51542,"byte_end":51545,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Any error which happens during writing will cause both the stream and the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51546,"byte_end":51623,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ buffer to get destroyed.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51624,"byte_end":51652,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51653,"byte_end":51656,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `buf` parameter here only requires the `AsRef<[u8]>` trait, which should","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51657,"byte_end":51737,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ be broadly applicable to accepting data which can be converted to a slice.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51738,"byte_end":51816,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ The `Window` struct is also available in this crate to provide a different","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51817,"byte_end":51895,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ window into a slice if necessary.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":51896,"byte_end":51933,"line_start":38,"line_end":38,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":395},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6544,"byte_end":6546,"line_start":77,"line_end":77,"column_start":11,"column_end":13},"name":"Io","qualname":"::io::Io","value":"Io: io::Read + io::Write","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402}],"decl_id":null,"docs":" A trait for read/write I/O objects","sig":null,"attributes":[{"value":"/ A trait for read/write I/O objects","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":5977,"byte_end":6015,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6016,"byte_end":6019,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This trait represents I/O objects which are readable and writable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6020,"byte_end":6090,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ Additionally, they're associated with the ability to test whether they're","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6091,"byte_end":6168,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ readable or writable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6169,"byte_end":6194,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6195,"byte_end":6198,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Importantly, the methods of this trait are intended to be used in conjunction","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6199,"byte_end":6280,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ with the current task of a future. Namely whenever any of them return a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6281,"byte_end":6356,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ value that indicates \"would block\" the current future's task is arranged to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6357,"byte_end":6436,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ receive a notification when the method would otherwise not indicate that it","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6437,"byte_end":6516,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ would block.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6517,"byte_end":6533,"line_start":76,"line_end":76,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7420,"byte_end":7429,"line_start":96,"line_end":96,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::Io::poll_read","value":"fn (&mut self) -> Async<()>","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" Tests to see if this I/O object may be readable.","sig":null,"attributes":[{"value":"/ Tests to see if this I/O object may be readable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6575,"byte_end":6627,"line_start":78,"line_end":78,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6632,"byte_end":6635,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Async<()>` indicating whether the object","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6640,"byte_end":6708,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ **might** be readable. It is possible that even if this method returns","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6713,"byte_end":6787,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ `Async::Ready` that a call to `read` would return a `WouldBlock` error.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6792,"byte_end":6867,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6872,"byte_end":6875,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ There is a default implementation for this function which always","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6880,"byte_end":6948,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ indicates that an I/O object is readable, but objects which can","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6953,"byte_end":7020,"line_start":85,"line_end":85,"column_start":5,"column_end":72}},{"value":"/ implement a finer grained version of this are recommended to do so.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7025,"byte_end":7096,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7101,"byte_end":7104,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Async::NotReady` then the current future's","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7109,"byte_end":7181,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ task is arranged to receive a notification when it might not return","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7186,"byte_end":7257,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ `NotReady`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7262,"byte_end":7277,"line_start":90,"line_end":90,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7282,"byte_end":7285,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7290,"byte_end":7302,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7307,"byte_end":7310,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This method is likely to panic if called from outside the context of a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7315,"byte_end":7389,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ future's task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7394,"byte_end":7412,"line_start":95,"line_end":95,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8338,"byte_end":8348,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::Io::poll_write","value":"fn (&mut self) -> Async<()>","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" Tests to see if this I/O object may be writable.","sig":null,"attributes":[{"value":"/ Tests to see if this I/O object may be writable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7492,"byte_end":7544,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7549,"byte_end":7552,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Async<()>` indicating whether the object","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7557,"byte_end":7625,"line_start":102,"line_end":102,"column_start":5,"column_end":73}},{"value":"/ **might** be writable. It is possible that even if this method returns","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7630,"byte_end":7704,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ `Async::Ready` that a call to `write` would return a `WouldBlock` error.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7709,"byte_end":7785,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7790,"byte_end":7793,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ There is a default implementation for this function which always","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7798,"byte_end":7866,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/ indicates that an I/O object is writable, but objects which can","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7871,"byte_end":7938,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/ implement a finer grained version of this are recommended to do so.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":7943,"byte_end":8014,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8019,"byte_end":8022,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Async::NotReady` then the current future's","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8027,"byte_end":8099,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ task is arranged to receive a notification when it might not return","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8104,"byte_end":8175,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `NotReady`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8180,"byte_end":8195,"line_start":112,"line_end":112,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8200,"byte_end":8203,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8208,"byte_end":8220,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8225,"byte_end":8228,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method is likely to panic if called from outside the context of a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8233,"byte_end":8307,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ future's task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8312,"byte_end":8330,"line_start":117,"line_end":117,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9401,"byte_end":9409,"line_start":140,"line_end":140,"column_start":8,"column_end":16},"name":"read_vec","qualname":"::io::Io::read_vec","value":"fn (&mut self, bufs: &mut [&mut IoVec]) -> io::Result<usize>","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" Read in a list of buffers all at once.","sig":null,"attributes":[{"value":"/ Read in a list of buffers all at once.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8411,"byte_end":8453,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8458,"byte_end":8461,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This operation will attempt to read bytes from this socket and place","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8466,"byte_end":8538,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ them into the list of buffers provided. Note that each buffer is an","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8543,"byte_end":8614,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ `IoVec` which can be created from a byte slice.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8619,"byte_end":8670,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8675,"byte_end":8678,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The buffers provided will be filled in sequentially. A buffer will be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8683,"byte_end":8756,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ entirely filled up before the next is written to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8761,"byte_end":8814,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8819,"byte_end":8822,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The number of bytes read is returned, if successful, or an error is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8827,"byte_end":8898,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ returned otherwise. If no bytes are available to be read yet then","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8903,"byte_end":8972,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ a \"would block\" error is returned. This operation should not block.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":8977,"byte_end":9048,"line_start":133,"line_end":133,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9053,"byte_end":9056,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ There is a default implementation for this function which treats this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9061,"byte_end":9134,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ as a single read using the first buffer in the list, but objects which","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9139,"byte_end":9213,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ can implement this as an atomic read using all the buffers are","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9218,"byte_end":9284,"line_start":137,"line_end":137,"column_start":5,"column_end":71}},{"value":"/ recommended to do so. For example, `TcpStream` can implement this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9289,"byte_end":9358,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ using the `readv` syscall.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9363,"byte_end":9393,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10501,"byte_end":10510,"line_start":165,"line_end":165,"column_start":8,"column_end":17},"name":"write_vec","qualname":"::io::Io::write_vec","value":"fn (&mut self, bufs: &[&IoVec]) -> io::Result<usize>","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" Write a list of buffers all at once.","sig":null,"attributes":[{"value":"/ Write a list of buffers all at once.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9590,"byte_end":9630,"line_start":148,"line_end":148,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9635,"byte_end":9638,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation will attempt to write a list of byte buffers to this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9643,"byte_end":9714,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ socket. Note that each buffer is an `IoVec` which can be created from a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9719,"byte_end":9794,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ byte slice.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9799,"byte_end":9814,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9819,"byte_end":9822,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The buffers provided will be written sequentially. A buffer will be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9827,"byte_end":9898,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ entirely written before the next is written.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9903,"byte_end":9951,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9956,"byte_end":9959,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The number of bytes written is returned, if successful, or an error is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":9964,"byte_end":10038,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ returned otherwise. If the socket is not currently writable then a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10043,"byte_end":10113,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ \"would block\" error is returned. This operation should not block.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10118,"byte_end":10187,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10192,"byte_end":10195,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ There is a default implementation for this function which writes the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10200,"byte_end":10272,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ first buffer only, but objects which can implement this as an atomic","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10277,"byte_end":10349,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ write using all the buffers are  recommended to do so. For example,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10354,"byte_end":10425,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ `TcpStream` can implement this  using the `writev` syscall.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10430,"byte_end":10493,"line_start":164,"line_end":164,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11737,"byte_end":11743,"line_start":190,"line_end":190,"column_start":8,"column_end":14},"name":"framed","qualname":"::io::Io::framed","value":"fn <C> (self, codec: C) -> Framed<Self, C>","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10680,"byte_end":10756,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10761,"byte_end":10837,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10842,"byte_end":10845,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10850,"byte_end":10925,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":10930,"byte_end":11000,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11005,"byte_end":11076,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11081,"byte_end":11153,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11158,"byte_end":11216,"line_start":180,"line_end":180,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11221,"byte_end":11224,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11229,"byte_end":11298,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11303,"byte_end":11378,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11383,"byte_end":11459,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11464,"byte_end":11486,"line_start":185,"line_end":185,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11491,"byte_end":11494,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11499,"byte_end":11572,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11577,"byte_end":11648,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11653,"byte_end":11729,"line_start":189,"line_end":189,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12050,"byte_end":12055,"line_start":200,"line_end":200,"column_start":8,"column_end":13},"name":"split","qualname":"::io::Io::split","value":"fn (self) -> (ReadHalf<Self>, WriteHalf<Self>)","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11868,"byte_end":11939,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11944,"byte_end":11947,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `Read` and `Write` traits,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":11952,"byte_end":12020,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ respectively.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12025,"byte_end":12042,"line_start":199,"line_end":199,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":403},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12884,"byte_end":12892,"line_start":222,"line_end":222,"column_start":11,"column_end":19},"name":"FramedIo","qualname":"::io::FramedIo","value":"FramedIo","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" A trait for framed reading and writing.","sig":null,"attributes":[{"value":"/ A trait for framed reading and writing.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12167,"byte_end":12210,"line_start":207,"line_end":207,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12211,"byte_end":12214,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ Most implementations of `FramedIo` are for doing protocol level","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12215,"byte_end":12282,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/ serialization and deserialization.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12283,"byte_end":12321,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12322,"byte_end":12325,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Importantly, the methods of this trait are intended to be used in conjunction","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12326,"byte_end":12407,"line_start":212,"line_end":212,"column_start":1,"column_end":82}},{"value":"/ with the current task of a future. Namely whenever any of them return a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12408,"byte_end":12483,"line_start":213,"line_end":213,"column_start":1,"column_end":76}},{"value":"/ value that indicates \"would block\" the current future's task is arranged to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12484,"byte_end":12563,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"/ receive a notification when the method would otherwise not indicate that it","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12564,"byte_end":12643,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ would block.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12644,"byte_end":12660,"line_start":216,"line_end":216,"column_start":1,"column_end":17}},{"value":"/ For a sample implementation of `FramedIo` you can take a look at the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12664,"byte_end":12736,"line_start":218,"line_end":218,"column_start":1,"column_end":73}},{"value":"/ `Framed` type in the `frame` module of this crate.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12737,"byte_end":12791,"line_start":219,"line_end":219,"column_start":1,"column_end":55}},{"value":"deprecated(since = \"0.1.1\", note = \"replaced by Sink + Stream\")","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12807,"byte_end":12873,"line_start":221,"line_end":221,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":404},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12929,"byte_end":12931,"line_start":224,"line_end":224,"column_start":10,"column_end":12},"name":"In","qualname":"::io::FramedIo::In","value":"type In;","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" Messages written\n","sig":null,"attributes":[{"value":"/ Messages written","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12899,"byte_end":12919,"line_start":223,"line_end":223,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":405},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12965,"byte_end":12968,"line_start":227,"line_end":227,"column_start":10,"column_end":13},"name":"Out","qualname":"::io::FramedIo::Out","value":"type Out;","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" Messages read\n","sig":null,"attributes":[{"value":"/ Messages read","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12938,"byte_end":12955,"line_start":226,"line_end":226,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13035,"byte_end":13044,"line_start":230,"line_end":230,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::FramedIo::poll_read","value":"fn (&mut self) -> Async<()>","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" Tests to see if this `FramedIo` may be readable.\n","sig":null,"attributes":[{"value":"/ Tests to see if this `FramedIo` may be readable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":12975,"byte_end":13027,"line_start":229,"line_end":229,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13127,"byte_end":13131,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"read","qualname":"::io::FramedIo::read","value":"fn (&mut self) -> Poll<Self::Out, io::Error>","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" Read a message frame from the `FramedIo`\n","sig":null,"attributes":[{"value":"/ Read a message frame from the `FramedIo`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13075,"byte_end":13119,"line_start":232,"line_end":232,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13413,"byte_end":13423,"line_start":240,"line_end":240,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::FramedIo::poll_write","value":"fn (&mut self) -> Async<()>","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" Tests to see if this `FramedIo` may be writable.","sig":null,"attributes":[{"value":"/ Tests to see if this `FramedIo` may be writable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13179,"byte_end":13231,"line_start":235,"line_end":235,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13236,"byte_end":13239,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Unlike most other calls to poll readiness, it is important that when","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13244,"byte_end":13316,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ `FramedIo::poll_write` returns `Async::Ready` that a write will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13321,"byte_end":13388,"line_start":238,"line_end":238,"column_start":5,"column_end":72}},{"value":"/ succeed.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13393,"byte_end":13405,"line_start":239,"line_end":239,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13505,"byte_end":13510,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"write","qualname":"::io::FramedIo::write","value":"fn (&mut self, req: Self::In) -> Poll<(), io::Error>","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" Write a message frame to the `FramedIo`\n","sig":null,"attributes":[{"value":"/ Write a message frame to the `FramedIo`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13454,"byte_end":13497,"line_start":242,"line_end":242,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":14068,"byte_end":14073,"line_start":254,"line_end":254,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::FramedIo::flush","value":"fn (&mut self) -> Poll<(), io::Error>","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" Flush pending writes or do any other work not driven by reading /\n writing.","sig":null,"attributes":[{"value":"/ Flush pending writes or do any other work not driven by reading /","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13566,"byte_end":13635,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ writing.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13640,"byte_end":13652,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13657,"byte_end":13660,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Since the backing source is non-blocking, there is no guarantee that a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13665,"byte_end":13739,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ call to `FramedIo::write` is able to write the full message to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13744,"byte_end":13814,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ backing source immediately. In this case, the `FramedIo` will need to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13819,"byte_end":13892,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ buffer the remaining data to write. Calls to `FramedIo:flush` attempt","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13897,"byte_end":13970,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ to write any remaining data in the write buffer to the underlying","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":13975,"byte_end":14044,"line_start":252,"line_end":252,"column_start":5,"column_end":74}},{"value":"/ source.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":14049,"byte_end":14060,"line_start":253,"line_end":253,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":411},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":573},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708}],"decl_id":null,"docs":" TCP/UDP bindings for `tokio-core`","sig":null,"attributes":[{"value":"! TCP/UDP bindings for `tokio-core`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57345,"byte_end":57382,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57383,"byte_end":57386,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP networking types, similar to the standard","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57387,"byte_end":57465,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/mod.rs","byte_start":57466,"byte_end":57531,"line_start":4,"line_end":4,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58249,"byte_end":58260,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" An I/O object representing a TCP socket listening for incoming connections.","sig":null,"attributes":[{"value":"/ An I/O object representing a TCP socket listening for incoming connections.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58046,"byte_end":58125,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58126,"byte_end":58129,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This object can be converted into a stream of incoming connections for","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58130,"byte_end":58204,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ various forms of processing.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58205,"byte_end":58237,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":442},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58496,"byte_end":58504,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":443}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58311,"byte_end":58387,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58388,"byte_end":58435,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58436,"byte_end":58484,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58786,"byte_end":58790,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"fn (addr: &SocketAddr, handle: &Handle) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP listener associated with this event loop.","sig":null,"attributes":[{"value":"/ Create a new TCP listener associated with this event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58557,"byte_end":58619,"line_start":32,"line_end":32,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58624,"byte_end":58627,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The TCP listener will bind to the provided `addr` address, if available.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58632,"byte_end":58708,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ If the result is `Ok`, the socket has successfully bound.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58713,"byte_end":58774,"line_start":35,"line_end":35,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59148,"byte_end":59153,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"bind2","qualname":"<TcpListener>::bind2","value":"fn (addr: &SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP listener associated with this event loop.","sig":null,"attributes":[{"value":"/ Create a new TCP listener associated with this event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58960,"byte_end":59022,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59027,"byte_end":59030,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This is the same as `bind` but uses the default reactor instead of an","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59035,"byte_end":59108,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ explicit `&Handle`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59113,"byte_end":59136,"line_start":44,"line_end":44,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60159,"byte_end":60165,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&mut self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to accept a connection and create a new connected `TcpStream` if\n successful.","sig":null,"attributes":[{"value":"/ Attempt to accept a connection and create a new connected `TcpStream` if","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59299,"byte_end":59375,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ successful.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59380,"byte_end":59395,"line_start":51,"line_end":51,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59400,"byte_end":59403,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function will attempt an accept operation, but will not block","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59408,"byte_end":59478,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ waiting for it to complete. If the operation would block then a \"would","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59483,"byte_end":59557,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ block\" error is returned. Additionally, if this method would block, it","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59562,"byte_end":59636,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ registers the current task to receive a notification when it would","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59641,"byte_end":59711,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ otherwise not block.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59716,"byte_end":59740,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59745,"byte_end":59748,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that typically for simple usage it's easier to treat incoming","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59753,"byte_end":59823,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ connections as a `Stream` of `TcpStream`s with the `incoming` method","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59828,"byte_end":59900,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ below.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59905,"byte_end":59915,"line_start":61,"line_end":61,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59920,"byte_end":59923,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59928,"byte_end":59940,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59945,"byte_end":59948,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function will panic if it is called outside the context of a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":59953,"byte_end":60022,"line_start":65,"line_end":65,"column_start":5,"column_end":74}},{"value":"/ future's task. It's recommended to only call this from the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60027,"byte_end":60089,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/ implementation of a `Future::poll`, if necessary.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60094,"byte_end":60147,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60619,"byte_end":60629,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"accept_std","qualname":"<TcpListener>::accept_std","value":"fn (&mut self) -> io::Result<(net::TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Like `accept`, except that it returns a raw `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Like `accept`, except that it returns a raw `std::net::TcpStream`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60430,"byte_end":60500,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60505,"byte_end":60508,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The stream is *in blocking mode*, and is not associated with the Tokio","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60513,"byte_end":60587,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":60592,"byte_end":60607,"line_start":81,"line_end":81,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62576,"byte_end":62589,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<TcpListener>::from_listener","value":"fn (listener: net::TcpListener, _addr: &SocketAddr, handle: &Handle) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Create a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61189,"byte_end":61260,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61265,"byte_end":61268,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61273,"byte_end":61343,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61348,"byte_end":61424,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61429,"byte_end":61473,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61478,"byte_end":61481,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61486,"byte_end":61561,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61566,"byte_end":61642,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61647,"byte_end":61712,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61717,"byte_end":61772,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61777,"byte_end":61780,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61785,"byte_end":61856,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61861,"byte_end":61936,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61941,"byte_end":61980,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61985,"byte_end":61988,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Finally, the `handle` argument is the event loop that this listener will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":61993,"byte_end":62069,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ be bound to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62074,"byte_end":62090,"line_start":114,"line_end":114,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62095,"byte_end":62098,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62103,"byte_end":62166,"line_start":116,"line_end":116,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62171,"byte_end":62174,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62179,"byte_end":62252,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62257,"byte_end":62288,"line_start":119,"line_end":119,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62293,"byte_end":62296,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62301,"byte_end":62374,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62379,"byte_end":62454,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62459,"byte_end":62532,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":62537,"byte_end":62564,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63321,"byte_end":63330,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<TcpListener>::poll_read","value":"fn (&self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether this socket is ready to be read or not.\n","sig":null,"attributes":[{"value":"/ Test whether this socket is ready to be read or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63253,"byte_end":63309,"line_start":144,"line_end":144,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63840,"byte_end":63850,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63642,"byte_end":63703,"line_start":157,"line_end":157,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63708,"byte_end":63711,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63716,"byte_end":63789,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63794,"byte_end":63828,"line_start":160,"line_end":160,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64189,"byte_end":64197,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Consumes this listener, returning a stream of the sockets this listener\n accepts.","sig":null,"attributes":[{"value":"/ Consumes this listener, returning a stream of the sockets this listener","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":63936,"byte_end":64011,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ accepts.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64016,"byte_end":64028,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64033,"byte_end":64036,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method returns an implementation of the `Stream` trait which","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64041,"byte_end":64110,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/ resolves to the sockets the are accepted on this listener.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64115,"byte_end":64177,"line_start":169,"line_end":169,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64447,"byte_end":64454,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64262,"byte_end":64320,"line_start":174,"line_end":174,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64325,"byte_end":64328,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64333,"byte_end":64409,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64414,"byte_end":64435,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64731,"byte_end":64734,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64542,"byte_end":64600,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64605,"byte_end":64608,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64613,"byte_end":64679,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64684,"byte_end":64687,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64692,"byte_end":64719,"line_start":186,"line_end":186,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65237,"byte_end":65248,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<TcpListener>::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64806,"byte_end":64869,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64874,"byte_end":64877,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ If this is set to `true` then the socket is restricted to sending and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64882,"byte_end":64955,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ receiving IPv6 packets only. In this case two IPv4 and IPv6 applications","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":64960,"byte_end":65036,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ can bind the same port at the same time.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65041,"byte_end":65085,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65090,"byte_end":65093,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If this is set to `false` then the socket can be used to send and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65098,"byte_end":65167,"line_start":197,"line_end":197,"column_start":5,"column_end":74}},{"value":"/ receive packets from an IPv4-mapped IPv6 address.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65172,"byte_end":65225,"line_start":198,"line_end":198,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65551,"byte_end":65558,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<TcpListener>::only_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_V6ONLY` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65349,"byte_end":65412,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65417,"byte_end":65420,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_only_v6`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65425,"byte_end":65495,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65500,"byte_end":65503,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_only_v6","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65508,"byte_end":65539,"line_start":207,"line_end":207,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66351,"byte_end":66360,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":467}],"decl_id":null,"docs":" An I/O object representing a TCP stream connected to a remote endpoint.","sig":null,"attributes":[{"value":"/ An I/O object representing a TCP stream connected to a remote endpoint.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65999,"byte_end":66074,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66075,"byte_end":66078,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ A TCP stream can either be created by connecting to an endpoint or by","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66079,"byte_end":66152,"line_start":230,"line_end":230,"column_start":1,"column_end":74}},{"value":"/ accepting a connection from a listener. Inside the stream is access to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66153,"byte_end":66231,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ raw underlying I/O object as well as streams for the read/write","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66232,"byte_end":66299,"line_start":232,"line_end":232,"column_start":1,"column_end":68}},{"value":"/ notifications on the stream itself.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66300,"byte_end":66339,"line_start":233,"line_end":233,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66583,"byte_end":66595,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"TcpStreamNew","qualname":"::net::tcp::TcpStreamNew","value":"TcpStreamNew {  }","parent":null,"children":[{"krate":0,"index":469}],"decl_id":null,"docs":" Future returned by `TcpStream::connect` which will resolve to a `TcpStream`\n when the stream is connected.\n","sig":null,"attributes":[{"value":"/ Future returned by `TcpStream::connect` which will resolve to a `TcpStream`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66409,"byte_end":66488,"line_start":238,"line_end":238,"column_start":1,"column_end":80}},{"value":"/ when the stream is connected.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66489,"byte_end":66522,"line_start":239,"line_end":239,"column_start":1,"column_end":34}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66523,"byte_end":66571,"line_start":240,"line_end":240,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67207,"byte_end":67214,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"fn (addr: &SocketAddr, handle: &Handle) -> TcpStreamNew","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream connected to the specified address.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66786,"byte_end":66849,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66854,"byte_end":66857,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This function will create a new TCP socket and attempt to connect it to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66862,"byte_end":66937,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ the `addr` provided. The returned future will be resolved once the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66942,"byte_end":67012,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ stream has successfully connected. If an error happens during the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67017,"byte_end":67086,"line_start":257,"line_end":257,"column_start":5,"column_end":74}},{"value":"/ connection or during the socket creation, that error will be returned to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67091,"byte_end":67167,"line_start":258,"line_end":258,"column_start":5,"column_end":81}},{"value":"/ the future instead.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67172,"byte_end":67195,"line_start":259,"line_end":259,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67695,"byte_end":67703,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"connect2","qualname":"<TcpStream>::connect2","value":"fn (addr: &SocketAddr) -> TcpStreamNew","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream connected to the specified address.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67495,"byte_end":67558,"line_start":268,"line_end":268,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67563,"byte_end":67566,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This is the same as `connect`, but uses the default reactor instead of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67571,"byte_end":67645,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ taking an explicit `&Handle`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":67650,"byte_end":67683,"line_start":271,"line_end":271,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":68806,"byte_end":68817,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<TcpStream>::from_stream","value":"fn (stream: net::TcpStream, handle: &Handle) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TcpStream` from a `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Create a new `TcpStream` from a `net::TcpStream`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":68495,"byte_end":68548,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":68553,"byte_end":68556,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream in the standard library to a TCP","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":68561,"byte_end":68637,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ stream ready to be used with the provided event loop handle. The object","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":68642,"byte_end":68717,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ returned is associated with the event loop and ready to perform I/O.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":68722,"byte_end":68794,"line_start":298,"line_end":298,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70160,"byte_end":70174,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"connect_stream","qualname":"<TcpStream>::connect_stream","value":"fn (stream: net::TcpStream, addr: &SocketAddr, handle: &Handle) -> Box<Future<Item = TcpStream, Error = io::Error> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from the pending socket inside the given\n `std::net::TcpStream`, connecting it to the address specified.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from the pending socket inside the given","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69109,"byte_end":69179,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ `std::net::TcpStream`, connecting it to the address specified.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69184,"byte_end":69250,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69255,"byte_end":69258,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This constructor allows configuring the socket before it's actually","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69263,"byte_end":69334,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ connected, and this function will transfer ownership to the returned","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69339,"byte_end":69411,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ `TcpStream` if successful. An unconnected `TcpStream` can be created","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69416,"byte_end":69488,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ with the `net2::TcpBuilder` type (and also configured via that route).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69493,"byte_end":69567,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69572,"byte_end":69575,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69580,"byte_end":69643,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69648,"byte_end":69651,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and then a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69656,"byte_end":69724,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/   `connect` call is issued.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69729,"byte_end":69760,"line_start":318,"line_end":318,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69765,"byte_end":69768,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and the connect operation","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69773,"byte_end":69849,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/   is issued when the returned `TcpStream` is registered with an event","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69854,"byte_end":69927,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/   loop. Note that on Windows you must `bind` a socket before it can be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":69932,"byte_end":70006,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/   connected, so if a custom `TcpBuilder` is used it should be bound","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70011,"byte_end":70082,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/   (perhaps to `INADDR_ANY`) before this method is called.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70087,"byte_end":70148,"line_start":324,"line_end":324,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70984,"byte_end":70993,"line_start":342,"line_end":342,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<TcpStream>::poll_read","value":"fn (&self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether this socket is ready to be read or not.","sig":null,"attributes":[{"value":"/ Test whether this socket is ready to be read or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70597,"byte_end":70653,"line_start":336,"line_end":336,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70658,"byte_end":70661,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If the socket is *not* readable then the current task is scheduled to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70666,"byte_end":70739,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ get a notification when the socket does become readable. That is, this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70744,"byte_end":70818,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ is only suitable for calling in a `Future::poll` method and will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70823,"byte_end":70891,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ automatically handle ensuring a retry once the socket is readable again.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":70896,"byte_end":70972,"line_start":341,"line_end":341,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71698,"byte_end":71708,"line_start":360,"line_end":360,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<TcpStream>::poll_write","value":"fn (&self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether this socket is ready to be written to or not.","sig":null,"attributes":[{"value":"/ Test whether this socket is ready to be written to or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71305,"byte_end":71367,"line_start":354,"line_end":354,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71372,"byte_end":71375,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If the socket is *not* writable then the current task is scheduled to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71380,"byte_end":71453,"line_start":356,"line_end":356,"column_start":5,"column_end":78}},{"value":"/ get a notification when the socket does become writable. That is, this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71458,"byte_end":71532,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ is only suitable for calling in a `Future::poll` method and will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71537,"byte_end":71605,"line_start":358,"line_end":358,"column_start":5,"column_end":73}},{"value":"/ automatically handle ensuring a retry once the socket is writable again.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71610,"byte_end":71686,"line_start":359,"line_end":359,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72070,"byte_end":72080,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":71999,"byte_end":72058,"line_start":372,"line_end":372,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72242,"byte_end":72251,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.\n","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72166,"byte_end":72230,"line_start":377,"line_end":377,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72688,"byte_end":72692,"line_start":388,"line_end":388,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72336,"byte_end":72406,"line_start":382,"line_end":382,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72411,"byte_end":72480,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72485,"byte_end":72524,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72529,"byte_end":72532,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72537,"byte_end":72611,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":72616,"byte_end":72676,"line_start":387,"line_end":387,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73311,"byte_end":73319,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73036,"byte_end":73102,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73107,"byte_end":73110,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73115,"byte_end":73187,"line_start":402,"line_end":402,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73192,"byte_end":73261,"line_start":403,"line_end":403,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73266,"byte_end":73299,"line_start":404,"line_end":404,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73828,"byte_end":73839,"line_start":416,"line_end":416,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73413,"byte_end":73475,"line_start":409,"line_end":409,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73480,"byte_end":73483,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73488,"byte_end":73557,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73562,"byte_end":73635,"line_start":412,"line_end":412,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73640,"byte_end":73713,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73718,"byte_end":73793,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73798,"byte_end":73816,"line_start":415,"line_end":415,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74141,"byte_end":74148,"line_start":425,"line_end":425,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":73940,"byte_end":74002,"line_start":420,"line_end":420,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74007,"byte_end":74010,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74015,"byte_end":74085,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74090,"byte_end":74093,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74098,"byte_end":74129,"line_start":424,"line_end":424,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74407,"byte_end":74427,"line_start":433,"line_end":433,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74225,"byte_end":74285,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74290,"byte_end":74293,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74298,"byte_end":74370,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74375,"byte_end":74395,"line_start":432,"line_end":432,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74759,"byte_end":74775,"line_start":443,"line_end":443,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74532,"byte_end":74592,"line_start":437,"line_end":437,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74597,"byte_end":74600,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74605,"byte_end":74652,"line_start":439,"line_end":439,"column_start":5,"column_end":52}},{"value":"/ [`set_recv_buffer_size`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74657,"byte_end":74692,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74697,"byte_end":74700,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ [link]: #tymethod.set_recv_buffer_size","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74705,"byte_end":74747,"line_start":442,"line_end":442,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75041,"byte_end":75061,"line_start":451,"line_end":451,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74862,"byte_end":74922,"line_start":447,"line_end":447,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74927,"byte_end":74930,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":74935,"byte_end":75009,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75014,"byte_end":75029,"line_start":450,"line_end":450,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75375,"byte_end":75391,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75166,"byte_end":75226,"line_start":455,"line_end":455,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75231,"byte_end":75234,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75239,"byte_end":75313,"line_start":457,"line_end":457,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75318,"byte_end":75321,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [link]: #tymethod.set_send_buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75326,"byte_end":75363,"line_start":459,"line_end":459,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76101,"byte_end":76114,"line_start":476,"line_end":476,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75478,"byte_end":75552,"line_start":464,"line_end":464,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75557,"byte_end":75560,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75565,"byte_end":75632,"line_start":466,"line_end":466,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75637,"byte_end":75711,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75716,"byte_end":75778,"line_start":468,"line_end":468,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75783,"byte_end":75786,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75791,"byte_end":75865,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75870,"byte_end":75945,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75950,"byte_end":75974,"line_start":472,"line_end":472,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75979,"byte_end":75982,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":75987,"byte_end":76050,"line_start":474,"line_end":474,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76055,"byte_end":76089,"line_start":475,"line_end":475,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76497,"byte_end":76506,"line_start":486,"line_end":486,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76233,"byte_end":76309,"line_start":480,"line_end":480,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76314,"byte_end":76352,"line_start":481,"line_end":481,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76357,"byte_end":76360,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76365,"byte_end":76437,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76442,"byte_end":76445,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ [link]: #tymethod.set_keepalive","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76450,"byte_end":76485,"line_start":485,"line_end":485,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76782,"byte_end":76789,"line_start":494,"line_end":494,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76597,"byte_end":76655,"line_start":490,"line_end":490,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76660,"byte_end":76663,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76668,"byte_end":76744,"line_start":492,"line_end":492,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76749,"byte_end":76770,"line_start":493,"line_end":493,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77068,"byte_end":77071,"line_start":503,"line_end":503,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76877,"byte_end":76935,"line_start":498,"line_end":498,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76940,"byte_end":76943,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":76948,"byte_end":77014,"line_start":500,"line_end":500,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77019,"byte_end":77022,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ [link]: #tymethod.set_ttl","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77027,"byte_end":77056,"line_start":502,"line_end":502,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77574,"byte_end":77585,"line_start":515,"line_end":515,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<TcpStream>::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77143,"byte_end":77206,"line_start":507,"line_end":507,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77211,"byte_end":77214,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ If this is set to `true` then the socket is restricted to sending and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77219,"byte_end":77292,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ receiving IPv6 packets only. In this case two IPv4 and IPv6 applications","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77297,"byte_end":77373,"line_start":510,"line_end":510,"column_start":5,"column_end":81}},{"value":"/ can bind the same port at the same time.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77378,"byte_end":77422,"line_start":511,"line_end":511,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77427,"byte_end":77430,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ If this is set to `false` then the socket can be used to send and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77435,"byte_end":77504,"line_start":513,"line_end":513,"column_start":5,"column_end":74}},{"value":"/ receive packets from an IPv4-mapped IPv6 address.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77509,"byte_end":77562,"line_start":514,"line_end":514,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77890,"byte_end":77897,"line_start":524,"line_end":524,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<TcpStream>::only_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_V6ONLY` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77686,"byte_end":77749,"line_start":519,"line_end":519,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77754,"byte_end":77757,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_only_v6`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77762,"byte_end":77832,"line_start":521,"line_end":521,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77837,"byte_end":77840,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ [link]: #tymethod.set_only_v6","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77845,"byte_end":77878,"line_start":523,"line_end":523,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78061,"byte_end":78071,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option\n","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":77974,"byte_end":78049,"line_start":528,"line_end":528,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78264,"byte_end":78270,"line_start":534,"line_end":534,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" reads the linger duration for this socket by getting the SO_LINGER option\n","sig":null,"attributes":[{"value":"/ reads the linger duration for this socket by getting the SO_LINGER option","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78175,"byte_end":78252,"line_start":533,"line_end":533,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78447,"byte_end":78463,"line_start":540,"line_end":540,"column_start":12,"column_end":28},"name":"set_keepalive_ms","qualname":"<TcpStream>::set_keepalive_ms","value":"fn (&self, keepalive: Option<u32>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.8\", note = \"use set_keepalive\")","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78358,"byte_end":78416,"line_start":538,"line_end":538,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78694,"byte_end":78706,"line_start":547,"line_end":547,"column_start":12,"column_end":24},"name":"keepalive_ms","qualname":"<TcpStream>::keepalive_ms","value":"fn (&self) -> io::Result<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.8\", note = \"use keepalive\")","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78609,"byte_end":78663,"line_start":545,"line_end":545,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":589},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87410,"byte_end":87419,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":590}],"decl_id":null,"docs":" An I/O object representing a UDP socket.\n","sig":null,"attributes":[{"value":"/ An I/O object representing a UDP socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87354,"byte_end":87398,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":605},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106138,"byte_end":106146,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"UdpCodec","qualname":"::net::udp::frame::UdpCodec","value":"UdpCodec","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" Encoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Encoding of frames via buffers.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105430,"byte_end":105465,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105466,"byte_end":105469,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `UdpFramed` and provides","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105470,"byte_end":105550,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ the `In` and `Out` types which are decoded and encoded from the socket,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105551,"byte_end":105626,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ respectively.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105627,"byte_end":105644,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105645,"byte_end":105648,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because UDP is a connectionless protocol, the `decode` method receives the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105649,"byte_end":105727,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ address where data came from and the `encode` method is also responsible for","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105728,"byte_end":105808,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ determining the remote host to which the datagram should be sent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105809,"byte_end":105877,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105878,"byte_end":105881,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The trait itself is implemented on a type that can track state for decoding","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105882,"byte_end":105961,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ or encoding, which is particularly useful for streaming parsers. In many","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":105962,"byte_end":106038,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ cases, though, this type will simply be a unit struct (e.g. `struct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106039,"byte_end":106110,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ HttpCodec`).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106111,"byte_end":106127,"line_start":21,"line_end":21,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":606},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106194,"byte_end":106196,"line_start":24,"line_end":24,"column_start":10,"column_end":12},"name":"In","qualname":"::net::udp::frame::UdpCodec::In","value":"type In;","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106153,"byte_end":106184,"line_start":23,"line_end":23,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":607},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106250,"byte_end":106253,"line_start":27,"line_end":27,"column_start":10,"column_end":13},"name":"Out","qualname":"::net::udp::frame::UdpCodec::Out","value":"type Out;","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" The type of frames to be encoded.\n","sig":null,"attributes":[{"value":"/ The type of frames to be encoded.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106203,"byte_end":106240,"line_start":26,"line_end":26,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106939,"byte_end":106945,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"decode","qualname":"::net::udp::frame::UdpCodec::decode","value":"fn (&mut self, src: &SocketAddr, buf: &[u8]) -> io::Result<Self::In>","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106260,"byte_end":106325,"line_start":29,"line_end":29,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106330,"byte_end":106333,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This method is called by `UdpFramed` on a single datagram which has been","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106338,"byte_end":106414,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ read from a socket. The `buf` argument contains the data that was","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106419,"byte_end":106488,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/ received from the remote address, and `src` is the address the data came","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106493,"byte_end":106569,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ from. Note that typically this method should require the entire contents","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106574,"byte_end":106650,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ of `buf` to be valid or otherwise return an error with trailing data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106655,"byte_end":106728,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106733,"byte_end":106736,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106741,"byte_end":106811,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106816,"byte_end":106889,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":106894,"byte_end":106931,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107433,"byte_end":107439,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"encode","qualname":"::net::udp::frame::UdpCodec::encode","value":"fn (&mut self, msg: Self::Out, buf: &mut Vec<u8>) -> SocketAddr","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107017,"byte_end":107062,"line_start":42,"line_end":42,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107067,"byte_end":107070,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will encode `msg` into the byte buffer provided by `buf`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107075,"byte_end":107148,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ The `buf` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107153,"byte_end":107226,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107231,"byte_end":107269,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107274,"byte_end":107277,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The encode method also determines the destination to which the buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107282,"byte_end":107355,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ should be directed, which will be returned as a `SocketAddr`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107360,"byte_end":107425,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":610},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107789,"byte_end":107798,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"UdpFramed","qualname":"::net::udp::frame::UdpFramed","value":"UdpFramed {  }","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using\n the `UdpCodec` trait to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107504,"byte_end":107583,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ the `UdpCodec` trait to encode and decode frames.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107584,"byte_end":107637,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107638,"byte_end":107641,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ You can acquire a `UdpFramed` instance by using the `UdpSocket::framed`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107642,"byte_end":107717,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ adapter.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107718,"byte_end":107730,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107731,"byte_end":107777,"line_start":58,"line_end":58,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110337,"byte_end":110344,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<UdpFramed<C>>::get_ref","value":"fn (&self) -> &UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110062,"byte_end":110135,"line_start":141,"line_end":141,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110140,"byte_end":110143,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110148,"byte_end":110223,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110228,"byte_end":110304,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110309,"byte_end":110325,"line_start":145,"line_end":145,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110691,"byte_end":110698,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<UdpFramed<C>>::get_mut","value":"fn (&mut self) -> &mut UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110400,"byte_end":110471,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110476,"byte_end":110489,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110494,"byte_end":110497,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110502,"byte_end":110577,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110582,"byte_end":110658,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110663,"byte_end":110679,"line_start":155,"line_end":155,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":111031,"byte_end":111041,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<UdpFramed<C>>::into_inner","value":"fn (self) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110766,"byte_end":110829,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110834,"byte_end":110837,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110842,"byte_end":110917,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110922,"byte_end":110998,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":111003,"byte_end":111019,"line_start":164,"line_end":164,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87788,"byte_end":87792,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn (addr: &SocketAddr, handle: &Handle) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Create a new UDP socket bound to the specified address.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87545,"byte_end":87604,"line_start":19,"line_end":19,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87609,"byte_end":87612,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This function will create a new UDP socket and attempt to bind it to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87617,"byte_end":87693,"line_start":21,"line_end":21,"column_start":5,"column_end":81}},{"value":"/ `addr` provided. If the result is `Ok`, the socket has successfully bound.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87698,"byte_end":87776,"line_start":22,"line_end":22,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88699,"byte_end":88710,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"from_socket","qualname":"<UdpSocket>::from_socket","value":"fn (socket: net::UdpSocket, handle: &Handle) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88173,"byte_end":88245,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88250,"byte_end":88253,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle` is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88258,"byte_end":88334,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ associated with. This function requires that `socket` has previously","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88339,"byte_end":88411,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88416,"byte_end":88463,"line_start":37,"line_end":37,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88468,"byte_end":88471,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88476,"byte_end":88549,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88554,"byte_end":88629,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88634,"byte_end":88687,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89980,"byte_end":89986,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"framed","qualname":"<UdpSocket>::framed","value":"fn <C> (self, codec: C) -> UdpFramed<C>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `UdpSocket` object, using the provided `UdpCodec` to read and write the\n raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88915,"byte_end":88991,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ `UdpSocket` object, using the provided `UdpCodec` to read and write the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":88996,"byte_end":89071,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ raw data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89076,"byte_end":89089,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89094,"byte_end":89097,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Raw UDP sockets work with datagrams, but higher-level code usually","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89102,"byte_end":89172,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89177,"byte_end":89247,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of this socket by using the `UdpCodec`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89252,"byte_end":89323,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ trait to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89328,"byte_end":89399,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89404,"byte_end":89462,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89467,"byte_end":89470,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89475,"byte_end":89544,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89549,"byte_end":89624,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ things which require both read and write access to the underlying","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89629,"byte_end":89698,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ object.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89703,"byte_end":89714,"line_start":61,"line_end":61,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89719,"byte_end":89722,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89727,"byte_end":89800,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `UdpFramed` returned by this method, which will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89805,"byte_end":89879,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ break them into separate objects, allowing them to interact more","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89884,"byte_end":89952,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ easily.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":89957,"byte_end":89968,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90148,"byte_end":90158,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90077,"byte_end":90136,"line_start":71,"line_end":71,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90414,"byte_end":90421,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn (&self, addr: &SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in addr.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90244,"byte_end":90318,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in addr.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90323,"byte_end":90402,"line_start":77,"line_end":77,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90664,"byte_end":90668,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect().\n On success, returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect().","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90520,"byte_end":90595,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":90600,"byte_end":90652,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91254,"byte_end":91258,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect().\n On success, returns the number of bytes read.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect().","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91122,"byte_end":91188,"line_start":99,"line_end":99,"column_start":5,"column_end":71}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91193,"byte_end":91242,"line_start":100,"line_end":100,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92145,"byte_end":92154,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<UdpSocket>::poll_read","value":"fn (&self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether this socket is ready to be read or not.","sig":null,"attributes":[{"value":"/ Test whether this socket is ready to be read or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91758,"byte_end":91814,"line_start":116,"line_end":116,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91819,"byte_end":91822,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ If the socket is *not* readable then the current task is scheduled to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91827,"byte_end":91900,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ get a notification when the socket does become readable. That is, this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91905,"byte_end":91979,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ is only suitable for calling in a `Future::poll` method and will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":91984,"byte_end":92052,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ automatically handle ensuring a retry once the socket is readable again.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92057,"byte_end":92133,"line_start":121,"line_end":121,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92859,"byte_end":92869,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<UdpSocket>::poll_write","value":"fn (&self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether this socket is ready to be written to or not.","sig":null,"attributes":[{"value":"/ Test whether this socket is ready to be written to or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92466,"byte_end":92528,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92533,"byte_end":92536,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If the socket is *not* writable then the current task is scheduled to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92541,"byte_end":92614,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ get a notification when the socket does become writable. That is, this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92619,"byte_end":92693,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ is only suitable for calling in a `Future::poll` method and will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92698,"byte_end":92766,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/ automatically handle ensuring a retry once the socket is writable again.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":92771,"byte_end":92847,"line_start":139,"line_end":139,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93410,"byte_end":93417,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn (&self, buf: &[u8], target: &SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93160,"byte_end":93234,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93239,"byte_end":93267,"line_start":153,"line_end":153,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93272,"byte_end":93275,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementer of `ToSocketAddrs` trait. See its","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93280,"byte_end":93353,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93358,"byte_end":93398,"line_start":156,"line_end":156,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94779,"byte_end":94789,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"send_dgram","qualname":"<UdpSocket>::send_dgram","value":"fn <T> (self, buf: T, addr: SocketAddr) -> SendDgram<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will write the entire contents of the buffer\n `buf` provided as a datagram to this socket.","sig":null,"attributes":[{"value":"/ Creates a future that will write the entire contents of the buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93903,"byte_end":93973,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ `buf` provided as a datagram to this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":93978,"byte_end":94026,"line_start":173,"line_end":173,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94031,"byte_end":94034,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The returned future will return after data has been written to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94039,"byte_end":94109,"line_start":175,"line_end":175,"column_start":5,"column_end":75}},{"value":"/ outbound socket.  The future will resolve to the stream as well as the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94114,"byte_end":94188,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ buffer (for reuse if needed).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94193,"byte_end":94226,"line_start":177,"line_end":177,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94231,"byte_end":94234,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Any error which happens during writing will cause both the stream and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94239,"byte_end":94312,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ the buffer to get destroyed. Note that failure to write the entire","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94317,"byte_end":94387,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ buffer is considered an error for the purposes of sending a datagram.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94392,"byte_end":94465,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94470,"byte_end":94473,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The `buf` parameter here only requires the `AsRef<[u8]>` trait, which","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94478,"byte_end":94551,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ should be broadly applicable to accepting data which can be converted","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94556,"byte_end":94629,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/ to a slice.  The `Window` struct is also available in this crate to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94634,"byte_end":94705,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ provide a different window into a slice if necessary.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94710,"byte_end":94767,"line_start":186,"line_end":186,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95073,"byte_end":95082,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":94931,"byte_end":95005,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95010,"byte_end":95061,"line_start":194,"line_end":194,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96371,"byte_end":96381,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"recv_dgram","qualname":"<UdpSocket>::recv_dgram","value":"fn <T> (self, buf: T) -> RecvDgram<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that receive a datagram to be written to the buffer\n provided.","sig":null,"attributes":[{"value":"/ Creates a future that receive a datagram to be written to the buffer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95601,"byte_end":95673,"line_start":210,"line_end":210,"column_start":5,"column_end":77}},{"value":"/ provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95678,"byte_end":95691,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95696,"byte_end":95699,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The returned future will return after a datagram has been received on","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95704,"byte_end":95777,"line_start":213,"line_end":213,"column_start":5,"column_end":78}},{"value":"/ this socket. The future will resolve to the socket, the buffer, the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95782,"byte_end":95853,"line_start":214,"line_end":214,"column_start":5,"column_end":76}},{"value":"/ amount of data read, and the address the data was received from.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95858,"byte_end":95926,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95931,"byte_end":95934,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ An error during reading will cause the socket and buffer to get","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":95939,"byte_end":96006,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"/ destroyed and the socket will be returned.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96011,"byte_end":96057,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96062,"byte_end":96065,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The `buf` parameter here only requires the `AsMut<[u8]>` trait, which","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96070,"byte_end":96143,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ should be broadly applicable to accepting data which can be converted","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96148,"byte_end":96221,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/ to a slice.  The `Window` struct is also available in this crate to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96226,"byte_end":96297,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ provide a different window into a slice if necessary.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96302,"byte_end":96359,"line_start":223,"line_end":223,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96714,"byte_end":96723,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96499,"byte_end":96563,"line_start":230,"line_end":230,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96568,"byte_end":96571,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96576,"byte_end":96623,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96628,"byte_end":96656,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96661,"byte_end":96664,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96669,"byte_end":96702,"line_start":235,"line_end":235,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96979,"byte_end":96992,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96802,"byte_end":96866,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96871,"byte_end":96874,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96879,"byte_end":96950,"line_start":242,"line_end":242,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":96955,"byte_end":96967,"line_start":243,"line_end":243,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97321,"byte_end":97338,"line_start":254,"line_end":254,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97085,"byte_end":97154,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97159,"byte_end":97162,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97167,"byte_end":97214,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97219,"byte_end":97255,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97260,"byte_end":97263,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97268,"byte_end":97309,"line_start":253,"line_end":253,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97657,"byte_end":97678,"line_start":262,"line_end":262,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97425,"byte_end":97494,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97499,"byte_end":97502,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97507,"byte_end":97581,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97586,"byte_end":97645,"line_start":261,"line_end":261,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98012,"byte_end":98028,"line_start":272,"line_end":272,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97779,"byte_end":97847,"line_start":266,"line_end":266,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97852,"byte_end":97855,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97860,"byte_end":97907,"line_start":268,"line_end":268,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97912,"byte_end":97947,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97952,"byte_end":97955,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":97960,"byte_end":98000,"line_start":271,"line_end":271,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98494,"byte_end":98514,"line_start":283,"line_end":283,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98113,"byte_end":98181,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98186,"byte_end":98189,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98194,"byte_end":98264,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98269,"byte_end":98343,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98348,"byte_end":98410,"line_start":280,"line_end":280,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98415,"byte_end":98418,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98423,"byte_end":98482,"line_start":282,"line_end":282,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98853,"byte_end":98870,"line_start":293,"line_end":293,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98615,"byte_end":98686,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98691,"byte_end":98694,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98699,"byte_end":98746,"line_start":289,"line_end":289,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98751,"byte_end":98787,"line_start":290,"line_end":290,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98792,"byte_end":98795,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98800,"byte_end":98841,"line_start":292,"line_end":292,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99193,"byte_end":99214,"line_start":301,"line_end":301,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":98957,"byte_end":99028,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99033,"byte_end":99036,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99041,"byte_end":99117,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99122,"byte_end":99181,"line_start":300,"line_end":300,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99504,"byte_end":99507,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99315,"byte_end":99373,"line_start":305,"line_end":305,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99378,"byte_end":99381,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99386,"byte_end":99452,"line_start":307,"line_end":307,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99457,"byte_end":99460,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99465,"byte_end":99492,"line_start":309,"line_end":309,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99764,"byte_end":99771,"line_start":318,"line_end":318,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99579,"byte_end":99637,"line_start":314,"line_end":314,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99642,"byte_end":99645,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99650,"byte_end":99726,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99731,"byte_end":99752,"line_start":317,"line_end":317,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100289,"byte_end":100306,"line_start":329,"line_end":329,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99859,"byte_end":99917,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99922,"byte_end":99925,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":99930,"byte_end":100004,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100009,"byte_end":100082,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100087,"byte_end":100159,"line_start":326,"line_end":326,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100164,"byte_end":100234,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100239,"byte_end":100277,"line_start":328,"line_end":328,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100829,"byte_end":100846,"line_start":340,"line_end":340,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100513,"byte_end":100573,"line_start":335,"line_end":335,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100578,"byte_end":100581,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100586,"byte_end":100660,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100665,"byte_end":100738,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":100743,"byte_end":100817,"line_start":339,"line_end":339,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101265,"byte_end":101283,"line_start":352,"line_end":352,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101047,"byte_end":101106,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101111,"byte_end":101114,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101119,"byte_end":101166,"line_start":348,"line_end":348,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101171,"byte_end":101203,"line_start":349,"line_end":349,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101208,"byte_end":101211,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101216,"byte_end":101253,"line_start":351,"line_end":351,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101713,"byte_end":101731,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101493,"byte_end":101554,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101559,"byte_end":101562,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101567,"byte_end":101614,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101619,"byte_end":101651,"line_start":361,"line_end":361,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101656,"byte_end":101659,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101664,"byte_end":101701,"line_start":363,"line_end":363,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102366,"byte_end":102377,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<UdpSocket>::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":101935,"byte_end":101998,"line_start":370,"line_end":370,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102003,"byte_end":102006,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ If this is set to `true` then the socket is restricted to sending and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102011,"byte_end":102084,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/ receiving IPv6 packets only. In this case two IPv4 and IPv6 applications","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102089,"byte_end":102165,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ can bind the same port at the same time.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102170,"byte_end":102214,"line_start":374,"line_end":374,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102219,"byte_end":102222,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If this is set to `false` then the socket can be used to send and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102227,"byte_end":102296,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/ receive packets from an IPv4-mapped IPv6 address.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102301,"byte_end":102354,"line_start":377,"line_end":377,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102680,"byte_end":102687,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_V6ONLY` option for this socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102478,"byte_end":102541,"line_start":382,"line_end":382,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102546,"byte_end":102549,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_only_v6`][link].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102554,"byte_end":102624,"line_start":384,"line_end":384,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102629,"byte_end":102632,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_only_v6","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102637,"byte_end":102668,"line_start":386,"line_end":386,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":103095,"byte_end":103104,"line_start":402,"line_end":402,"column_start":12,"column_end":21},"name":"SendDgram","qualname":"::net::udp::SendDgram","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future used to write the entire contents of some data to a UDP socket.","sig":null,"attributes":[{"value":"/ A future used to write the entire contents of some data to a UDP socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102895,"byte_end":102971,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102972,"byte_end":102975,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ This is created by the `UdpSocket::send_dgram` method.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102976,"byte_end":103034,"line_start":400,"line_end":400,"column_start":1,"column_end":59}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":103035,"byte_end":103083,"line_start":401,"line_end":401,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":688},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":104116,"byte_end":104125,"line_start":434,"line_end":434,"column_start":12,"column_end":21},"name":"RecvDgram","qualname":"::net::udp::RecvDgram","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future used to receive a datagram from a UDP socket.","sig":null,"attributes":[{"value":"/ A future used to receive a datagram from a UDP socket.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":103934,"byte_end":103992,"line_start":430,"line_end":430,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":103993,"byte_end":103996,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ This is created by the `UdpSocket::recv_dgram` method.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":103997,"byte_end":104055,"line_start":432,"line_end":432,"column_start":1,"column_end":59}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":104056,"byte_end":104104,"line_start":433,"line_end":433,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":714},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reactor","qualname":"::reactor","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":845},{"krate":0,"index":927},{"krate":0,"index":946},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":1088},{"krate":0,"index":973},{"krate":0,"index":983},{"krate":0,"index":1093},{"krate":0,"index":1109},{"krate":0,"index":1108},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1098},{"krate":0,"index":1096},{"krate":0,"index":1111},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1122},{"krate":0,"index":985},{"krate":0,"index":989},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1026},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" The core reactor driving all I/O","sig":null,"attributes":[{"value":"! The core reactor driving all I/O","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":111092,"byte_end":111128,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":111129,"byte_end":111132,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the `Core` type which is the reactor for all I/O","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":111133,"byte_end":111206,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! happening in `tokio-core`. This reactor (or event loop) is used to run","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":111207,"byte_end":111281,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! futures, schedule tasks, issue I/O requests, etc.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":111282,"byte_end":111335,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":779},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136807,"byte_end":136818,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"PollEvented","qualname":"::reactor::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"decl_id":null,"docs":" A concrete implementation of a stream of readiness notifications for I/O\n objects that originates from an event loop.","sig":null,"attributes":[{"value":"/ A concrete implementation of a stream of readiness notifications for I/O","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134323,"byte_end":134399,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ objects that originates from an event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134400,"byte_end":134447,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134448,"byte_end":134451,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Created by the `PollEvented::new` method, each `PollEvented` is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134452,"byte_end":134519,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ associated with a specific event loop and source of events that will be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134520,"byte_end":134595,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ registered with an event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134596,"byte_end":134630,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134631,"byte_end":134634,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ An instance of `PollEvented` is essentially the bridge between the `mio`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134635,"byte_end":134711,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ world and the `tokio-core` world, providing abstractions to receive","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134712,"byte_end":134783,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ notifications about changes to an object's `mio::Ready` state.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134784,"byte_end":134850,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134851,"byte_end":134854,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Each readiness stream has a number of methods to test whether the underlying","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134855,"byte_end":134935,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ object is readable or writable. Once the methods return that an object is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":134936,"byte_end":135013,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ readable/writable, then it will continue to do so until the `need_read` or","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135014,"byte_end":135092,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ `need_write` methods are called.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135093,"byte_end":135129,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135130,"byte_end":135133,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ That is, this object is typically wrapped in another form of I/O object.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135134,"byte_end":135210,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ It's the responsibility of the wrapper to inform the readiness stream when a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135211,"byte_end":135291,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ \"would block\" I/O event is seen. The readiness stream will then take care of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135292,"byte_end":135372,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ any scheduling necessary to get notified when the event is ready again.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135373,"byte_end":135448,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135449,"byte_end":135452,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ You can find more information about creating a custom I/O object [online].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135453,"byte_end":135531,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135532,"byte_end":135535,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/going-deeper-tokio/core-low-level/#custom-io","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135536,"byte_end":135616,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135617,"byte_end":135620,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Readiness to read/write","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135621,"byte_end":135651,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135652,"byte_end":135655,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ A `PollEvented` allows listening and waiting for an arbitrary `mio::Ready`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135656,"byte_end":135734,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ instance, including the platform-specific contents of `mio::Ready`. At most","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135735,"byte_end":135814,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ two future tasks, however, can be waiting on a `PollEvented`. The","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135815,"byte_end":135884,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ `need_read` and `need_write` methods can block two separate tasks, one on","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135885,"byte_end":135962,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ reading and one on writing. Not all I/O events correspond to read/write,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":135963,"byte_end":136039,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ however!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136040,"byte_end":136052,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136053,"byte_end":136056,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ To account for this a `PollEvented` gets a little interesting when working","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136057,"byte_end":136135,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ with an arbitrary instance of `mio::Ready` that may not map precisely to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136136,"byte_end":136212,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ \"write\" and \"read\" tasks. Currently it is defined that instances of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136213,"byte_end":136284,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"/ `mio::Ready` that do *not* return true from `is_writable` are all notified","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136285,"byte_end":136363,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ through `need_read`, or the read task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136364,"byte_end":136406,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136407,"byte_end":136410,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ In other words, `poll_ready` with the `mio::UnixReady::hup` event will block","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136411,"byte_end":136491,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ the read task of this `PollEvented` if the `hup` event isn't available.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136492,"byte_end":136567,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ Essentially a good rule of thumb is that if you're using the `poll_ready`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136568,"byte_end":136645,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ method you want to also use `need_read` to signal blocking and you should","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136646,"byte_end":136723,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ otherwise probably avoid using two tasks on the same `PollEvented`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":136724,"byte_end":136795,"line_start":66,"line_end":66,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137354,"byte_end":137357,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"fn (io: E, handle: &Handle) -> io::Result<PollEvented<E>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new readiness stream associated with the provided\n `loop_handle` and for the given `source`.","sig":null,"attributes":[{"value":"/ Creates a new readiness stream associated with the provided","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137116,"byte_end":137179,"line_start":84,"line_end":84,"column_start":5,"column_end":68}},{"value":"/ `loop_handle` and for the given `source`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137184,"byte_end":137229,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137234,"byte_end":137237,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This method returns a future which will resolve to the readiness stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137242,"byte_end":137317,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ when it's ready.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137322,"byte_end":137342,"line_start":88,"line_end":88,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138565,"byte_end":138575,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"deregister","qualname":"<PollEvented<E>>::deregister","value":"fn (self, _: &Handle) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deregisters this source of events from the reactor core specified.","sig":null,"attributes":[{"value":"/ Deregisters this source of events from the reactor core specified.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137823,"byte_end":137893,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137898,"byte_end":137901,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This method can optionally be called to unregister the underlying I/O","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137906,"byte_end":137979,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ object with the event loop that the `handle` provided points to.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137984,"byte_end":138052,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/ Typically this method is not required as this automatically happens when","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138057,"byte_end":138133,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ `E` is dropped, but for some use cases the `E` object doesn't represent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138138,"byte_end":138213,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ an owned reference, so dropping it won't automatically unregister with","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138218,"byte_end":138292,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ the event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138297,"byte_end":138316,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138321,"byte_end":138324,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This consumes `self` as it will no longer provide events after the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138329,"byte_end":138399,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/ method is called, and will likely return an error if this `PollEvented`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138404,"byte_end":138479,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ was created on a separate event loop from the `handle` specified.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138484,"byte_end":138553,"line_start":115,"line_end":115,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139422,"byte_end":139431,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<PollEvented<E>>::poll_read","value":"fn (&self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Tests to see if this source is ready to be read from or not.","sig":null,"attributes":[{"value":"/ Tests to see if this source is ready to be read from or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138783,"byte_end":138847,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138852,"byte_end":138855,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this stream is not ready for a read then `NotReady` will be returned","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138860,"byte_end":138935,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ and the current task will be scheduled to receive a notification when","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138940,"byte_end":139013,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ the stream is readable again. In other words, this method is only safe","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139018,"byte_end":139092,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ to call from within the context of a future's task, typically done in a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139097,"byte_end":139172,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ `Future::poll` method.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139177,"byte_end":139203,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139208,"byte_end":139211,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is mostly equivalent to `self.poll_ready(Ready::readable())`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139216,"byte_end":139286,"line_start":132,"line_end":132,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139291,"byte_end":139294,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139299,"byte_end":139311,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139316,"byte_end":139319,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139324,"byte_end":139396,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":139401,"byte_end":139410,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":141049,"byte_end":141059,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<PollEvented<E>>::poll_write","value":"fn (&self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Tests to see if this source is ready to be written to or not.","sig":null,"attributes":[{"value":"/ Tests to see if this source is ready to be written to or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140408,"byte_end":140473,"line_start":172,"line_end":172,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140478,"byte_end":140481,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If this stream is not ready for a write then `NotReady` will be returned","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140486,"byte_end":140562,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ and the current task will be scheduled to receive a notification when","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140567,"byte_end":140640,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ the stream is writable again. In other words, this method is only safe","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140645,"byte_end":140719,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ to call from within the context of a future's task, typically done in a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140724,"byte_end":140799,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ `Future::poll` method.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140804,"byte_end":140830,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140835,"byte_end":140838,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This is mostly equivalent to `self.poll_ready(Ready::writable())`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140843,"byte_end":140913,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140918,"byte_end":140921,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140926,"byte_end":140938,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140943,"byte_end":140946,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":140951,"byte_end":141023,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":141028,"byte_end":141037,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":143005,"byte_end":143015,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<PollEvented<E>>::poll_ready","value":"fn (&self, mask: Ready) -> Async<Ready>","parent":null,"children":[],"decl_id":null,"docs":" Test to see whether this source fulfills any condition listed in `mask`\n provided.","sig":null,"attributes":[{"value":"/ Test to see whether this source fulfills any condition listed in `mask`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":141825,"byte_end":141900,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":141905,"byte_end":141918,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":141923,"byte_end":141926,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The `mask` given here is a mio `Ready` set of possible events. This can","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":141931,"byte_end":142006,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ contain any events like read/write but also platform-specific events","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142011,"byte_end":142083,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/ such as hup and error. The `mask` indicates events that are interested","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142088,"byte_end":142162,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ in being ready.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142167,"byte_end":142186,"line_start":217,"line_end":217,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142191,"byte_end":142194,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If any event in `mask` is ready then it is returned through","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142199,"byte_end":142262,"line_start":219,"line_end":219,"column_start":5,"column_end":68}},{"value":"/ `Async::Ready`. The `Ready` set returned is guaranteed to not be empty","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142267,"byte_end":142341,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ and contains all events that are currently ready in the `mask` provided.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142346,"byte_end":142422,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142427,"byte_end":142430,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ If no events are ready in the `mask` provided then the current task is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142435,"byte_end":142509,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ scheduled to receive a notification when any of them become ready. If","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142514,"byte_end":142587,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ the `writable` event is contained within `mask` then this","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142592,"byte_end":142653,"line_start":225,"line_end":225,"column_start":5,"column_end":66}},{"value":"/ `PollEvented`'s `write` task will be blocked and otherwise the `read`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142658,"byte_end":142731,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ task will be blocked. This is generally only relevant if you're working","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142736,"byte_end":142811,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/ with this `PollEvented` object on multiple tasks.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142816,"byte_end":142869,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142874,"byte_end":142877,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142882,"byte_end":142894,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142899,"byte_end":142902,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142907,"byte_end":142979,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":142984,"byte_end":142993,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145036,"byte_end":145045,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"need_read","qualname":"<PollEvented<E>>::need_read","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Indicates to this source of events that the corresponding I/O object is\n no longer readable, but it needs to be.","sig":null,"attributes":[{"value":"/ Indicates to this source of events that the corresponding I/O object is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":143787,"byte_end":143862,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ no longer readable, but it needs to be.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":143867,"byte_end":143910,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":143915,"byte_end":143918,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This function, like `poll_read`, is only safe to call from the context","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":143923,"byte_end":143997,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ of a future's task (typically in a `Future::poll` implementation). It","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144002,"byte_end":144075,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ informs this readiness stream that the underlying object is no longer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144080,"byte_end":144153,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ readable, typically because a \"would block\" error was seen.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144158,"byte_end":144221,"line_start":276,"line_end":276,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144226,"byte_end":144229,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ *All* readiness bits associated with this stream except the writable bit","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144234,"byte_end":144310,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ will be reset when this method is called. The current task is then","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144315,"byte_end":144385,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ scheduled to receive a notification whenever anything changes other than","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144390,"byte_end":144466,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ the writable bit. Note that this typically just means the readable bit","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144471,"byte_end":144545,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/ is used here, but if you're using a custom I/O object for events like","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144550,"byte_end":144623,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ hup/error this may also be relevant.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144628,"byte_end":144668,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144673,"byte_end":144676,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that it is also only valid to call this method if `poll_read`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144681,"byte_end":144751,"line_start":285,"line_end":285,"column_start":5,"column_end":75}},{"value":"/ previously indicated that the object is readable. That is, this function","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144756,"byte_end":144832,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ must always be paired with calls to `poll_read` previously.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144837,"byte_end":144900,"line_start":287,"line_end":287,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144905,"byte_end":144908,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144913,"byte_end":144925,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144930,"byte_end":144933,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":144938,"byte_end":145010,"line_start":291,"line_end":291,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145015,"byte_end":145024,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146243,"byte_end":146253,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"name":"need_write","qualname":"<PollEvented<E>>::need_write","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Indicates to this source of events that the corresponding I/O object is\n no longer writable, but it needs to be.","sig":null,"attributes":[{"value":"/ Indicates to this source of events that the corresponding I/O object is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145248,"byte_end":145323,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ no longer writable, but it needs to be.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145328,"byte_end":145371,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145376,"byte_end":145379,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This function, like `poll_write`, is only safe to call from the context","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145384,"byte_end":145459,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ of a future's task (typically in a `Future::poll` implementation). It","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145464,"byte_end":145537,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ informs this readiness stream that the underlying object is no longer","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145542,"byte_end":145615,"line_start":307,"line_end":307,"column_start":5,"column_end":78}},{"value":"/ writable, typically because a \"would block\" error was seen.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145620,"byte_end":145683,"line_start":308,"line_end":308,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145688,"byte_end":145691,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The flag indicating that this stream is writable is unset and the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145696,"byte_end":145765,"line_start":310,"line_end":310,"column_start":5,"column_end":74}},{"value":"/ current task is scheduled to receive a notification when the stream is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145770,"byte_end":145844,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ then again writable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145849,"byte_end":145873,"line_start":312,"line_end":312,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145878,"byte_end":145881,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that it is also only valid to call this method if `poll_write`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145886,"byte_end":145957,"line_start":314,"line_end":314,"column_start":5,"column_end":76}},{"value":"/ previously indicated that the object is writable. That is, this function","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":145962,"byte_end":146038,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ must always be paired with calls to `poll_write` previously.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146043,"byte_end":146107,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146112,"byte_end":146115,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146120,"byte_end":146132,"line_start":318,"line_end":318,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146137,"byte_end":146140,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146145,"byte_end":146217,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146222,"byte_end":146231,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146573,"byte_end":146579,"line_start":333,"line_end":333,"column_start":12,"column_end":18},"name":"remote","qualname":"<PollEvented<E>>::remote","value":"fn (&self) -> &Remote","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the event loop handle that this readiness stream\n is associated with.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the event loop handle that this readiness stream","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146458,"byte_end":146533,"line_start":331,"line_end":331,"column_start":5,"column_end":80}},{"value":"/ is associated with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146538,"byte_end":146561,"line_start":332,"line_end":332,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146746,"byte_end":146753,"line_start":339,"line_end":339,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146632,"byte_end":146706,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146711,"byte_end":146734,"line_start":338,"line_end":338,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146912,"byte_end":146919,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146797,"byte_end":146872,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146877,"byte_end":146900,"line_start":344,"line_end":344,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":154115,"byte_end":154126,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"PollEvented","qualname":"::reactor::poll_evented2::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::Read`] and / or\n [`std::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"/ Associates an I/O resource that implements the [`std::Read`] and / or","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":150725,"byte_end":150798,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ [`std::Write`] traits with the reactor that drives it.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":150799,"byte_end":150857,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":150858,"byte_end":150861,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `PollEvented` uses [`Registration`] internally to take a type that","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":150862,"byte_end":150932,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ implements [`mio::Evented`] as well as [`std::Read`] and or [`std::Write`]","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":150933,"byte_end":151011,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ and associate it with a reactor that will drive it.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151012,"byte_end":151067,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151068,"byte_end":151071,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Once the [`mio::Evented`] type is wrapped by `PollEvented`, it can be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151072,"byte_end":151145,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ used from within the future's execution model. As such, the `PollEvented`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151146,"byte_end":151223,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ type provides [`AsyncRead`] and [`AsyncWrite`] implementations using the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151224,"byte_end":151300,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ underlying I/O resource as well as readiness events provided by the reactor.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151301,"byte_end":151381,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151382,"byte_end":151385,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ **Note**: While `PollEvented` is `Sync` (if the underlying I/O type is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151386,"byte_end":151460,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ `Sync`), the caller must ensure that there are at most two tasks that use a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151461,"byte_end":151540,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ `PollEvented` instance concurrenty. One for reading and one for writing.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151541,"byte_end":151617,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ While violating this requirement is \"safe\" from a Rust memory model point of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151618,"byte_end":151698,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ view, it will result in unexpected behavior in the form of lost","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151699,"byte_end":151766,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ notifications and tasks hanging.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151767,"byte_end":151803,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151804,"byte_end":151807,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Readiness events","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151808,"byte_end":151831,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151832,"byte_end":151835,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Besides just providing [`AsyncRead`] and [`AsyncWrite`] implementations,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151836,"byte_end":151912,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ this type also supports access to the underlying readiness event stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151913,"byte_end":151989,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ While similar in function to what [`Registration`] provides, the semantics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":151990,"byte_end":152068,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ are a bit different.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152069,"byte_end":152093,"line_start":37,"line_end":37,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152094,"byte_end":152097,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Two functions are provided to access the readiness events:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152098,"byte_end":152160,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ [`poll_read_ready`] and [`poll_write_ready`]. These functions return the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152161,"byte_end":152237,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ current readiness state of the `PollEvented` instance. If","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152238,"byte_end":152299,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/ [`poll_read_ready`] indicates read readiness, immediately calling","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152300,"byte_end":152369,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ [`poll_read_ready`] again will also indicate read readiness.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152370,"byte_end":152434,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152435,"byte_end":152438,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ When the operation is attempted and is unable to succeed due to the I/O","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152439,"byte_end":152514,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ resource not being ready, the caller must call [`clear_read_ready`] or","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152515,"byte_end":152589,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ [`clear_write_ready`]. This clears the readiness state until a new readiness","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152590,"byte_end":152670,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ event is received.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152671,"byte_end":152693,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152694,"byte_end":152697,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This allows the caller to implement additional funcitons. For example,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152698,"byte_end":152772,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ [`TcpListener`] implements poll_accept by using [`poll_read_ready`] and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152773,"byte_end":152848,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ [`clear_write_ready`].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152849,"byte_end":152875,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152876,"byte_end":152879,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152880,"byte_end":152898,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ pub fn poll_accept(&mut self) -> Poll<(net::TcpStream, SocketAddr), io::Error> {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152899,"byte_end":152983,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/     let ready = Ready::readable();","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":152984,"byte_end":153022,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153023,"byte_end":153026,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     try_ready!(self.poll_evented.poll_read_ready(ready));","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153027,"byte_end":153088,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153089,"byte_end":153092,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     match self.poll_evented.get_ref().accept_std() {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153093,"byte_end":153149,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/         Ok(pair) => Ok(Async::Ready(pair)),","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153150,"byte_end":153197,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153198,"byte_end":153266,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/             self.poll_evented.clear_read_ready(ready);","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153267,"byte_end":153325,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/             Ok(Async::NotReady)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153326,"byte_end":153361,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153362,"byte_end":153375,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         Err(e) => Err(e),","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153376,"byte_end":153405,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153406,"byte_end":153415,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153416,"byte_end":153421,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153422,"byte_end":153429,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153430,"byte_end":153433,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific events","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153434,"byte_end":153465,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153466,"byte_end":153469,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ `PollEvented` also allows receiving platform-specific `mio::Ready` events.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153470,"byte_end":153548,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ These events are included as part of the read readiness event stream. The","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153549,"byte_end":153626,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ write readiness event stream is only for `Ready::writable()` events.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153627,"byte_end":153699,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153700,"byte_end":153703,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`std::Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153704,"byte_end":153771,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/ [`std::Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153772,"byte_end":153841,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ [`AsyncRead`]: ../io/trait.AsyncRead.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153842,"byte_end":153887,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../io/trait.AsyncWrite.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153888,"byte_end":153935,"line_start":80,"line_end":80,"column_start":1,"column_end":48}},{"value":"/ [`mio::Evented`]: https://docs.rs/mio/0.6/mio/trait.Evented.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":153936,"byte_end":154004,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ [`Registration`]: struct.Registration.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":154005,"byte_end":154051,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":154052,"byte_end":154103,"line_start":83,"line_end":83,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":155915,"byte_end":155918,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"fn (io: E) -> PollEvented<E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":155835,"byte_end":155903,"line_start":145,"line_end":145,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156296,"byte_end":156311,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"new_with_handle","qualname":"<PollEvented<E>>::new_with_handle","value":"fn (io: E, handle: &Handle) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the specified reactor.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the specified reactor.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156214,"byte_end":156284,"line_start":157,"line_end":157,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156620,"byte_end":156627,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156506,"byte_end":156580,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156585,"byte_end":156608,"line_start":165,"line_end":165,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156803,"byte_end":156810,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156688,"byte_end":156763,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156768,"byte_end":156791,"line_start":171,"line_end":171,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157346,"byte_end":157356,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"fn (mut self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156879,"byte_end":156928,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156933,"byte_end":156936,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":156941,"byte_end":157015,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157020,"byte_end":157095,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157100,"byte_end":157103,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157108,"byte_end":157183,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157188,"byte_end":157264,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157269,"byte_end":157334,"line_start":183,"line_end":183,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158340,"byte_end":158355,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"fn (&self, mask: mio::Ready) -> Poll<mio::Ready, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Check the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Check the I/O resource's read readiness state.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157504,"byte_end":157554,"line_start":190,"line_end":190,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157559,"byte_end":157562,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157567,"byte_end":157640,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157645,"byte_end":157716,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157721,"byte_end":157796,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157801,"byte_end":157808,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157813,"byte_end":157816,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Async::NotReady` is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157821,"byte_end":157890,"line_start":197,"line_end":197,"column_start":5,"column_end":74}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157895,"byte_end":157970,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157975,"byte_end":157978,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":157983,"byte_end":158056,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158061,"byte_end":158105,"line_start":201,"line_end":201,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158110,"byte_end":158113,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: #method.clear_read_ready","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158118,"byte_end":158168,"line_start":203,"line_end":203,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158173,"byte_end":158176,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158181,"byte_end":158193,"line_start":205,"line_end":205,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158198,"byte_end":158201,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158206,"byte_end":158234,"line_start":207,"line_end":207,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158239,"byte_end":158242,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158247,"byte_end":158279,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158284,"byte_end":158328,"line_start":210,"line_end":210,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159174,"byte_end":159190,"line_start":231,"line_end":231,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"fn (&self, ready: mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158580,"byte_end":158656,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158661,"byte_end":158725,"line_start":217,"line_end":217,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158730,"byte_end":158733,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return `NotReady`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158738,"byte_end":158811,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ until a new read readiness event has been received.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158816,"byte_end":158871,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158876,"byte_end":158879,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158884,"byte_end":158959,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":158964,"byte_end":158996,"line_start":223,"line_end":223,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159001,"byte_end":159004,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159009,"byte_end":159021,"line_start":225,"line_end":225,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159026,"byte_end":159029,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159034,"byte_end":159062,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159067,"byte_end":159070,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159075,"byte_end":159113,"line_start":229,"line_end":229,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159118,"byte_end":159162,"line_start":230,"line_end":230,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160407,"byte_end":160423,"line_start":265,"line_end":265,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"fn (&self) -> Poll<mio::Ready, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Check the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Check the I/O resource's write readiness state.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159664,"byte_end":159715,"line_start":246,"line_end":246,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159720,"byte_end":159723,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159728,"byte_end":159797,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159802,"byte_end":159845,"line_start":249,"line_end":249,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159850,"byte_end":159853,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Async::NotReady` is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159858,"byte_end":159928,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":159933,"byte_end":160008,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160013,"byte_end":160016,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160021,"byte_end":160095,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160100,"byte_end":160145,"line_start":255,"line_end":255,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160150,"byte_end":160153,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: #method.clear_write_ready","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160158,"byte_end":160210,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160215,"byte_end":160218,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160223,"byte_end":160235,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160240,"byte_end":160243,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160248,"byte_end":160276,"line_start":261,"line_end":261,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160281,"byte_end":160284,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160289,"byte_end":160346,"line_start":263,"line_end":263,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160351,"byte_end":160395,"line_start":264,"line_end":264,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161230,"byte_end":161247,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160658,"byte_end":160735,"line_start":273,"line_end":273,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160740,"byte_end":160805,"line_start":274,"line_end":274,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160810,"byte_end":160813,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160818,"byte_end":160894,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160899,"byte_end":160944,"line_start":277,"line_end":277,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160949,"byte_end":160952,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":160957,"byte_end":161032,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new read readiness event has been received.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161037,"byte_end":161110,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161115,"byte_end":161118,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161123,"byte_end":161135,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161140,"byte_end":161143,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161148,"byte_end":161218,"line_start":284,"line_end":284,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166498,"byte_end":166505,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::reactor::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":1085}],"decl_id":null,"docs":" A future representing the notification that a timeout has occurred.","sig":null,"attributes":[{"value":"/ A future representing the notification that a timeout has occurred.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166023,"byte_end":166094,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166095,"byte_end":166098,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Timeouts are created through the `Timeout::new` or","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166099,"byte_end":166153,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ `Timeout::new_at` methods indicating when a timeout should fire at.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166154,"byte_end":166225,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ Note that timeouts are not intended for high resolution timers, but rather","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166226,"byte_end":166304,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166305,"byte_end":166384,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166385,"byte_end":166420,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166421,"byte_end":166469,"line_start":21,"line_end":21,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166849,"byte_end":166852,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Timeout>::new","value":"fn (dur: Duration, handle: &Handle) -> io::Result<Timeout>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timeout which will fire at `dur` time into the future.","sig":null,"attributes":[{"value":"/ Creates a new timeout which will fire at `dur` time into the future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166547,"byte_end":166619,"line_start":28,"line_end":28,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166624,"byte_end":166627,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will return a Result with the actual timeout object or an","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166632,"byte_end":166707,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ error. The timeout object itself is then a future which will be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166712,"byte_end":166779,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ set to fire at the specified point in the future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166784,"byte_end":166837,"line_start":32,"line_end":32,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167277,"byte_end":167283,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"new_at","qualname":"<Timeout>::new_at","value":"fn (at: Instant, handle: &Handle) -> io::Result<Timeout>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timeout which will fire at the time specified by `at`.","sig":null,"attributes":[{"value":"/ Creates a new timeout which will fire at the time specified by `at`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166975,"byte_end":167047,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167052,"byte_end":167055,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This function will return a Result with the actual timeout object or an","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167060,"byte_end":167135,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ error. The timeout object itself is then a future which will be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167140,"byte_end":167207,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ set to fire at the specified point in the future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167212,"byte_end":167265,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":168143,"byte_end":168148,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"reset","qualname":"<Timeout>::reset","value":"fn (&mut self, at: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets this timeout to an new timeout which will fire at the time\n specified by `at`.","sig":null,"attributes":[{"value":"/ Resets this timeout to an new timeout which will fire at the time","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167438,"byte_end":167507,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ specified by `at`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167512,"byte_end":167534,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167539,"byte_end":167542,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method is usable even of this instance of `Timeout` has \"already","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167547,"byte_end":167620,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ fired\". That is, if this future has resolved, calling this method means","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167625,"byte_end":167700,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ that the future will still re-resolve at the specified instant.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167705,"byte_end":167772,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167777,"byte_end":167780,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If `at` is in the past then this future will immediately be resolved","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167785,"byte_end":167857,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ (when `poll` is called).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167862,"byte_end":167890,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167895,"byte_end":167898,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that if any task is currently blocked on this future then that task","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167903,"byte_end":167979,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ will be dropped. It is required to call `poll` again after this method","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":167984,"byte_end":168058,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ has been called to ensure that a task is blocked on this future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":168063,"byte_end":168131,"line_start":60,"line_end":60,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169276,"byte_end":169284,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Interval","qualname":"::reactor::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":956}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":168776,"byte_end":168833,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":168834,"byte_end":168837,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Intervals are created through the `Interval::new` or","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":168838,"byte_end":168894,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ `Interval::new_at` methods indicating when a first notification","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":168895,"byte_end":168962,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/ should be triggered and when it will be repeated.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":168963,"byte_end":169016,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169017,"byte_end":169020,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that timeouts are not intended for high resolution timers, but rather","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169021,"byte_end":169099,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169100,"byte_end":169179,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169180,"byte_end":169215,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169216,"byte_end":169264,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169680,"byte_end":169683,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Interval>::new","value":"fn (dur: Duration, handle: &Handle) -> io::Result<Interval>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new interval which will fire at `dur` time into the future,\n and will repeat every `dur` interval after","sig":null,"attributes":[{"value":"/ Creates a new interval which will fire at `dur` time into the future,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169331,"byte_end":169404,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ and will repeat every `dur` interval after","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169409,"byte_end":169455,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169460,"byte_end":169463,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This function will return a future that will resolve to the actual","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169468,"byte_end":169538,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ interval object. The interval object itself is then a stream which will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169543,"byte_end":169618,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ be set to fire at the specified intervals","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169623,"byte_end":169668,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":170176,"byte_end":170182,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"new_at","qualname":"<Interval>::new_at","value":"fn (at: Instant, dur: Duration, handle: &Handle) -> io::Result<Interval>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new interval which will fire at the time specified by `at`,\n and then will repeat every `dur` interval after","sig":null,"attributes":[{"value":"/ Creates a new interval which will fire at the time specified by `at`,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169813,"byte_end":169886,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ and then will repeat every `dur` interval after","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169891,"byte_end":169942,"line_start":41,"line_end":41,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169947,"byte_end":169950,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function will return a future that will resolve to the actual","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169955,"byte_end":170025,"line_start":43,"line_end":43,"column_start":5,"column_end":75}},{"value":"/ timeout object. The timeout object itself is then a future which will be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":170030,"byte_end":170106,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ set to fire at the specified point in the future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":170111,"byte_end":170164,"line_start":45,"line_end":45,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112643,"byte_end":112647,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Core","qualname":"::reactor::Core","value":"Core {  }","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982}],"decl_id":null,"docs":" An event loop.","sig":null,"attributes":[{"value":"/ An event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112273,"byte_end":112291,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112292,"byte_end":112295,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The event loop is the main source of blocking in an application which drives","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112296,"byte_end":112376,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ all other I/O events and notifications happening. Each event loop can have","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112377,"byte_end":112455,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ multiple handles pointing to it, each of which can then be used to create","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112456,"byte_end":112533,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ various I/O objects to interact with the event loop in interesting ways.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":112534,"byte_end":112610,"line_start":44,"line_end":44,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113724,"byte_end":113730,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"CoreId","qualname":"::reactor::CoreId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unique ID for a Core","sig":null,"attributes":[{"value":"/ An unique ID for a Core","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113469,"byte_end":113496,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113497,"byte_end":113500,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ An ID by which different cores may be distinguished. Can be compared and used as an index in","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113501,"byte_end":113597,"line_start":82,"line_end":82,"column_start":1,"column_end":97}},{"value":"/ a `HashMap`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113598,"byte_end":113614,"line_start":83,"line_end":83,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113615,"byte_end":113618,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The ID is globally unique and never reused.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113619,"byte_end":113666,"line_start":85,"line_end":85,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114017,"byte_end":114023,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"Remote","qualname":"::reactor::Remote","value":"Remote {  }","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115}],"decl_id":null,"docs":" Handle to an event loop, used to construct I/O objects, send messages, and\n otherwise interact indirectly with the event loop itself.","sig":null,"attributes":[{"value":"/ Handle to an event loop, used to construct I/O objects, send messages, and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113740,"byte_end":113818,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ otherwise interact indirectly with the event loop itself.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113819,"byte_end":113880,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113881,"byte_end":113884,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Handles can be cloned, and when cloned they will still refer to the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113885,"byte_end":113956,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ same underlying event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":113957,"byte_end":113988,"line_start":93,"line_end":93,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114283,"byte_end":114289,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Handle","qualname":"::reactor::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"decl_id":null,"docs":" A non-sendable handle to an event loop, useful for manufacturing instances\n of `LoopData`.\n","sig":null,"attributes":[{"value":"/ A non-sendable handle to an event loop, useful for manufacturing instances","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114157,"byte_end":114235,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ of `LoopData`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114236,"byte_end":114254,"line_start":103,"line_end":103,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114582,"byte_end":114585,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Core>::new","value":"fn () -> io::Result<Core>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new event loop, returning any error that happened during the\n creation.\n","sig":null,"attributes":[{"value":"/ Creates a new event loop, returning any error that happened during the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114478,"byte_end":114552,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ creation.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114557,"byte_end":114570,"line_start":119,"line_end":119,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116039,"byte_end":116045,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"handle","qualname":"<Core>::handle","value":"fn (&self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to this event loop which cannot be sent across threads\n but can be used as a proxy to the event loop itself.","sig":null,"attributes":[{"value":"/ Returns a handle to this event loop which cannot be sent across threads","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":115685,"byte_end":115760,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ but can be used as a proxy to the event loop itself.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":115765,"byte_end":115821,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":115826,"byte_end":115829,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Handles are cloneable and clones always refer to the same event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":115834,"byte_end":115907,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ This handle is typically passed into functions that create I/O objects","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":115912,"byte_end":115986,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to bind them to this event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":115991,"byte_end":116027,"line_start":164,"line_end":164,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116378,"byte_end":116385,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"runtime","qualname":"<Core>::runtime","value":"fn (&self) -> &tokio::runtime::Runtime","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the runtime backing the instance","sig":null,"attributes":[{"value":"/ Returns a reference to the runtime backing the instance","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116238,"byte_end":116297,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116302,"byte_end":116305,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This provides access to the newer features of Tokio.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116310,"byte_end":116366,"line_start":175,"line_end":175,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116593,"byte_end":116599,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"remote","qualname":"<Core>::remote","value":"fn (&self) -> Remote","parent":null,"children":[],"decl_id":null,"docs":" Generates a remote handle to this event loop which can be used to spawn\n tasks from other threads into this event loop.\n","sig":null,"attributes":[{"value":"/ Generates a remote handle to this event loop which can be used to spawn","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116451,"byte_end":116526,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ tasks from other threads into this event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116531,"byte_end":116581,"line_start":181,"line_end":181,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117723,"byte_end":117726,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"run","qualname":"<Core>::run","value":"fn <F> (&mut self, f: F) -> Result<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":" Runs a future until completion, driving the event loop while we're\n otherwise waiting for the future to complete.","sig":null,"attributes":[{"value":"/ Runs a future until completion, driving the event loop while we're","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116818,"byte_end":116888,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ otherwise waiting for the future to complete.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116893,"byte_end":116942,"line_start":192,"line_end":192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116947,"byte_end":116950,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function will begin executing the event loop and will finish once","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":116955,"byte_end":117029,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ the provided future is resolved. Note that the future argument here","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117034,"byte_end":117105,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ crucially does not require the `'static` nor `Send` bounds. As a result","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117110,"byte_end":117185,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ the future will be \"pinned\" to not only this thread but also this stack","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117190,"byte_end":117265,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ frame.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117270,"byte_end":117280,"line_start":198,"line_end":198,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117285,"byte_end":117288,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function will return the value that the future resolves to once","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117293,"byte_end":117365,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ the future has finished. If the future never resolves then this function","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117370,"byte_end":117446,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ will never return.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117451,"byte_end":117473,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117478,"byte_end":117481,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117486,"byte_end":117498,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117503,"byte_end":117506,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This method will **not** catch panics from polling the future `f`. If","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117511,"byte_end":117584,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ the future panics then it's the responsibility of the caller to catch","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117589,"byte_end":117662,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ that panic and handle it as appropriate.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":117667,"byte_end":117711,"line_start":208,"line_end":208,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119778,"byte_end":119782,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"turn","qualname":"<Core>::turn","value":"fn (&mut self, max_wait: Option<Duration>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs one iteration of the event loop, blocking on waiting for events\n for at most `max_wait` (forever if `None`).","sig":null,"attributes":[{"value":"/ Performs one iteration of the event loop, blocking on waiting for events","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119386,"byte_end":119462,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ for at most `max_wait` (forever if `None`).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119467,"byte_end":119514,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119519,"byte_end":119522,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ It only makes sense to call this method if you've previously spawned","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119527,"byte_end":119599,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ a future onto this event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119604,"byte_end":119638,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119643,"byte_end":119646,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ `loop { lp.turn(None) }` is equivalent to calling `run` with an","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119651,"byte_end":119718,"line_start":258,"line_end":258,"column_start":5,"column_end":72}},{"value":"/ empty future (one that never finishes).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":119723,"byte_end":119766,"line_start":259,"line_end":259,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":122564,"byte_end":122566,"line_start":333,"line_end":333,"column_start":12,"column_end":14},"name":"id","qualname":"<Core>::id","value":"fn (&self) -> CoreId","parent":null,"children":[],"decl_id":null,"docs":" Get the ID of this loop\n","sig":null,"attributes":[{"value":"/ Get the ID of this loop","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":122525,"byte_end":122552,"line_start":332,"line_end":332,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125720,"byte_end":125725,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Remote>::spawn","value":"fn <F, R> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new future into the event loop this remote is associated with.","sig":null,"attributes":[{"value":"/ Spawns a new future into the event loop this remote is associated with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125042,"byte_end":125117,"line_start":408,"line_end":408,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125122,"byte_end":125125,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This function takes a closure which is executed within the context of","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125130,"byte_end":125203,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ the I/O loop itself. The future returned by the closure will be","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125208,"byte_end":125275,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/ scheduled on the event loop and run to completion.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125280,"byte_end":125334,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125339,"byte_end":125342,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Note that while the closure, `F`, requires the `Send` bound as it might","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125347,"byte_end":125422,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ cross threads, the future `R` does not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125427,"byte_end":125470,"line_start":415,"line_end":415,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125475,"byte_end":125478,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125483,"byte_end":125495,"line_start":417,"line_end":417,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125500,"byte_end":125503,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This method will **not** catch panics from polling the future `f`. If","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125508,"byte_end":125581,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ the future panics then it's the responsibility of the caller to catch","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125586,"byte_end":125659,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ that panic and handle it as appropriate.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":125664,"byte_end":125708,"line_start":421,"line_end":421,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126106,"byte_end":126108,"line_start":434,"line_end":434,"column_start":12,"column_end":14},"name":"id","qualname":"<Remote>::id","value":"fn (&self) -> CoreId","parent":null,"children":[],"decl_id":null,"docs":" Return the ID of the represented Core\n","sig":null,"attributes":[{"value":"/ Return the ID of the represented Core","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126053,"byte_end":126094,"line_start":433,"line_end":433,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126884,"byte_end":126890,"line_start":450,"line_end":450,"column_start":12,"column_end":18},"name":"handle","qualname":"<Remote>::handle","value":"fn (&self) -> Option<Handle>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to \"promote\" this remote to a handle, if possible.","sig":null,"attributes":[{"value":"/ Attempts to \"promote\" this remote to a handle, if possible.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126163,"byte_end":126226,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126231,"byte_end":126234,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This function is intended for structures which typically work through a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126239,"byte_end":126314,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ `Remote` but want to optimize runtime when the remote doesn't actually","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126319,"byte_end":126393,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ leave the thread of the original reactor. This will attempt to return a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126398,"byte_end":126473,"line_start":442,"line_end":442,"column_start":5,"column_end":80}},{"value":"/ handle if the `Remote` is on the same thread as the event loop and the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126478,"byte_end":126552,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ event loop is running.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126557,"byte_end":126583,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126588,"byte_end":126591,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ If this `Remote` has moved to a different thread or if the event loop is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126596,"byte_end":126672,"line_start":446,"line_end":446,"column_start":5,"column_end":81}},{"value":"/ running, then `None` may be returned. If you need to guarantee access to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126677,"byte_end":126753,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ a `Handle`, then you can call this function and fall back to using","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126758,"byte_end":126828,"line_start":448,"line_end":448,"column_start":5,"column_end":75}},{"value":"/ `spawn` above if it returns `None`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":126833,"byte_end":126872,"line_start":449,"line_end":449,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127711,"byte_end":127727,"line_start":485,"line_end":485,"column_start":12,"column_end":28},"name":"new_tokio_handle","qualname":"<Handle>::new_tokio_handle","value":"fn (&self) -> &::tokio::reactor::Handle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the new Tokio handle\n","sig":null,"attributes":[{"value":"/ Returns a reference to the new Tokio handle","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127652,"byte_end":127699,"line_start":484,"line_end":484,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127895,"byte_end":127901,"line_start":490,"line_end":490,"column_start":12,"column_end":18},"name":"remote","qualname":"<Handle>::remote","value":"fn (&self) -> &Remote","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying remote handle to the event loop.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying remote handle to the event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127809,"byte_end":127883,"line_start":489,"line_end":489,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128277,"byte_end":128282,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new future on the event loop this handle is associated with.","sig":null,"attributes":[{"value":"/ Spawns a new future on the event loop this handle is associated with.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127954,"byte_end":128027,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128032,"byte_end":128035,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128040,"byte_end":128052,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128057,"byte_end":128060,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This method will **not** catch panics from polling the future `f`. If","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128065,"byte_end":128138,"line_start":498,"line_end":498,"column_start":5,"column_end":78}},{"value":"/ the future panics then it's the responsibility of the caller to catch","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128143,"byte_end":128216,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ that panic and handle it as appropriate.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128221,"byte_end":128265,"line_start":500,"line_end":500,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129121,"byte_end":129131,"line_start":528,"line_end":528,"column_start":12,"column_end":22},"name":"spawn_send","qualname":"<Handle>::spawn_send","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new future onto the threadpool","sig":null,"attributes":[{"value":"/ Spawns a new future onto the threadpool","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128883,"byte_end":128926,"line_start":522,"line_end":522,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128931,"byte_end":128934,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128939,"byte_end":128951,"line_start":524,"line_end":524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128956,"byte_end":128959,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":128964,"byte_end":129039,"line_start":526,"line_end":526,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129044,"byte_end":129109,"line_start":527,"line_end":527,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129849,"byte_end":129857,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Handle>::spawn_fn","value":"fn <F, R> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a closure on this event loop.","sig":null,"attributes":[{"value":"/ Spawns a closure on this event loop.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129261,"byte_end":129301,"line_start":534,"line_end":534,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129306,"byte_end":129309,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around the `spawn` function above","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129314,"byte_end":129390,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/ for running a closure wrapped in `futures::lazy`. It will spawn the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129395,"byte_end":129466,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ function `f` provided onto the event loop, and continue to run the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129471,"byte_end":129541,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ future returned by `f` on the event loop as well.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129546,"byte_end":129599,"line_start":539,"line_end":539,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129604,"byte_end":129607,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129612,"byte_end":129624,"line_start":541,"line_end":541,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129629,"byte_end":129632,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This method will **not** catch panics from polling the future `f`. If","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129637,"byte_end":129710,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ the future panics then it's the responsibility of the caller to catch","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129715,"byte_end":129788,"line_start":544,"line_end":544,"column_start":5,"column_end":78}},{"value":"/ that panic and handle it as appropriate.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":129793,"byte_end":129837,"line_start":545,"line_end":545,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130083,"byte_end":130085,"line_start":554,"line_end":554,"column_start":12,"column_end":14},"name":"id","qualname":"<Handle>::id","value":"fn (&self) -> CoreId","parent":null,"children":[],"decl_id":null,"docs":" Return the ID of the represented Core\n","sig":null,"attributes":[{"value":"/ Return the ID of the represented Core","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130030,"byte_end":130071,"line_start":553,"line_end":553,"column_start":5,"column_end":46}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":15406,"byte_end":15410,"line_start":48,"line_end":48,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17468,"byte_end":17475,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22041,"byte_end":22048,"line_start":168,"line_end":168,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22151,"byte_end":22161,"line_start":174,"line_end":174,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22278,"byte_end":22288,"line_start":182,"line_end":182,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22390,"byte_end":22397,"line_start":188,"line_end":188,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22619,"byte_end":22626,"line_start":199,"line_end":199,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22732,"byte_end":22739,"line_start":205,"line_end":205,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22887,"byte_end":22894,"line_start":211,"line_end":211,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23042,"byte_end":23049,"line_start":217,"line_end":217,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23168,"byte_end":23178,"line_start":223,"line_end":223,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23275,"byte_end":23282,"line_start":229,"line_end":229,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23848,"byte_end":23855,"line_start":241,"line_end":241,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":27322,"byte_end":27328,"line_start":323,"line_end":323,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":29087,"byte_end":29093,"line_start":370,"line_end":370,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":30827,"byte_end":30833,"line_start":426,"line_end":426,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":37265,"byte_end":37270,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38808,"byte_end":38817,"line_start":53,"line_end":53,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40671,"byte_end":40680,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42281,"byte_end":42285,"line_start":34,"line_end":34,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":44231,"byte_end":44240,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45599,"byte_end":45607,"line_start":23,"line_end":23,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45951,"byte_end":45960,"line_start":34,"line_end":34,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":46319,"byte_end":46327,"line_start":45,"line_end":45,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":46597,"byte_end":46606,"line_start":54,"line_end":54,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48099,"byte_end":48105,"line_start":25,"line_end":25,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":50518,"byte_end":50524,"line_start":106,"line_end":106,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":50671,"byte_end":50677,"line_start":112,"line_end":112,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":52286,"byte_end":52294,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58539,"byte_end":58550,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65653,"byte_end":65664,"line_start":213,"line_end":213,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65784,"byte_end":65792,"line_start":219,"line_end":219,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66770,"byte_end":66779,"line_start":252,"line_end":252,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78836,"byte_end":78845,"line_start":553,"line_end":553,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78960,"byte_end":78969,"line_start":559,"line_end":559,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":79151,"byte_end":79160,"line_start":568,"line_end":568,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":79415,"byte_end":79424,"line_start":578,"line_end":578,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":79705,"byte_end":79714,"line_start":589,"line_end":589,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":84512,"byte_end":84521,"line_start":741,"line_end":741,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":84641,"byte_end":84653,"line_start":747,"line_end":747,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":84818,"byte_end":84835,"line_start":756,"line_end":756,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":86404,"byte_end":86413,"line_start":799,"line_end":799,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":86535,"byte_end":86546,"line_start":805,"line_end":805,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107952,"byte_end":107961,"line_start":68,"line_end":68,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":108384,"byte_end":108393,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110043,"byte_end":110052,"line_start":140,"line_end":140,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87529,"byte_end":87538,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102782,"byte_end":102791,"line_start":392,"line_end":392,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":103266,"byte_end":103275,"line_start":408,"line_end":408,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":104174,"byte_end":104183,"line_start":436,"line_end":436,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":104813,"byte_end":104822,"line_start":460,"line_end":460,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137095,"byte_end":137106,"line_start":83,"line_end":83,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138762,"byte_end":138773,"line_start":123,"line_end":123,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146996,"byte_end":147007,"line_start":350,"line_end":350,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":147366,"byte_end":147377,"line_start":366,"line_end":366,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":148047,"byte_end":148058,"line_start":396,"line_end":396,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":148097,"byte_end":148108,"line_start":399,"line_end":399,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":148253,"byte_end":148264,"line_start":406,"line_end":406,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":150271,"byte_end":150282,"line_start":499,"line_end":499,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":155797,"byte_end":155808,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161812,"byte_end":161823,"line_start":307,"line_end":307,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":162254,"byte_end":162265,"line_start":325,"line_end":325,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":162975,"byte_end":162986,"line_start":357,"line_end":357,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":163043,"byte_end":163054,"line_start":362,"line_end":362,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":164846,"byte_end":164857,"line_start":443,"line_end":443,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":165046,"byte_end":165057,"line_start":451,"line_end":451,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166533,"byte_end":166540,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":168229,"byte_end":168236,"line_start":66,"line_end":66,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169316,"byte_end":169324,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":170386,"byte_end":170394,"line_start":55,"line_end":55,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114467,"byte_end":114471,"line_start":117,"line_end":117,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":122643,"byte_end":122647,"line_start":338,"line_end":338,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":122837,"byte_end":122841,"line_start":346,"line_end":346,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":123001,"byte_end":123007,"line_start":354,"line_end":354,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1019},{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127259,"byte_end":127265,"line_start":466,"line_end":466,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127471,"byte_end":127477,"line_start":475,"line_end":475,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127639,"byte_end":127645,"line_start":483,"line_end":483,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130163,"byte_end":130169,"line_start":559,"line_end":559,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130364,"byte_end":130370,"line_start":568,"line_end":568,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130605,"byte_end":130613,"line_start":581,"line_end":581,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130866,"byte_end":130874,"line_start":594,"line_end":594,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":131130,"byte_end":131131,"line_start":605,"line_end":605,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3829,"byte_end":3831,"line_start":116,"line_end":116,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3874,"byte_end":3877,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":411}},{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/lib.rs","byte_start":3887,"byte_end":3894,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":714}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/copy.rs","byte_start":15406,"byte_end":15410,"line_start":48,"line_end":48,"column_start":23,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":35},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":17468,"byte_end":17475,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22041,"byte_end":22048,"line_start":168,"line_end":168,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22151,"byte_end":22161,"line_start":174,"line_end":174,"column_start":20,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22278,"byte_end":22288,"line_start":182,"line_end":182,"column_start":23,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22390,"byte_end":22397,"line_start":188,"line_end":188,"column_start":24,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22619,"byte_end":22626,"line_start":199,"line_end":199,"column_start":39,"column_end":46},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22732,"byte_end":22739,"line_start":205,"line_end":205,"column_start":14,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":1645}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":22887,"byte_end":22894,"line_start":211,"line_end":211,"column_start":40,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":1656}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23042,"byte_end":23049,"line_start":217,"line_end":217,"column_start":21,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":6169}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23168,"byte_end":23178,"line_start":223,"line_end":223,"column_start":19,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23275,"byte_end":23282,"line_start":229,"line_end":229,"column_start":21,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":23848,"byte_end":23855,"line_start":241,"line_end":241,"column_start":24,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":1804}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":27322,"byte_end":27328,"line_start":323,"line_end":323,"column_start":34,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":123},"to":{"krate":20,"index":1430}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":29087,"byte_end":29093,"line_start":370,"line_end":370,"column_start":32,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":123},"to":{"krate":20,"index":1784}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/frame.rs","byte_start":30827,"byte_end":30833,"line_start":426,"line_end":426,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/flush.rs","byte_start":37265,"byte_end":37270,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_exact.rs","byte_start":38808,"byte_end":38817,"line_start":53,"line_end":53,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":182},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_to_end.rs","byte_start":40671,"byte_end":40680,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":213},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read.rs","byte_start":42281,"byte_end":42285,"line_start":34,"line_end":34,"column_start":23,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/read_until.rs","byte_start":44231,"byte_end":44240,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":265},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45599,"byte_end":45607,"line_start":23,"line_end":23,"column_start":13,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":45951,"byte_end":45960,"line_start":34,"line_end":34,"column_start":13,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":46319,"byte_end":46327,"line_start":45,"line_end":45,"column_start":24,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":291},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/split.rs","byte_start":46597,"byte_end":46606,"line_start":54,"line_end":54,"column_start":26,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":294},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":48099,"byte_end":48105,"line_start":25,"line_end":25,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":50518,"byte_end":50524,"line_start":106,"line_end":106,"column_start":38,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/window.rs","byte_start":50671,"byte_end":50677,"line_start":112,"line_end":112,"column_start":38,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/write_all.rs","byte_start":52286,"byte_end":52294,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":342},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6552,"byte_end":6556,"line_start":77,"line_end":77,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2861},"to":{"krate":0,"index":395}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/io/mod.rs","byte_start":6563,"byte_end":6568,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2915},"to":{"krate":0,"index":395}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":58539,"byte_end":58550,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65653,"byte_end":65664,"line_start":213,"line_end":213,"column_start":21,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":65784,"byte_end":65792,"line_start":219,"line_end":219,"column_start":17,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":442},"to":{"krate":20,"index":1430}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":66770,"byte_end":66779,"line_start":252,"line_end":252,"column_start":6,"column_end":15},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78836,"byte_end":78845,"line_start":553,"line_end":553,"column_start":15,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":466},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":78960,"byte_end":78969,"line_start":559,"line_end":559,"column_start":16,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":466},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":79151,"byte_end":79160,"line_start":568,"line_end":568,"column_start":20,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":466},"to":{"krate":29,"index":573}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":79415,"byte_end":79424,"line_start":578,"line_end":578,"column_start":21,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":466},"to":{"krate":29,"index":598}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":79705,"byte_end":79714,"line_start":589,"line_end":589,"column_start":19,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":466},"to":{"krate":0,"index":395}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":84512,"byte_end":84521,"line_start":741,"line_end":741,"column_start":21,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":466},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":84641,"byte_end":84653,"line_start":747,"line_end":747,"column_start":17,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":468},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":84818,"byte_end":84835,"line_start":756,"line_end":756,"column_start":17,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":470},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":86404,"byte_end":86413,"line_start":799,"line_end":799,"column_start":22,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":466},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/tcp.rs","byte_start":86535,"byte_end":86546,"line_start":805,"line_end":805,"column_start":22,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":107952,"byte_end":107961,"line_start":68,"line_end":68,"column_start":30,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":610},"to":{"krate":20,"index":1430}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":108384,"byte_end":108393,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":610},"to":{"krate":20,"index":1784}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/frame.rs","byte_start":110043,"byte_end":110052,"line_start":140,"line_end":140,"column_start":9,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":87529,"byte_end":87538,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":102782,"byte_end":102791,"line_start":392,"line_end":392,"column_start":21,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":103266,"byte_end":103275,"line_start":408,"line_end":408,"column_start":20,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":678},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":104174,"byte_end":104183,"line_start":436,"line_end":436,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":688},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/net/udp/mod.rs","byte_start":104813,"byte_end":104822,"line_start":460,"line_end":460,"column_start":22,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":589},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":137095,"byte_end":137106,"line_start":83,"line_end":83,"column_start":18,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":138762,"byte_end":138773,"line_start":123,"line_end":123,"column_start":9,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":146996,"byte_end":147007,"line_start":350,"line_end":350,"column_start":24,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":779},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":147366,"byte_end":147377,"line_start":366,"line_end":366,"column_start":26,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":779},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":148047,"byte_end":148058,"line_start":396,"line_end":396,"column_start":29,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":779},"to":{"krate":29,"index":573}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":148097,"byte_end":148108,"line_start":399,"line_end":399,"column_start":31,"column_end":42},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":779},"to":{"krate":29,"index":598}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":148253,"byte_end":148264,"line_start":406,"line_end":406,"column_start":36,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":779},"to":{"krate":0,"index":395}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented.rs","byte_start":150271,"byte_end":150282,"line_start":499,"line_end":499,"column_start":46,"column_end":57},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":779},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":155797,"byte_end":155808,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":161812,"byte_end":161823,"line_start":307,"line_end":307,"column_start":18,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":865},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":162254,"byte_end":162265,"line_start":325,"line_end":325,"column_start":19,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":865},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":162975,"byte_end":162986,"line_start":357,"line_end":357,"column_start":23,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":865},"to":{"krate":29,"index":573}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":163043,"byte_end":163054,"line_start":362,"line_end":362,"column_start":24,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":865},"to":{"krate":29,"index":598}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":164846,"byte_end":164857,"line_start":443,"line_end":443,"column_start":46,"column_end":57},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/poll_evented2.rs","byte_start":165046,"byte_end":165057,"line_start":451,"line_end":451,"column_start":27,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":166533,"byte_end":166540,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/timeout.rs","byte_start":168229,"byte_end":168236,"line_start":66,"line_end":66,"column_start":17,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1084},"to":{"krate":20,"index":468}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":169316,"byte_end":169324,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/interval.rs","byte_start":170386,"byte_end":170394,"line_start":55,"line_end":55,"column_start":17,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":955},"to":{"krate":20,"index":1430}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":114467,"byte_end":114471,"line_start":117,"line_end":117,"column_start":6,"column_end":10},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":122643,"byte_end":122647,"line_start":338,"line_end":338,"column_start":25,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":973},"to":{"krate":20,"index":550}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":122837,"byte_end":122841,"line_start":346,"line_end":346,"column_start":21,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":123001,"byte_end":123007,"line_start":354,"line_end":354,"column_start":6,"column_end":12},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127259,"byte_end":127265,"line_start":466,"line_end":466,"column_start":25,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1111},"to":{"krate":20,"index":550}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127471,"byte_end":127477,"line_start":475,"line_end":475,"column_start":21,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1111},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":127639,"byte_end":127645,"line_start":483,"line_end":483,"column_start":6,"column_end":12},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130163,"byte_end":130169,"line_start":559,"line_end":559,"column_start":25,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1118},"to":{"krate":20,"index":550}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130364,"byte_end":130370,"line_start":568,"line_end":568,"column_start":21,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1118},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130605,"byte_end":130613,"line_start":581,"line_end":581,"column_start":6,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":130866,"byte_end":130874,"line_start":594,"line_end":594,"column_start":17,"column_end":25},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1048},"to":{"krate":20,"index":2262}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":131015,"byte_end":131019,"line_start":601,"line_end":601,"column_start":14,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1056}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.17/src/reactor/mod.rs","byte_start":131130,"byte_end":131131,"line_start":605,"line_end":605,"column_start":51,"column_end":52},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1059},"to":{"krate":0,"index":1056}}]}