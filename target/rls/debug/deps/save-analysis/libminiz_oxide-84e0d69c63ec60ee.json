{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6","program":"/Users/adamtoth-fejel/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","miniz_oxide","--edition=2018","/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=84e0d69c63ec60ee","-C","extra-filename=-84e0d69c63ec60ee","--out-dir","/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps","-L","dependency=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps","--extern","adler32=/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libadler32-010afaa73dd71431.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/adamtoth-fejel/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/adamtoth-fejel/Documents/GitHub/sentry-rust/target/rls/debug/deps/libminiz_oxide-84e0d69c63ec60ee.rmeta"},"prelude":{"crate_id":{"name":"miniz_oxide","disambiguator":[13578733497811798875,16497393782418204997]},"crate_root":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src","external_crates":[{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12669636623235690034,8759211680751900309]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5693088722327716739,2147858288623464010]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15524063101320593432,10022011492683157993]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14556973752653035032,10499433159243229334]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1934112228416746928,18062520869078565162]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18272308394612376465,2983342869845535113]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7982440001281678496,5082264322901945876]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17333179571007866912,15310387900280001912]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17767206385810259554,6284392829264960128]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6917085151040958166,7936695879549379973]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14883612992525439991,13188753928230923968]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8362867231865330830,11957228790523419708]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13374155178358367403,7714447127929209529]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7401024017757537210,13419518921059338139]}},{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","num":15,"id":{"name":"adler32","disambiguator":[14035633471636886844,1714548495738443378]}}],"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":0,"byte_end":4325,"line_start":1,"line_end":158,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":887,"byte_end":901,"line_start":32,"line_end":32,"column_start":24,"column_end":38},"alias_span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":905,"byte_end":921,"line_start":32,"line_end":32,"column_start":42,"column_end":58},"name":"mz_adler32_oxide","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":947,"byte_end":962,"line_start":33,"line_end":33,"column_start":25,"column_end":40},"alias_span":null,"name":"MZ_ADLER32_INIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":964,"byte_end":986,"line_start":33,"line_end":33,"column_start":42,"column_end":64},"alias_span":null,"name":"MZ_DEFAULT_WINDOW_BITS","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":0,"byte_end":4325,"line_start":1,"line_end":158,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":322},{"krate":0,"index":515},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":829},{"krate":0,"index":860},{"krate":0,"index":859},{"krate":0,"index":857},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":848},{"krate":0,"index":526},{"krate":0,"index":862},{"krate":0,"index":884},{"krate":0,"index":883},{"krate":0,"index":881},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":872},{"krate":0,"index":886},{"krate":0,"index":920},{"krate":0,"index":919},{"krate":0,"index":917},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":908},{"krate":0,"index":922},{"krate":0,"index":939},{"krate":0,"index":938},{"krate":0,"index":936},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":927},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":941},{"krate":0,"index":958},{"krate":0,"index":957},{"krate":0,"index":955},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":945},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536}],"decl_id":null,"docs":" A pure rust replacement for the [miniz](https://github.com/richgel999/miniz)\n DEFLATE/zlib encoder/decoder.\n The plan for this crate is to be used as a back-end for the\n [flate2](https://github.com/alexcrichton/flate2-rs) crate and eventually remove the\n need to depend on a C library.","sig":null,"attributes":[{"value":"! A pure rust replacement for the [miniz](https://github.com/richgel999/miniz)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! DEFLATE/zlib encoder/decoder.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":81,"byte_end":114,"line_start":2,"line_end":2,"column_start":1,"column_end":34}},{"value":"! The plan for this crate is to be used as a back-end for the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":115,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! [flate2](https://github.com/alexcrichton/flate2-rs) crate and eventually remove the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":179,"byte_end":266,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"! need to depend on a C library.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":267,"byte_end":301,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":302,"byte_end":305,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":306,"byte_end":317,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"! ## Simple compression/decompression:","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":318,"byte_end":358,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"! ``` rust","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":359,"byte_end":371,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":372,"byte_end":375,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! use miniz_oxide::inflate::decompress_to_vec;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":376,"byte_end":424,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"! use miniz_oxide::deflate::compress_to_vec;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":425,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! fn roundtrip(data: &[u8]) {","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":476,"byte_end":507,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"!     let compressed = compress_to_vec(data, 6);","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":508,"byte_end":558,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"!     let decompressed = decompress_to_vec(compressed.as_slice()).expect(\"Failed to decompress!\");","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":559,"byte_end":659,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"! #   let _ = decompressed;","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":660,"byte_end":689,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":690,"byte_end":695,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":696,"byte_end":699,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # roundtrip(b\"Test_data test data lalalal blabla\");","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":700,"byte_end":755,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":756,"byte_end":759,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":760,"byte_end":767,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":769,"byte_end":792,"line_start":24,"line_end":24,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deflate","qualname":"::deflate","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":32},{"krate":0,"index":303},{"krate":0,"index":318},{"krate":0,"index":642},{"krate":0,"index":673},{"krate":0,"index":672},{"krate":0,"index":670},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":661},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" This module contains functionality for compression.\n","sig":null,"attributes":[{"value":"! This module contains functionality for compression.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4327,"byte_end":4382,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::deflate::core","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":59},{"krate":0,"index":552},{"krate":0,"index":557},{"krate":0,"index":555},{"krate":0,"index":61},{"krate":0,"index":558},{"krate":0,"index":586},{"krate":0,"index":585},{"krate":0,"index":583},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":574},{"krate":0,"index":588},{"krate":0,"index":613},{"krate":0,"index":612},{"krate":0,"index":610},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":601},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":615},{"krate":0,"index":640},{"krate":0,"index":639},{"krate":0,"index":637},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":628},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":109},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":208},{"krate":0,"index":229},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":249},{"krate":0,"index":267},{"krate":0,"index":272},{"krate":0,"index":279},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302}],"decl_id":null,"docs":" Streaming compression functionality.\n","sig":null,"attributes":[{"value":"! Streaming compression functionality.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":12471,"byte_end":12511,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":61},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21120,"byte_end":21133,"line_start":162,"line_end":162,"column_start":9,"column_end":22},"name":"deflate_flags","qualname":"::deflate::core::deflate_flags","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":62},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21189,"byte_end":21212,"line_start":164,"line_end":164,"column_start":15,"column_end":38},"name":"TDEFL_WRITE_ZLIB_HEADER","qualname":"::deflate::core::deflate_flags::TDEFL_WRITE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Whether to use a zlib wrapper.\n","sig":null,"attributes":[{"value":"/ Whether to use a zlib wrapper.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21140,"byte_end":21174,"line_start":163,"line_end":163,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":63},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21295,"byte_end":21316,"line_start":166,"line_end":166,"column_start":15,"column_end":36},"name":"TDEFL_COMPUTE_ADLER32","qualname":"::deflate::core::deflate_flags::TDEFL_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we compute the adler32 checksum.\n","sig":null,"attributes":[{"value":"/ Should we compute the adler32 checksum.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21237,"byte_end":21280,"line_start":165,"line_end":165,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":64},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21489,"byte_end":21514,"line_start":169,"line_end":169,"column_start":15,"column_end":40},"name":"TDEFL_GREEDY_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_GREEDY_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we use greedy parsing (as opposed to lazy parsing where look ahead one or more\n bytes to check for better matches.)\n","sig":null,"attributes":[{"value":"/ Should we use greedy parsing (as opposed to lazy parsing where look ahead one or more","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21341,"byte_end":21430,"line_start":167,"line_end":167,"column_start":5,"column_end":94}},{"value":"/ bytes to check for better matches.)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21435,"byte_end":21474,"line_start":168,"line_end":168,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":65},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21668,"byte_end":21703,"line_start":172,"line_end":172,"column_start":15,"column_end":50},"name":"TDEFL_NONDETERMINISTIC_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_NONDETERMINISTIC_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Used in miniz to skip zero-initializing hash and dict. We don't do this here, so\n this flag is ignored.\n","sig":null,"attributes":[{"value":"/ Used in miniz to skip zero-initializing hash and dict. We don't do this here, so","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21539,"byte_end":21623,"line_start":170,"line_end":170,"column_start":5,"column_end":89}},{"value":"/ this flag is ignored.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21628,"byte_end":21653,"line_start":171,"line_end":171,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":66},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21790,"byte_end":21807,"line_start":174,"line_end":174,"column_start":15,"column_end":32},"name":"TDEFL_RLE_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_RLE_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 0.\n","sig":null,"attributes":[{"value":"/ Only look for matches with a distance of 0.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21728,"byte_end":21775,"line_start":173,"line_end":173,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":67},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21899,"byte_end":21919,"line_start":176,"line_end":176,"column_start":15,"column_end":35},"name":"TDEFL_FILTER_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_FILTER_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only use matches that are at least 6 bytes long.\n","sig":null,"attributes":[{"value":"/ Only use matches that are at least 6 bytes long.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21832,"byte_end":21884,"line_start":175,"line_end":175,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":68},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22102,"byte_end":22131,"line_start":179,"line_end":179,"column_start":15,"column_end":44},"name":"TDEFL_FORCE_ALL_STATIC_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_STATIC_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output static blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[{"value":"/ Force the compressor to only output static blocks. (Blocks using the default huffman codes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":21944,"byte_end":22038,"line_start":177,"line_end":177,"column_start":5,"column_end":99}},{"value":"/ specified in the deflate specification.)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22043,"byte_end":22087,"line_start":178,"line_end":178,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":69},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22235,"byte_end":22261,"line_start":181,"line_end":181,"column_start":15,"column_end":41},"name":"TDEFL_FORCE_ALL_RAW_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_RAW_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output raw/uncompressed blocks.\n","sig":null,"attributes":[{"value":"/ Force the compressor to only output raw/uncompressed blocks.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22156,"byte_end":22220,"line_start":180,"line_end":180,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22550,"byte_end":22557,"line_start":191,"line_end":191,"column_start":5,"column_end":12},"name":"Default","qualname":"::deflate::core::CompressionStrategy::Default","value":"CompressionStrategy::Default","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Don't use any of the special strategies.\n","sig":null,"attributes":[{"value":"/ Don't use any of the special strategies.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22501,"byte_end":22545,"line_start":190,"line_end":190,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22624,"byte_end":22632,"line_start":193,"line_end":193,"column_start":5,"column_end":13},"name":"Filtered","qualname":"::deflate::core::CompressionStrategy::Filtered","value":"CompressionStrategy::Filtered","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Only use matches that are at least 5 bytes long.\n","sig":null,"attributes":[{"value":"/ Only use matches that are at least 5 bytes long.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22567,"byte_end":22619,"line_start":192,"line_end":192,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22708,"byte_end":22719,"line_start":195,"line_end":195,"column_start":5,"column_end":16},"name":"HuffmanOnly","qualname":"::deflate::core::CompressionStrategy::HuffmanOnly","value":"CompressionStrategy::HuffmanOnly","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Don't look for matches, only huffman encode the literals.\n","sig":null,"attributes":[{"value":"/ Don't look for matches, only huffman encode the literals.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22642,"byte_end":22703,"line_start":194,"line_end":194,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":568},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22814,"byte_end":22817,"line_start":197,"line_end":197,"column_start":5,"column_end":8},"name":"RLE","qualname":"::deflate::core::CompressionStrategy::RLE","value":"CompressionStrategy::RLE","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 1, i.e do run-length encoding only.\n","sig":null,"attributes":[{"value":"/ Only look for matches with a distance of 1, i.e do run-length encoding only.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22729,"byte_end":22809,"line_start":196,"line_end":196,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22954,"byte_end":22959,"line_start":200,"line_end":200,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::deflate::core::CompressionStrategy::Fixed","value":"CompressionStrategy::Fixed","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Only use static/fixed blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[{"value":"/ Only use static/fixed blocks. (Blocks using the default huffman codes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22827,"byte_end":22900,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ specified in the deflate specification.)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22905,"byte_end":22949,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":558},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22475,"byte_end":22494,"line_start":189,"line_end":189,"column_start":10,"column_end":29},"name":"CompressionStrategy","qualname":"::deflate::core::CompressionStrategy","value":"CompressionStrategy::{Default, Filtered, HuffmanOnly, RLE, Fixed}","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571}],"decl_id":null,"docs":" Strategy setting for compression.","sig":null,"attributes":[{"value":"/ Strategy setting for compression.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22285,"byte_end":22322,"line_start":184,"line_end":184,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22323,"byte_end":22326,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The non-default settings offer some special-case compression variants.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22327,"byte_end":22401,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"repr(i32)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22402,"byte_end":22414,"line_start":187,"line_end":187,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23176,"byte_end":23180,"line_start":208,"line_end":208,"column_start":5,"column_end":9},"name":"None","qualname":"::deflate::core::TDEFLFlush::None","value":"TDEFLFlush::None","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Compress as much as there is space for, and then return\n waiting for more input.\n","sig":null,"attributes":[{"value":"/ Compress as much as there is space for, and then return","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23080,"byte_end":23139,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ waiting for more input.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23144,"byte_end":23171,"line_start":207,"line_end":207,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23259,"byte_end":23263,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"Sync","qualname":"::deflate::core::TDEFLFlush::Sync","value":"TDEFLFlush::Sync","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Try to flush the current data and output an empty raw block.\n","sig":null,"attributes":[{"value":"/ Try to flush the current data and output an empty raw block.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23190,"byte_end":23254,"line_start":209,"line_end":209,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23389,"byte_end":23393,"line_start":213,"line_end":213,"column_start":5,"column_end":9},"name":"Full","qualname":"::deflate::core::TDEFLFlush::Full","value":"TDEFLFlush::Full","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Same as sync, but reset the dictionary so that the following data does not depend\n on previous data.\n","sig":null,"attributes":[{"value":"/ Same as sync, but reset the dictionary so that the following data does not depend","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23273,"byte_end":23358,"line_start":211,"line_end":211,"column_start":5,"column_end":90}},{"value":"/ on previous data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23363,"byte_end":23384,"line_start":212,"line_end":212,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23455,"byte_end":23461,"line_start":215,"line_end":215,"column_start":5,"column_end":11},"name":"Finish","qualname":"::deflate::core::TDEFLFlush::Finish","value":"TDEFLFlush::Finish","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Try to flush everything and end the stream.\n","sig":null,"attributes":[{"value":"/ Try to flush everything and end the stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23403,"byte_end":23450,"line_start":214,"line_end":214,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":588},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23063,"byte_end":23073,"line_start":205,"line_end":205,"column_start":10,"column_end":20},"name":"TDEFLFlush","qualname":"::deflate::core::TDEFLFlush","value":"TDEFLFlush::{None, Sync, Full, Finish}","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598}],"decl_id":null,"docs":" A list of deflate flush types.\n","sig":null,"attributes":[{"value":"/ A list of deflate flush types.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":22968,"byte_end":23002,"line_start":203,"line_end":203,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23869,"byte_end":23872,"line_start":231,"line_end":231,"column_start":12,"column_end":15},"name":"new","qualname":"<TDEFLFlush>::new","value":"fn (flush: i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":24265,"byte_end":24273,"line_start":246,"line_end":246,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::deflate::core::TDEFLStatus::BadParam","value":"TDEFLStatus::BadParam","parent":{"krate":0,"index":615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":24284,"byte_end":24296,"line_start":247,"line_end":247,"column_start":5,"column_end":17},"name":"PutBufFailed","qualname":"::deflate::core::TDEFLStatus::PutBufFailed","value":"TDEFLStatus::PutBufFailed","parent":{"krate":0,"index":615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":24307,"byte_end":24311,"line_start":248,"line_end":248,"column_start":5,"column_end":9},"name":"Okay","qualname":"::deflate::core::TDEFLStatus::Okay","value":"TDEFLStatus::Okay","parent":{"krate":0,"index":615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":625},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":24321,"byte_end":24325,"line_start":249,"line_end":249,"column_start":5,"column_end":9},"name":"Done","qualname":"::deflate::core::TDEFLStatus::Done","value":"TDEFLStatus::Done","parent":{"krate":0,"index":615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":615},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":24247,"byte_end":24258,"line_start":245,"line_end":245,"column_start":10,"column_end":21},"name":"TDEFLStatus","qualname":"::deflate::core::TDEFLStatus","value":"TDEFLStatus::{BadParam, PutBufFailed, Okay, Done}","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625}],"decl_id":null,"docs":" Return status codes.\n","sig":null,"attributes":[{"value":"/ Return status codes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":24149,"byte_end":24173,"line_start":242,"line_end":242,"column_start":1,"column_end":25}},{"value":"repr(i32)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":24174,"byte_end":24186,"line_start":243,"line_end":243,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":28976,"byte_end":28991,"line_start":395,"line_end":395,"column_start":12,"column_end":27},"name":"CompressorOxide","qualname":"::deflate::core::CompressorOxide","value":"CompressorOxide {  }","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Main compression struct.\n","sig":null,"attributes":[{"value":"/ Main compression struct.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":28936,"byte_end":28964,"line_start":394,"line_end":394,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29289,"byte_end":29292,"line_start":407,"line_end":407,"column_start":12,"column_end":15},"name":"new","qualname":"<CompressorOxide>::new","value":"fn (flags: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CompressorOxide` with the given flags.","sig":null,"attributes":[{"value":"/ Create a new `CompressorOxide` with the given flags.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29116,"byte_end":29172,"line_start":403,"line_end":403,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29177,"byte_end":29180,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29185,"byte_end":29196,"line_start":405,"line_end":405,"column_start":5,"column_end":16}},{"value":"/ This function may be changed to take different parameters in the future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29201,"byte_end":29277,"line_start":406,"line_end":406,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29698,"byte_end":29705,"line_start":419,"line_end":419,"column_start":12,"column_end":19},"name":"adler32","qualname":"<CompressorOxide>::adler32","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the adler32 checksum of the currently encoded data.\n","sig":null,"attributes":[{"value":"/ Get the adler32 checksum of the currently encoded data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29627,"byte_end":29686,"line_start":418,"line_end":418,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29880,"byte_end":29898,"line_start":425,"line_end":425,"column_start":12,"column_end":30},"name":"prev_return_status","qualname":"<CompressorOxide>::prev_return_status","value":"fn (&self) -> TDEFLStatus","parent":null,"children":[],"decl_id":null,"docs":" Get the return status of the previous [`compress`](fn.compress.html)\n call with this compressor.\n","sig":null,"attributes":[{"value":"/ Get the return status of the previous [`compress`](fn.compress.html)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29761,"byte_end":29833,"line_start":423,"line_end":423,"column_start":5,"column_end":77}},{"value":"/ call with this compressor.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29838,"byte_end":29868,"line_start":424,"line_end":424,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30137,"byte_end":30142,"line_start":433,"line_end":433,"column_start":12,"column_end":17},"name":"flags","qualname":"<CompressorOxide>::flags","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the raw compressor flags.","sig":null,"attributes":[{"value":"/ Get the raw compressor flags.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29973,"byte_end":30006,"line_start":429,"line_end":429,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30011,"byte_end":30014,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30019,"byte_end":30030,"line_start":431,"line_end":431,"column_start":5,"column_end":16}},{"value":"/ This function may be deprecated or changed in the future to use more rust-style flags.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30035,"byte_end":30125,"line_start":432,"line_end":432,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30295,"byte_end":30306,"line_start":438,"line_end":438,"column_start":12,"column_end":23},"name":"data_format","qualname":"<CompressorOxide>::data_format","value":"fn (&self) -> DataFormat","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the compressor is wrapping the data in a zlib format or not.\n","sig":null,"attributes":[{"value":"/ Returns whether the compressor is wrapping the data in a zlib format or not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30203,"byte_end":30283,"line_start":437,"line_end":437,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30616,"byte_end":30621,"line_start":449,"line_end":449,"column_start":12,"column_end":17},"name":"reset","qualname":"<CompressorOxide>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the state of the compressor, keeping the same parameters.","sig":null,"attributes":[{"value":"/ Reset the state of the compressor, keeping the same parameters.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30489,"byte_end":30556,"line_start":446,"line_end":446,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30561,"byte_end":30564,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This avoids re-allocating data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30569,"byte_end":30604,"line_start":448,"line_end":448,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31157,"byte_end":31178,"line_start":463,"line_end":463,"column_start":12,"column_end":33},"name":"set_compression_level","qualname":"<CompressorOxide>::set_compression_level","value":"fn (&mut self, level: CompressionLevel) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the compression level of the compressor.","sig":null,"attributes":[{"value":"/ Set the compression level of the compressor.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30908,"byte_end":30956,"line_start":458,"line_end":458,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30961,"byte_end":30964,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ Using this to change level after compresson has started is supported.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":30969,"byte_end":31042,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ # Notes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31047,"byte_end":31058,"line_start":461,"line_end":461,"column_start":5,"column_end":16}},{"value":"/ The compression strategy will be reset to the default one when this is called.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31063,"byte_end":31145,"line_start":462,"line_end":462,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31597,"byte_end":31622,"line_start":473,"line_end":473,"column_start":12,"column_end":37},"name":"set_compression_level_raw","qualname":"<CompressorOxide>::set_compression_level_raw","value":"fn (&mut self, level: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the compression level of the compressor using an integer value.","sig":null,"attributes":[{"value":"/ Set the compression level of the compressor using an integer value.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31325,"byte_end":31396,"line_start":468,"line_end":468,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31401,"byte_end":31404,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Using this to change level after compresson has started is supported.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31409,"byte_end":31482,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ # Notes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31487,"byte_end":31498,"line_start":471,"line_end":471,"column_start":5,"column_end":16}},{"value":"/ The compression strategy will be reset to the default one when this is called.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31503,"byte_end":31585,"line_start":472,"line_end":472,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":32214,"byte_end":32234,"line_start":487,"line_end":487,"column_start":12,"column_end":32},"name":"set_format_and_level","qualname":"<CompressorOxide>::set_format_and_level","value":"fn (&mut self, data_format: DataFormat, level: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the compression settings of the compressor.","sig":null,"attributes":[{"value":"/ Update the compression settings of the compressor.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31749,"byte_end":31803,"line_start":478,"line_end":478,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31808,"byte_end":31811,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Changing the `DataFormat` after compression has started will result in","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31816,"byte_end":31890,"line_start":480,"line_end":480,"column_start":5,"column_end":79}},{"value":"/ a corrupted stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31895,"byte_end":31918,"line_start":481,"line_end":481,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31923,"byte_end":31926,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31931,"byte_end":31942,"line_start":483,"line_end":483,"column_start":5,"column_end":16}},{"value":"/ This function mainly intented for setting the initial settings after e.g creating with","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":31947,"byte_end":32037,"line_start":484,"line_end":484,"column_start":5,"column_end":95}},{"value":"/ `default` or after calling `CompressorOxide::reset()`, and behaviour may be changed","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":32042,"byte_end":32129,"line_start":485,"line_end":485,"column_start":5,"column_end":92}},{"value":"/ to disallow calling it after starting compression in the future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":32134,"byte_end":32202,"line_start":486,"line_end":486,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":33138,"byte_end":33150,"line_start":515,"line_end":515,"column_start":12,"column_end":24},"name":"CallbackFunc","qualname":"::deflate::core::CallbackFunc","value":"CallbackFunc { put_buf_func }","parent":null,"children":[{"krate":0,"index":123}],"decl_id":null,"docs":" Callback function and user used in `compress_to_output`.\n","sig":null,"attributes":[{"value":"/ Callback function and user used in `compress_to_output`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":33066,"byte_end":33126,"line_start":514,"line_end":514,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":123},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":33165,"byte_end":33177,"line_start":516,"line_end":516,"column_start":9,"column_end":21},"name":"put_buf_func","qualname":"::deflate::core::CallbackFunc::put_buf_func","value":"std::boxed::Box<(dyn for<'r> std::ops::FnMut(&'r [u8]) -> bool + 'a)>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90999,"byte_end":91007,"line_start":2157,"line_end":2157,"column_start":8,"column_end":16},"name":"compress","qualname":"::deflate::core::compress","value":"fn (d: &mut CompressorOxide, in_buf: &[u8], out_buf: &mut [u8], flush: TDEFLFlush) -> (TDEFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Tries to compress as much as possible from `in_buf` and\n puts compressed output into `out_buf`.","sig":null,"attributes":[{"value":"/ Main compression function. Tries to compress as much as possible from `in_buf` and","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90488,"byte_end":90574,"line_start":2147,"line_end":2147,"column_start":1,"column_end":87}},{"value":"/ puts compressed output into `out_buf`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90575,"byte_end":90617,"line_start":2148,"line_end":2148,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90618,"byte_end":90621,"line_start":2149,"line_end":2149,"column_start":1,"column_end":4}},{"value":"/ The value of `flush` determines if the compressor should attempt to flush all output","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90622,"byte_end":90710,"line_start":2150,"line_end":2150,"column_start":1,"column_end":89}},{"value":"/ and alternatively try to finish the stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90711,"byte_end":90758,"line_start":2151,"line_end":2151,"column_start":1,"column_end":48}},{"value":"/ Should be `TDeflflush::Finish` on the final call.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90759,"byte_end":90812,"line_start":2152,"line_end":2152,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90813,"byte_end":90816,"line_start":2153,"line_end":2153,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90817,"byte_end":90830,"line_start":2154,"line_end":2154,"column_start":1,"column_end":14}},{"value":"/ Returns a tuple containing the current status of the compressor, the current position","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90831,"byte_end":90920,"line_start":2155,"line_end":2155,"column_start":1,"column_end":90}},{"value":"/ in the input buffer and the current position in the output buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":90921,"byte_end":90991,"line_start":2156,"line_end":2156,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":298},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91559,"byte_end":91577,"line_start":2178,"line_end":2178,"column_start":8,"column_end":26},"name":"compress_to_output","qualname":"::deflate::core::compress_to_output","value":"fn (d: &mut CompressorOxide, in_buf: &[u8], flush: TDEFLFlush, callback_func: impl FnMut(&[u8]) -> bool) -> (TDEFLStatus, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Callbacks output.","sig":null,"attributes":[{"value":"/ Main compression function. Callbacks output.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91257,"byte_end":91305,"line_start":2170,"line_end":2170,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91306,"byte_end":91309,"line_start":2171,"line_end":2171,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91310,"byte_end":91323,"line_start":2172,"line_end":2172,"column_start":1,"column_end":14}},{"value":"/ Returns a tuple containing the current status of the compressor, the current position","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91324,"byte_end":91413,"line_start":2173,"line_end":2173,"column_start":1,"column_end":90}},{"value":"/ in the input buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91414,"byte_end":91438,"line_start":2174,"line_end":2174,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91439,"byte_end":91442,"line_start":2175,"line_end":2175,"column_start":1,"column_end":4}},{"value":"/ The caller is responsible for ensuring the `CallbackFunc` struct will not cause undefined","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91443,"byte_end":91536,"line_start":2176,"line_end":2176,"column_start":1,"column_end":94}},{"value":"/ behaviour.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":91537,"byte_end":91551,"line_start":2177,"line_end":2177,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":302},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95547,"byte_end":95580,"line_start":2297,"line_end":2297,"column_start":8,"column_end":41},"name":"create_comp_flags_from_zip_params","qualname":"::deflate::core::create_comp_flags_from_zip_params","value":"fn (level: i32, window_bits: i32, strategy: i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Create a set of compression flags using parameters used by zlib and other compressors.\n Mainly intented for use with transition from c libraries as it deals with raw integers.","sig":null,"attributes":[{"value":"/ Create a set of compression flags using parameters used by zlib and other compressors.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":94898,"byte_end":94988,"line_start":2285,"line_end":2285,"column_start":1,"column_end":91}},{"value":"/ Mainly intented for use with transition from c libraries as it deals with raw integers.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":94989,"byte_end":95080,"line_start":2286,"line_end":2286,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95081,"byte_end":95084,"line_start":2287,"line_end":2287,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95085,"byte_end":95101,"line_start":2288,"line_end":2288,"column_start":1,"column_end":17}},{"value":"/ `level` determines compression level. Clamped to maximum of 10. Negative values result in","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95102,"byte_end":95195,"line_start":2289,"line_end":2289,"column_start":1,"column_end":94}},{"value":"/ `Compressionlevel::DefaultLevel`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95196,"byte_end":95233,"line_start":2290,"line_end":2290,"column_start":1,"column_end":38}},{"value":"/ `window_bits`: Above 0, wraps the stream in a zlib wrapper, 0 or negative for a raw deflate","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95234,"byte_end":95329,"line_start":2291,"line_end":2291,"column_start":1,"column_end":96}},{"value":"/ stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95330,"byte_end":95341,"line_start":2292,"line_end":2292,"column_start":1,"column_end":12}},{"value":"/ `strategy`: Sets the strategy if this conforms to any of the values in `CompressionStrategy`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95342,"byte_end":95439,"line_start":2293,"line_end":2293,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95440,"byte_end":95443,"line_start":2294,"line_end":2294,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95444,"byte_end":95455,"line_start":2295,"line_end":2295,"column_start":1,"column_end":12}},{"value":"/ This function may be removed or moved to the `miniz_oxide_c_api` in the future.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":95456,"byte_end":95539,"line_start":2296,"line_end":2296,"column_start":1,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":303},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::deflate::stream","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":317}],"decl_id":null,"docs":" Extra streaming compression functionality.","sig":null,"attributes":[{"value":"! Extra streaming compression functionality.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98086,"byte_end":98132,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98133,"byte_end":98136,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! As of now this is mainly inteded for use to build a higher-level wrapper.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98137,"byte_end":98214,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98215,"byte_end":98218,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! There is no DeflateState as the needed state is contained in the compressor struct itself.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98219,"byte_end":98313,"line_start":5,"line_end":5,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98864,"byte_end":98871,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"deflate","qualname":"::deflate::stream::deflate","value":"fn (compressor: &mut CompressorOxide, input: &[u8], output: &mut [u8], flush: MZFlush) -> StreamResult","parent":null,"children":[],"decl_id":null,"docs":" Try to compress from input to output with the given Compressor","sig":null,"attributes":[{"value":"/ Try to compress from input to output with the given Compressor","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98485,"byte_end":98551,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98552,"byte_end":98555,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98556,"byte_end":98568,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98569,"byte_end":98572,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Buf` If the size of the `output` slice is empty or no progress was made due to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98573,"byte_end":98673,"line_start":15,"line_end":15,"column_start":1,"column_end":101}},{"value":"/ lack of expected input data or called after the compression was finished without","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98674,"byte_end":98758,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ MZFlush::Finish.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98759,"byte_end":98779,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98780,"byte_end":98783,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Param` if the compressor parameters are set wrong.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/stream.rs","byte_start":98784,"byte_end":98856,"line_start":19,"line_end":19,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4865,"byte_end":4878,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"NoCompression","qualname":"::deflate::CompressionLevel::NoCompression","value":"CompressionLevel::NoCompression","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Don't do any compression, only output uncompressed blocks.\n","sig":null,"attributes":[{"value":"/ Don't do any compression, only output uncompressed blocks.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4798,"byte_end":4860,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":646},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4978,"byte_end":4987,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"BestSpeed","qualname":"::deflate::CompressionLevel::BestSpeed","value":"CompressionLevel::BestSpeed","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Fast compression. Uses a special compression routine that is optimized for speed.\n","sig":null,"attributes":[{"value":"/ Fast compression. Uses a special compression routine that is optimized for speed.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4888,"byte_end":4973,"line_start":16,"line_end":16,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":5076,"byte_end":5091,"line_start":19,"line_end":19,"column_start":5,"column_end":20},"name":"BestCompression","qualname":"::deflate::CompressionLevel::BestCompression","value":"CompressionLevel::BestCompression","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Slow/high compression. Do a lot of checks to try to find good matches.\n","sig":null,"attributes":[{"value":"/ Slow/high compression. Do a lot of checks to try to find good matches.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4997,"byte_end":5071,"line_start":18,"line_end":18,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":652},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":5145,"byte_end":5160,"line_start":21,"line_end":21,"column_start":5,"column_end":20},"name":"UberCompression","qualname":"::deflate::CompressionLevel::UberCompression","value":"CompressionLevel::UberCompression","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Even more checks, can be very slow.\n","sig":null,"attributes":[{"value":"/ Even more checks, can be very slow.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":5101,"byte_end":5140,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":655},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":5229,"byte_end":5241,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"name":"DefaultLevel","qualname":"::deflate::CompressionLevel::DefaultLevel","value":"CompressionLevel::DefaultLevel","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Default compromise between speed and compression.\n","sig":null,"attributes":[{"value":"/ Default compromise between speed and compression.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":5171,"byte_end":5224,"line_start":22,"line_end":22,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":658},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":5294,"byte_end":5312,"line_start":25,"line_end":25,"column_start":5,"column_end":23},"name":"DefaultCompression","qualname":"::deflate::CompressionLevel::DefaultCompression","value":"CompressionLevel::DefaultCompression","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Use the default compression level.\n","sig":null,"attributes":[{"value":"/ Use the default compression level.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":5251,"byte_end":5289,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":642},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4775,"byte_end":4791,"line_start":13,"line_end":13,"column_start":10,"column_end":26},"name":"CompressionLevel","qualname":"::deflate::CompressionLevel","value":"CompressionLevel::{NoCompression, BestSpeed, BestCompression, UberCompression, DefaultLevel, DefaultCompression}","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658}],"decl_id":null,"docs":" How much processing the compressor should do to compress the data.\n `NoCompression` and `Bestspeed` have special meanings, the other levels determine the number\n of checks for matches in the hash chains and whether to use lazy or greedy parsing.\n","sig":null,"attributes":[{"value":"/ How much processing the compressor should do to compress the data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4446,"byte_end":4516,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ `NoCompression` and `Bestspeed` have special meanings, the other levels determine the number","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4517,"byte_end":4613,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ of checks for matches in the hash chains and whether to use lazy or greedy parsing.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4614,"byte_end":4701,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"repr(i32)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4702,"byte_end":4714,"line_start":11,"line_end":11,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":319},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":7407,"byte_end":7422,"line_start":107,"line_end":107,"column_start":8,"column_end":23},"name":"compress_to_vec","qualname":"::deflate::compress_to_vec","value":"fn (input: &[u8], level: u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10).\n","sig":null,"attributes":[{"value":"/ Compress the input data to a vector, using the specified compression level (0-10).","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":7313,"byte_end":7399,"line_start":106,"line_end":106,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":320},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":7633,"byte_end":7653,"line_start":113,"line_end":113,"column_start":8,"column_end":28},"name":"compress_to_vec_zlib","qualname":"::deflate::compress_to_vec_zlib","value":"fn (input: &[u8], level: u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10), and with a\n zlib wrapper.\n","sig":null,"attributes":[{"value":"/ Compress the input data to a vector, using the specified compression level (0-10), and with a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":7510,"byte_end":7607,"line_start":111,"line_end":111,"column_start":1,"column_end":98}},{"value":"/ zlib wrapper.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":7608,"byte_end":7625,"line_start":112,"line_end":112,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":322},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inflate","qualname":"::inflate","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":444},{"krate":0,"index":459},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":793},{"krate":0,"index":827},{"krate":0,"index":826},{"krate":0,"index":824},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":815},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" This module contains functionality for decompression.\n","sig":null,"attributes":[{"value":"! This module contains functionality for decompression.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":101944,"byte_end":102001,"line_start":1,"line_end":1,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":325},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::inflate::core","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":343},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":675},{"krate":0,"index":757},{"krate":0,"index":755},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":747},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":766},{"krate":0,"index":774},{"krate":0,"index":772},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"decl_id":null,"docs":" Streaming decompression functionality.\n","sig":null,"attributes":[{"value":"! Streaming decompression functionality.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":106207,"byte_end":106249,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":335},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":106426,"byte_end":106444,"line_start":11,"line_end":11,"column_start":11,"column_end":29},"name":"TINFL_LZ_DICT_SIZE","qualname":"::inflate::core::TINFL_LZ_DICT_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110057,"byte_end":110070,"line_start":105,"line_end":105,"column_start":9,"column_end":22},"name":"inflate_flags","qualname":"::inflate::core::inflate_flags","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":362},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110133,"byte_end":110161,"line_start":107,"line_end":107,"column_start":15,"column_end":43},"name":"TINFL_FLAG_PARSE_ZLIB_HEADER","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_PARSE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we try to parse a zlib header?\n","sig":null,"attributes":[{"value":"/ Should we try to parse a zlib header?","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110077,"byte_end":110118,"line_start":106,"line_end":106,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":363},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110262,"byte_end":110287,"line_start":109,"line_end":109,"column_start":15,"column_end":40},"name":"TINFL_FLAG_HAS_MORE_INPUT","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_HAS_MORE_INPUT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" There is more input that hasn't been given to the decompressor yet.\n","sig":null,"attributes":[{"value":"/ There is more input that hasn't been given to the decompressor yet.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110176,"byte_end":110247,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":364},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110362,"byte_end":110402,"line_start":111,"line_end":111,"column_start":15,"column_end":55},"name":"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The output buffer should not wrap around.\n","sig":null,"attributes":[{"value":"/ The output buffer should not wrap around.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110302,"byte_end":110347,"line_start":110,"line_end":110,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":365},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110496,"byte_end":110522,"line_start":113,"line_end":113,"column_start":15,"column_end":41},"name":"TINFL_FLAG_COMPUTE_ADLER32","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we calculate the adler32 checksum of the output data?\n","sig":null,"attributes":[{"value":"/ Should we calculate the adler32 checksum of the output data?","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110417,"byte_end":110481,"line_start":112,"line_end":112,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110782,"byte_end":110799,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"DecompressorOxide","qualname":"::inflate::core::DecompressorOxide","value":"DecompressorOxide {  }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389}],"decl_id":null,"docs":" Main decompression struct.","sig":null,"attributes":[{"value":"/ Main decompression struct.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110736,"byte_end":110766,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":110767,"byte_end":110770,"line_start":127,"line_end":127,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":111980,"byte_end":111983,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<DecompressorOxide>::new","value":"fn () -> DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Create a new tinfl_decompressor with all fields set to 0.\n","sig":null,"attributes":[{"value":"/ Create a new tinfl_decompressor with all fields set to 0.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":111907,"byte_end":111968,"line_start":164,"line_end":164,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112120,"byte_end":112124,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"init","qualname":"<DecompressorOxide>::init","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the current state to `Start`.\n","sig":null,"attributes":[{"value":"/ Set the current state to `Start`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112057,"byte_end":112094,"line_start":169,"line_end":169,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112099,"byte_end":112108,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112351,"byte_end":112358,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"adler32","qualname":"<DecompressorOxide>::adler32","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the adler32 checksum of the currently decompressed data.\n","sig":null,"attributes":[{"value":"/ Returns the adler32 checksum of the currently decompressed data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112257,"byte_end":112325,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112330,"byte_end":112339,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142469,"byte_end":142479,"line_start":1020,"line_end":1020,"column_start":8,"column_end":18},"name":"decompress","qualname":"::inflate::core::decompress","value":"fn (r: &mut DecompressorOxide, in_buf: &[u8], out_cur: &mut Cursor<&mut [u8]>, flags: u32) -> (TINFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main decompression function. Keeps decompressing data from `in_buf` until the `in_buf` is\n empty, `out_cur` is full, the end of the deflate stream is hit, or there is an error in the\n deflate stream.","sig":null,"attributes":[{"value":"/ Main decompression function. Keeps decompressing data from `in_buf` until the `in_buf` is","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140397,"byte_end":140490,"line_start":985,"line_end":985,"column_start":1,"column_end":94}},{"value":"/ empty, `out_cur` is full, the end of the deflate stream is hit, or there is an error in the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140491,"byte_end":140586,"line_start":986,"line_end":986,"column_start":1,"column_end":96}},{"value":"/ deflate stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140587,"byte_end":140606,"line_start":987,"line_end":987,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140607,"byte_end":140610,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140611,"byte_end":140626,"line_start":989,"line_end":989,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140627,"byte_end":140630,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ `in_buf` is a reference to the compressed data that is to be decompressed. The decompressor will","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140631,"byte_end":140731,"line_start":991,"line_end":991,"column_start":1,"column_end":101}},{"value":"/ start at the first byte of this buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140732,"byte_end":140775,"line_start":992,"line_end":992,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140776,"byte_end":140779,"line_start":993,"line_end":993,"column_start":1,"column_end":4}},{"value":"/ `out_cur` is a mutable cursor into the buffer that will store the decompressed data, and that","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140780,"byte_end":140877,"line_start":994,"line_end":994,"column_start":1,"column_end":98}},{"value":"/ stores previously decompressed data if any.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140878,"byte_end":140925,"line_start":995,"line_end":995,"column_start":1,"column_end":48}},{"value":"/ * The position of the output cursor indicates where in the output buffer slice writing should","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":140926,"byte_end":141023,"line_start":996,"line_end":996,"column_start":1,"column_end":98}},{"value":"/ start.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141024,"byte_end":141034,"line_start":997,"line_end":997,"column_start":1,"column_end":11}},{"value":"/ * If TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF is not set, the output buffer is used in a","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141035,"byte_end":141127,"line_start":998,"line_end":998,"column_start":1,"column_end":93}},{"value":"/ wrapping manner, and it's size is required to be a power of 2.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141128,"byte_end":141194,"line_start":999,"line_end":999,"column_start":1,"column_end":67}},{"value":"/ * The decompression function normally needs access to 32KiB of the previously decompressed data","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141195,"byte_end":141294,"line_start":1000,"line_end":1000,"column_start":1,"column_end":100}},{"value":"/(or to the beginning of the decompressed data if less than 32KiB has been decompressed.)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141295,"byte_end":141386,"line_start":1001,"line_end":1001,"column_start":1,"column_end":92}},{"value":"/     - If this data is not available, decompression may fail.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141387,"byte_end":141451,"line_start":1002,"line_end":1002,"column_start":1,"column_end":65}},{"value":"/     - Some deflate compressors allow specifying a window size which limits match distances to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141452,"byte_end":141549,"line_start":1003,"line_end":1003,"column_start":1,"column_end":98}},{"value":"/ less than this, or alternatively an RLE mode where matches will only refer to the previous byte","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141550,"byte_end":141649,"line_start":1004,"line_end":1004,"column_start":1,"column_end":100}},{"value":"/ and thus allows a smaller output buffer. The window size can be specified in the zlib","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141650,"byte_end":141739,"line_start":1005,"line_end":1005,"column_start":1,"column_end":90}},{"value":"/ header structure, however, the header data should not be relied on to be correct.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141740,"byte_end":141825,"line_start":1006,"line_end":1006,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141826,"byte_end":141829,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ `flags`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141830,"byte_end":141841,"line_start":1008,"line_end":1008,"column_start":1,"column_end":12}},{"value":"/ Flags to indicate settings and status to the decompression function.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141842,"byte_end":141914,"line_start":1009,"line_end":1009,"column_start":1,"column_end":73}},{"value":"/ * The `TINFL_FLAG_HAS_MORE_INPUT` has to be specified if more compressed data is to be provided","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":141915,"byte_end":142014,"line_start":1010,"line_end":1010,"column_start":1,"column_end":100}},{"value":"/ in a subsequent call to this function.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142015,"byte_end":142057,"line_start":1011,"line_end":1011,"column_start":1,"column_end":43}},{"value":"/ * See the the [`inflate_flags`](inflate_flags/index.html) module for details on other flags.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142058,"byte_end":142154,"line_start":1012,"line_end":1012,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142155,"byte_end":142158,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142159,"byte_end":142172,"line_start":1014,"line_end":1014,"column_start":1,"column_end":14}},{"value":"/ returns a tuple containing the status of the compressor, the number of input bytes read, and the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142173,"byte_end":142273,"line_start":1015,"line_end":1015,"column_start":1,"column_end":101}},{"value":"/ number of bytes output to `out_cur`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142274,"byte_end":142314,"line_start":1016,"line_end":1016,"column_start":1,"column_end":41}},{"value":"/ Updates the position of `out_cur` to point to the next free spot in the output buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142315,"byte_end":142405,"line_start":1017,"line_end":1017,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142406,"byte_end":142409,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ This function shouldn't panic pending any bugs.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":142410,"byte_end":142461,"line_start":1019,"line_end":1019,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":459},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::inflate::stream","value":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":477},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" Extra streaming decompression functionality.","sig":null,"attributes":[{"value":"! Extra streaming decompression functionality.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":180699,"byte_end":180747,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":180748,"byte_end":180751,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! As of now this is mainly inteded for use to build a higher-level wrapper.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":180752,"byte_end":180829,"line_start":3,"line_end":3,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":181181,"byte_end":181193,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"InflateState","qualname":"::inflate::stream::InflateState","value":"InflateState {  }","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"decl_id":null,"docs":" A struct that compbines a decompressor with extra data for streaming decompression.","sig":null,"attributes":[{"value":"/ A struct that compbines a decompressor with extra data for streaming decompression.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":181078,"byte_end":181165,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":181166,"byte_end":181169,"line_start":12,"line_end":12,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182702,"byte_end":182705,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<InflateState>::new","value":"fn (data_format: DataFormat) -> InflateState","parent":null,"children":[],"decl_id":null,"docs":" Create a new state.","sig":null,"attributes":[{"value":"/ Create a new state.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182384,"byte_end":182407,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182412,"byte_end":182415,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this struct is quite large due to internal buffers, and as such storing it on","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182420,"byte_end":182511,"line_start":54,"line_end":54,"column_start":5,"column_end":96}},{"value":"/ the stack is not recommended.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182516,"byte_end":182549,"line_start":55,"line_end":55,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182554,"byte_end":182557,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182562,"byte_end":182578,"line_start":57,"line_end":57,"column_start":5,"column_end":21}},{"value":"/ `data_format`: Determines whether the compressed data is assumed to wrapped with zlib","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182583,"byte_end":182672,"line_start":58,"line_end":58,"column_start":5,"column_end":94}},{"value":"/ metadata.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182677,"byte_end":182690,"line_start":59,"line_end":59,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183040,"byte_end":183049,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"new_boxed","qualname":"<InflateState>::new_boxed","value":"fn (data_format: DataFormat) -> Box<InflateState>","parent":null,"children":[],"decl_id":null,"docs":" Create a new state on the heap.","sig":null,"attributes":[{"value":"/ Create a new state on the heap.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182852,"byte_end":182887,"line_start":66,"line_end":66,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182892,"byte_end":182895,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182900,"byte_end":182916,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/ `data_format`: Determines whether the compressed data is assumed to wrapped with zlib","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182921,"byte_end":183010,"line_start":69,"line_end":69,"column_start":5,"column_end":94}},{"value":"/ metadata.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183015,"byte_end":183028,"line_start":70,"line_end":70,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183258,"byte_end":183270,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"decompressor","qualname":"<InflateState>::decompressor","value":"fn (&mut self) -> &mut DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Access the innner decompressor.\n","sig":null,"attributes":[{"value":"/ Access the innner decompressor.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183211,"byte_end":183246,"line_start":77,"line_end":77,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183435,"byte_end":183446,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"last_status","qualname":"<InflateState>::last_status","value":"fn (&self) -> TINFLStatus","parent":null,"children":[],"decl_id":null,"docs":" Return the status of the last call to `inflate` with this `InflateState`.\n","sig":null,"attributes":[{"value":"/ Return the status of the last call to `inflate` with this `InflateState`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183346,"byte_end":183423,"line_start":82,"line_end":82,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183772,"byte_end":183798,"line_start":92,"line_end":92,"column_start":12,"column_end":38},"name":"new_boxed_with_window_bits","qualname":"<InflateState>::new_boxed_with_window_bits","value":"fn (window_bits: i32) -> Box<InflateState>","parent":null,"children":[],"decl_id":null,"docs":" Create a new state using miniz/zlib style window bits parameter.","sig":null,"attributes":[{"value":"/ Create a new state using miniz/zlib style window bits parameter.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183507,"byte_end":183575,"line_start":87,"line_end":87,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183580,"byte_end":183583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The decompressor does not support different window sizes. As such,","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183588,"byte_end":183658,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ any positive (>0) value will set the zlib header flag, while a negative one","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183663,"byte_end":183742,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ will not.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183747,"byte_end":183760,"line_start":91,"line_end":91,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184088,"byte_end":184093,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"reset","qualname":"<InflateState>::reset","value":"fn (&mut self, data_format: DataFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the decompressor without re-allocating memory, using the given\n data format.\n","sig":null,"attributes":[{"value":"/ Reset the decompressor without re-allocating memory, using the given","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":183983,"byte_end":184055,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ data format.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184060,"byte_end":184076,"line_start":99,"line_end":99,"column_start":5,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184831,"byte_end":184838,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"inflate","qualname":"::inflate::stream::inflate","value":"fn (state: &mut InflateState, input: &[u8], output: &mut [u8], flush: MZFlush) -> StreamResult","parent":null,"children":[],"decl_id":null,"docs":" Try to decompress from `input` to `output` with the given `InflateState`","sig":null,"attributes":[{"value":"/ Try to decompress from `input` to `output` with the given `InflateState`","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184440,"byte_end":184516,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184517,"byte_end":184520,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184521,"byte_end":184533,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184534,"byte_end":184537,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Buf` If the size of the `output` slice is empty or no progress was made due to","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184538,"byte_end":184638,"line_start":116,"line_end":116,"column_start":1,"column_end":101}},{"value":"/ lack of expected input data or called after the decompression was","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184639,"byte_end":184708,"line_start":117,"line_end":117,"column_start":1,"column_end":70}},{"value":"/ finished without MZFlush::Finish.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184709,"byte_end":184746,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184747,"byte_end":184750,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Returns `MZError::Param` if the compressor parameters are set wrong.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":184751,"byte_end":184823,"line_start":120,"line_end":120,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102671,"byte_end":102695,"line_start":25,"line_end":25,"column_start":5,"column_end":29},"name":"FailedCannotMakeProgress","qualname":"::inflate::TINFLStatus::FailedCannotMakeProgress","value":"TINFLStatus::FailedCannotMakeProgress","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" More input data was expected, but the caller indicated that there was more data, so the\n input stream is likely truncated.\n","sig":null,"attributes":[{"value":"/ More input data was expected, but the caller indicated that there was more data, so the","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102533,"byte_end":102624,"line_start":23,"line_end":23,"column_start":5,"column_end":96}},{"value":"/ input stream is likely truncated.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102629,"byte_end":102666,"line_start":24,"line_end":24,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":797},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102808,"byte_end":102816,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::inflate::TINFLStatus::BadParam","value":"TINFLStatus::BadParam","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" One or more of the input parameters were invalid.\n","sig":null,"attributes":[{"value":"/ One or more of the input parameters were invalid.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102750,"byte_end":102803,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":800},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102969,"byte_end":102984,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"Adler32Mismatch","qualname":"::inflate::TINFLStatus::Adler32Mismatch","value":"TINFLStatus::Adler32Mismatch","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" The decompression went fine, but the adler32 checksum did not match the one\n provided in the header.\n","sig":null,"attributes":[{"value":"/ The decompression went fine, but the adler32 checksum did not match the one","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102853,"byte_end":102932,"line_start":28,"line_end":28,"column_start":5,"column_end":84}},{"value":"/ provided in the header.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102937,"byte_end":102964,"line_start":29,"line_end":29,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":803},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103078,"byte_end":103084,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Failed","qualname":"::inflate::TINFLStatus::Failed","value":"TINFLStatus::Failed","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" Failed to decompress due to invalid data.\n","sig":null,"attributes":[{"value":"/ Failed to decompress due to invalid data.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103028,"byte_end":103073,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":806},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103164,"byte_end":103168,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"Done","qualname":"::inflate::TINFLStatus::Done","value":"TINFLStatus::Done","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" Finished decomression without issues.\n","sig":null,"attributes":[{"value":"/ Finished decomression without issues.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103118,"byte_end":103159,"line_start":33,"line_end":33,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":809},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103274,"byte_end":103288,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"NeedsMoreInput","qualname":"::inflate::TINFLStatus::NeedsMoreInput","value":"TINFLStatus::NeedsMoreInput","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" The decompressor needs more input data to continue decompressing.\n","sig":null,"attributes":[{"value":"/ The decompressor needs more input data to continue decompressing.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103200,"byte_end":103269,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":812},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103406,"byte_end":103419,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"HasMoreOutput","qualname":"::inflate::TINFLStatus::HasMoreOutput","value":"TINFLStatus::HasMoreOutput","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" There is still pending data that didn't fit in the output buffer.\n","sig":null,"attributes":[{"value":"/ There is still pending data that didn't fit in the output buffer.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103332,"byte_end":103401,"line_start":37,"line_end":37,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":793},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102515,"byte_end":102526,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"TINFLStatus","qualname":"::inflate::TINFLStatus","value":"TINFLStatus::{FailedCannotMakeProgress, BadParam, Adler32Mismatch, Failed, Done, NeedsMoreInput, HasMoreOutput}","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812}],"decl_id":null,"docs":" Return status codes.\n","sig":null,"attributes":[{"value":"/ Return status codes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102418,"byte_end":102442,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"repr(i8)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102443,"byte_end":102454,"line_start":20,"line_end":20,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103491,"byte_end":103499,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<TINFLStatus>::from_i32","value":"fn (value: i32) -> Option<TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104247,"byte_end":104264,"line_start":61,"line_end":61,"column_start":8,"column_end":25},"name":"decompress_to_vec","qualname":"::inflate::decompress_to_vec","value":"fn (input: &[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data in `input` to a vector.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data in `input` to a vector.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104071,"byte_end":104134,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104135,"byte_end":104138,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Returns a status and an integer representing where the decompressor failed on failure.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104139,"byte_end":104229,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104230,"byte_end":104239,"line_start":60,"line_end":60,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104552,"byte_end":104574,"line_start":69,"line_end":69,"column_start":8,"column_end":30},"name":"decompress_to_vec_zlib","qualname":"::inflate::decompress_to_vec_zlib","value":"fn (input: &[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104354,"byte_end":104439,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104440,"byte_end":104443,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Returns a status and an integer representing where the decompressor failed on failure.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104444,"byte_end":104534,"line_start":67,"line_end":67,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":104535,"byte_end":104544,"line_start":68,"line_end":68,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":517},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/shared.rs","byte_start":191386,"byte_end":191401,"line_start":4,"line_end":4,"column_start":11,"column_end":26},"name":"MZ_ADLER32_INIT","qualname":"::shared::MZ_ADLER32_INIT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":518},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/shared.rs","byte_start":191438,"byte_end":191460,"line_start":7,"line_end":7,"column_start":11,"column_end":33},"name":"MZ_DEFAULT_WINDOW_BITS","qualname":"::shared::MZ_DEFAULT_WINDOW_BITS","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/shared.rs","byte_start":191614,"byte_end":191628,"line_start":14,"line_end":14,"column_start":8,"column_end":22},"name":"update_adler32","qualname":"::shared::update_adler32","value":"fn (adler: u32, data: &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":830},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1271,"byte_end":1275,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"None","qualname":"::MZFlush::None","value":"MZFlush::None","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Don't force any flushing.\n Used when more input data is expected.\n","sig":null,"attributes":[{"value":"/ Don't force any flushing.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1190,"byte_end":1219,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ Used when more input data is expected.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1224,"byte_end":1266,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":833},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1350,"byte_end":1357,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"name":"Partial","qualname":"::MZFlush::Partial","value":"MZFlush::Partial","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Zlib partial flush.\n Currently treated as `Sync`.\n","sig":null,"attributes":[{"value":"/ Zlib partial flush.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1285,"byte_end":1308,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"/ Currently treated as `Sync`.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1313,"byte_end":1345,"line_start":45,"line_end":45,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":836},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1491,"byte_end":1495,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Sync","qualname":"::MZFlush::Sync","value":"MZFlush::Sync","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Finish compressing the currently buffered data, and output an empty raw block.\n Has no use in decompression.\n","sig":null,"attributes":[{"value":"/ Finish compressing the currently buffered data, and output an empty raw block.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1367,"byte_end":1449,"line_start":47,"line_end":47,"column_start":5,"column_end":87}},{"value":"/ Has no use in decompression.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1454,"byte_end":1486,"line_start":48,"line_end":48,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":839},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1697,"byte_end":1701,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Full","qualname":"::MZFlush::Full","value":"MZFlush::Full","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Same as `Sync`, but resets the compression dictionary so that further compressed\n data does not depend on data compressed before the flush.\n Has no use in decompression.\n","sig":null,"attributes":[{"value":"/ Same as `Sync`, but resets the compression dictionary so that further compressed","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1505,"byte_end":1589,"line_start":50,"line_end":50,"column_start":5,"column_end":89}},{"value":"/ data does not depend on data compressed before the flush.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1594,"byte_end":1655,"line_start":51,"line_end":51,"column_start":5,"column_end":66}},{"value":"/ Has no use in decompression.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1660,"byte_end":1692,"line_start":52,"line_end":52,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":842},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1775,"byte_end":1781,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Finish","qualname":"::MZFlush::Finish","value":"MZFlush::Finish","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Attempt to flush the remaining data and end the stream.\n","sig":null,"attributes":[{"value":"/ Attempt to flush the remaining data and end the stream.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1711,"byte_end":1770,"line_start":54,"line_end":54,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":845},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1816,"byte_end":1821,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Block","qualname":"::MZFlush::Block","value":"MZFlush::Block","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Not implemented.\n","sig":null,"attributes":[{"value":"/ Not implemented.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1791,"byte_end":1811,"line_start":56,"line_end":56,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":829},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1176,"byte_end":1183,"line_start":40,"line_end":40,"column_start":10,"column_end":17},"name":"MZFlush","qualname":"::MZFlush","value":"MZFlush::{None, Partial, Sync, Full, Finish, Block}","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845}],"decl_id":null,"docs":" A list of flush types.","sig":null,"attributes":[{"value":"/ A list of flush types.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":990,"byte_end":1016,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ See [http://www.bolet.org/~pornin/deflate-flush.html] for more in-depth info.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1021,"byte_end":1102,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"repr(i32)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1103,"byte_end":1115,"line_start":38,"line_end":38,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1971,"byte_end":1974,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<MZFlush>::new","value":"fn (flush: i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":" Create an MZFlush value from an integer value.","sig":null,"attributes":[{"value":"/ Create an MZFlush value from an integer value.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1849,"byte_end":1899,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1904,"byte_end":1907,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Returns `MZError::Param` on invalid values.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1912,"byte_end":1959,"line_start":63,"line_end":63,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":863},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2376,"byte_end":2378,"line_start":79,"line_end":79,"column_start":5,"column_end":7},"name":"Ok","qualname":"::MZStatus::Ok","value":"MZStatus::Ok","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":866},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2388,"byte_end":2397,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::MZStatus::StreamEnd","value":"MZStatus::StreamEnd","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":869},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2407,"byte_end":2415,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"NeedDict","qualname":"::MZStatus::NeedDict","value":"MZStatus::NeedDict","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":862},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2361,"byte_end":2369,"line_start":78,"line_end":78,"column_start":10,"column_end":18},"name":"MZStatus","qualname":"::MZStatus","value":"MZStatus::{Ok, StreamEnd, NeedDict}","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869}],"decl_id":null,"docs":" A list of miniz successful status codes.\n","sig":null,"attributes":[{"value":"/ A list of miniz successful status codes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2243,"byte_end":2287,"line_start":75,"line_end":75,"column_start":1,"column_end":45}},{"value":"repr(i32)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2288,"byte_end":2300,"line_start":76,"line_end":76,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2552,"byte_end":2557,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"ErrNo","qualname":"::MZError::ErrNo","value":"MZError::ErrNo","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":890},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2568,"byte_end":2574,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Stream","qualname":"::MZError::Stream","value":"MZError::Stream","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2585,"byte_end":2589,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Data","qualname":"::MZError::Data","value":"MZError::Data","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":896},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2600,"byte_end":2603,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"Mem","qualname":"::MZError::Mem","value":"MZError::Mem","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2614,"byte_end":2617,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"Buf","qualname":"::MZError::Buf","value":"MZError::Buf","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":902},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2628,"byte_end":2635,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Version","qualname":"::MZError::Version","value":"MZError::Version","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2646,"byte_end":2651,"line_start":94,"line_end":94,"column_start":5,"column_end":10},"name":"Param","qualname":"::MZError::Param","value":"MZError::Param","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":886},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2538,"byte_end":2545,"line_start":87,"line_end":87,"column_start":10,"column_end":17},"name":"MZError","qualname":"::MZError","value":"MZError::{ErrNo, Stream, Data, Mem, Buf, Version, Param}","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905}],"decl_id":null,"docs":" A list of miniz failed status codes.\n","sig":null,"attributes":[{"value":"/ A list of miniz failed status codes.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2424,"byte_end":2464,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"repr(i32)","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2465,"byte_end":2477,"line_start":85,"line_end":85,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2855,"byte_end":2859,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Zlib","qualname":"::DataFormat::Zlib","value":"DataFormat::Zlib","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" Wrapped using the [zlib](http://www.zlib.org/rfc-zlib.html) format.\n","sig":null,"attributes":[{"value":"/ Wrapped using the [zlib](http://www.zlib.org/rfc-zlib.html) format.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2779,"byte_end":2850,"line_start":100,"line_end":100,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2886,"byte_end":2889,"line_start":103,"line_end":103,"column_start":5,"column_end":8},"name":"Raw","qualname":"::DataFormat::Raw","value":"DataFormat::Raw","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" Raw DEFLATE.\n","sig":null,"attributes":[{"value":"/ Raw DEFLATE.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2865,"byte_end":2881,"line_start":102,"line_end":102,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":922},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2762,"byte_end":2772,"line_start":99,"line_end":99,"column_start":10,"column_end":20},"name":"DataFormat","qualname":"::DataFormat","value":"DataFormat::{Zlib, Raw}","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":925}],"decl_id":null,"docs":" How compressed data is wrapped.\n","sig":null,"attributes":[{"value":"/ How compressed data is wrapped.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2666,"byte_end":2701,"line_start":97,"line_end":97,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":531},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3400,"byte_end":3408,"line_start":124,"line_end":124,"column_start":10,"column_end":18},"name":"MZResult","qualname":"::MZResult","value":"Result<MZStatus, MZError>","parent":null,"children":[],"decl_id":null,"docs":" `Result` alias for all miniz status codes both successful and failed.\n","sig":null,"attributes":[{"value":"/ `Result` alias for all miniz status codes both successful and failed.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3317,"byte_end":3390,"line_start":123,"line_end":123,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3594,"byte_end":3606,"line_start":128,"line_end":128,"column_start":12,"column_end":24},"name":"StreamResult","qualname":"::StreamResult","value":"StreamResult { bytes_consumed, bytes_written, status }","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":" A structure containg the result of a call to the inflate or deflate streaming functions.\n","sig":null,"attributes":[{"value":"/ A structure containg the result of a call to the inflate or deflate streaming functions.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3439,"byte_end":3531,"line_start":126,"line_end":126,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":942},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3676,"byte_end":3690,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"name":"bytes_consumed","qualname":"::StreamResult::bytes_consumed","value":"usize","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" The number of bytes consumed from the input slice.\n","sig":null,"attributes":[{"value":"/ The number of bytes consumed from the input slice.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3613,"byte_end":3667,"line_start":129,"line_end":129,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":943},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3764,"byte_end":3777,"line_start":132,"line_end":132,"column_start":9,"column_end":22},"name":"bytes_written","qualname":"::StreamResult::bytes_written","value":"usize","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" The number of bytes written to the output slice.\n","sig":null,"attributes":[{"value":"/ The number of bytes written to the output slice.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3703,"byte_end":3755,"line_start":131,"line_end":131,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":944},"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3833,"byte_end":3839,"line_start":134,"line_end":134,"column_start":9,"column_end":15},"name":"status","qualname":"::StreamResult::status","value":"std::result::Result<MZStatus, MZError>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" The return status of the call.\n","sig":null,"attributes":[{"value":"/ The return status of the call.","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3790,"byte_end":3824,"line_start":133,"line_end":133,"column_start":5,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/buffer.rs","byte_start":11955,"byte_end":11966,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/buffer.rs","byte_start":12079,"byte_end":12090,"line_start":26,"line_end":26,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/buffer.rs","byte_start":12357,"byte_end":12365,"line_start":40,"line_end":40,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23493,"byte_end":23503,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23845,"byte_end":23855,"line_start":230,"line_end":230,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29094,"byte_end":29109,"line_start":402,"line_end":402,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":32573,"byte_end":32588,"line_start":498,"line_end":498,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":33227,"byte_end":33239,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":33912,"byte_end":33923,"line_start":543,"line_end":543,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":34825,"byte_end":34836,"line_start":575,"line_end":575,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":35805,"byte_end":35818,"line_start":611,"line_end":611,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":37358,"byte_end":37375,"line_start":665,"line_end":665,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":38659,"byte_end":38668,"line_start":715,"line_end":715,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":40428,"byte_end":40431,"line_start":766,"line_end":766,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":42120,"byte_end":42132,"line_start":813,"line_end":813,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":42397,"byte_end":42409,"line_start":823,"line_end":823,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":54719,"byte_end":54728,"line_start":1182,"line_end":1182,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":61874,"byte_end":61885,"line_start":1377,"line_end":1377,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":63462,"byte_end":63469,"line_start":1434,"line_end":1434,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":107022,"byte_end":107034,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":111883,"byte_end":111900,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112581,"byte_end":112598,"line_start":187,"line_end":187,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":114310,"byte_end":114315,"line_start":259,"line_end":259,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/output_buffer.rs","byte_start":179512,"byte_end":179524,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":181974,"byte_end":181986,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182365,"byte_end":182377,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103466,"byte_end":103477,"line_start":41,"line_end":41,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1835,"byte_end":1842,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2899,"byte_end":2909,"line_start":106,"line_end":106,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3859,"byte_end":3871,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":4123,"byte_end":4131,"line_start":148,"line_end":148,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":4246,"byte_end":4254,"line_start":154,"line_end":154,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":825,"byte_end":832,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4404,"byte_end":4408,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":32}},{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/mod.rs","byte_start":4418,"byte_end":4424,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":303}},{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":842,"byte_end":849,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":322}},{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102049,"byte_end":102053,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":325}},{"kind":"Mod","span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":102082,"byte_end":102088,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":459}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/buffer.rs","byte_start":11955,"byte_end":11966,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/buffer.rs","byte_start":12079,"byte_end":12090,"line_start":26,"line_end":26,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/buffer.rs","byte_start":12357,"byte_end":12365,"line_start":40,"line_end":40,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23493,"byte_end":23503,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":23845,"byte_end":23855,"line_start":230,"line_end":230,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":29094,"byte_end":29109,"line_start":402,"line_end":402,"column_start":6,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":32573,"byte_end":32588,"line_start":498,"line_end":498,"column_start":18,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":33227,"byte_end":33239,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":33912,"byte_end":33923,"line_start":543,"line_end":543,"column_start":10,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":34825,"byte_end":34836,"line_start":575,"line_end":575,"column_start":10,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":35805,"byte_end":35818,"line_start":611,"line_end":611,"column_start":10,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":37358,"byte_end":37375,"line_start":665,"line_end":665,"column_start":10,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":38659,"byte_end":38668,"line_start":715,"line_end":715,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":40428,"byte_end":40431,"line_start":766,"line_end":766,"column_start":6,"column_end":9},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":42120,"byte_end":42132,"line_start":813,"line_end":813,"column_start":18,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":42397,"byte_end":42409,"line_start":823,"line_end":823,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":54719,"byte_end":54728,"line_start":1182,"line_end":1182,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":61874,"byte_end":61885,"line_start":1377,"line_end":1377,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/deflate/core.rs","byte_start":63462,"byte_end":63469,"line_start":1434,"line_end":1434,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":107022,"byte_end":107034,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":111883,"byte_end":111900,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":112581,"byte_end":112598,"line_start":187,"line_end":187,"column_start":18,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/core.rs","byte_start":114310,"byte_end":114315,"line_start":259,"line_end":259,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/output_buffer.rs","byte_start":179512,"byte_end":179524,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":181974,"byte_end":181986,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":477},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/stream.rs","byte_start":182365,"byte_end":182377,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/inflate/mod.rs","byte_start":103466,"byte_end":103477,"line_start":41,"line_end":41,"column_start":6,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":1835,"byte_end":1842,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":2899,"byte_end":2909,"line_start":106,"line_end":106,"column_start":6,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":3859,"byte_end":3871,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":4123,"byte_end":4131,"line_start":148,"line_end":148,"column_start":43,"column_end":51},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/adamtoth-fejel/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.3.6/src/lib.rs","byte_start":4246,"byte_end":4254,"line_start":154,"line_end":154,"column_start":44,"column_end":52},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":1807}}]}